
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '255C719C8B9FEB84861655C1FE4951FA'
    
_lr_action_items = {'DIVIDE':([13,15,19,26,27,28,30,31,38,43,50,53,57,61,62,65,74,80,82,89,90,91,92,97,105,121,132,134,181,190,191,192,198,199,213,222,223,],[-24,-85,-84,-23,-82,-86,-66,-72,116,-76,-79,-112,-80,-81,-114,-113,-73,-83,-78,-71,-78,-81,-23,-70,-27,-75,-23,-74,-115,-69,-68,-67,116,116,-77,-28,-87,]),'REMAINDER_ASSIGN':([13,26,53,62,65,82,105,132,181,222,],[-24,-23,-112,-114,-113,162,-27,-23,-115,-28,]),'RSHIFT':([13,15,19,26,27,28,30,31,38,42,43,50,52,53,57,61,62,65,74,80,82,89,90,91,92,97,105,121,132,134,181,190,191,192,193,194,198,199,201,202,203,204,213,222,223,],[-24,-85,-84,-23,-82,-86,-66,-72,-63,118,-76,-79,-60,-112,-80,-81,-114,-113,-73,-83,-78,-71,-78,-81,-23,-70,-27,-75,-23,-74,-115,-69,-68,-67,-62,-61,-64,-65,118,118,118,118,-77,-28,-87,]),'LESS':([13,15,19,26,27,28,30,31,38,42,43,50,52,53,57,59,61,62,65,74,80,82,89,90,91,92,97,105,121,132,134,181,190,191,192,193,194,198,199,201,202,203,204,208,209,213,222,223,],[-24,-85,-84,-23,-82,-86,-66,-72,-63,-55,-76,-79,-60,-112,-80,137,-81,-114,-113,-73,-83,-78,-71,-78,-81,-23,-70,-27,-75,-23,-74,-115,-69,-68,-67,-62,-61,-64,-65,-58,-56,-57,-59,137,137,-77,-28,-87,]),'MINUS_ASSIGN':([13,26,53,62,65,82,105,132,181,222,],[-24,-23,-112,-114,-113,160,-27,-23,-115,-28,]),'KEYWORD_SCAN':([7,8,9,11,13,18,22,23,24,33,37,41,44,47,48,51,53,55,56,60,62,65,70,72,75,76,77,78,86,87,88,93,94,96,98,99,105,107,108,109,110,111,114,120,123,124,126,146,147,148,149,150,151,153,154,155,156,172,173,181,196,200,212,222,226,231,234,242,243,256,261,282,289,292,313,314,317,318,326,327,],[-7,12,-4,-176,-24,-176,-176,-13,-15,-176,-176,-157,-176,-176,-176,-176,-112,-16,-11,-14,-114,-113,-176,-176,-176,-176,-176,-176,-125,-40,-159,-8,-6,-121,-132,-123,-27,-163,-26,-161,-23,-128,-122,-129,-124,-120,-119,12,-164,-175,-126,-94,-118,-130,-127,-131,12,-162,-160,-115,-176,-158,-12,-28,-25,-151,-150,-176,-174,-152,12,-135,-142,-140,-176,-141,-136,12,-176,12,]),'EQUAL':([13,15,19,26,27,28,30,31,38,42,43,50,52,53,57,59,61,62,65,68,74,80,82,89,90,91,92,97,105,121,132,134,181,190,191,192,193,194,198,199,201,202,203,204,208,209,211,213,222,223,],[-24,-85,-84,-23,-82,-86,-66,-72,-63,-55,-76,-79,-60,-112,-80,-52,-81,-114,-113,145,-73,-83,-78,-71,-78,-81,-23,-70,-27,-75,-23,-74,-115,-69,-68,-67,-62,-61,-64,-65,-58,-56,-57,-59,-54,-53,145,-77,-28,-87,]),'FUNTYPE':([13,15,17,19,27,28,29,30,31,34,35,38,42,43,49,50,52,53,57,59,62,65,68,73,74,80,82,89,90,91,92,97,105,121,131,132,134,174,181,190,191,192,193,194,197,198,199,201,202,203,204,208,209,211,213,214,222,223,225,227,255,],[-24,-85,-44,-84,-82,-86,-42,-66,-72,-17,-21,-63,-55,-76,-46,-79,-60,-112,-80,-52,-114,-113,-50,-48,-73,-83,-78,-71,-78,-81,-23,-70,-27,-75,-20,-23,-74,-47,-115,-69,-68,-67,-62,-61,-49,-64,-65,-58,-56,-57,-59,-54,-53,-51,-77,-22,-28,-87,-45,-43,274,]),'KEYWORD_BY':([13,15,17,19,27,28,29,30,31,34,35,38,42,43,49,50,52,53,57,59,62,65,68,73,74,80,82,87,89,90,91,92,97,105,121,131,132,134,174,181,190,191,192,193,194,197,198,199,201,202,203,204,208,209,211,213,214,222,223,225,227,264,287,288,],[-24,-85,-44,-84,-82,-86,-42,-66,-72,-17,-21,-63,-55,-76,-46,-79,-60,-112,-80,-52,-114,-113,-50,-48,-73,-83,-78,-40,-71,-78,-81,-23,-70,-27,-75,-20,-23,-74,-47,-115,-69,-68,-67,-62,-61,-49,-64,-65,-58,-56,-57,-59,-54,-53,-51,-77,-22,-28,-87,-45,-43,-176,-145,299,]),'KEYWORD_MATCH':([13,15,17,19,26,27,28,29,30,31,34,35,38,42,43,46,49,50,52,53,57,59,61,62,65,68,73,74,79,80,82,89,90,91,92,97,105,121,131,132,134,174,181,190,191,192,193,194,197,198,199,201,202,203,204,208,209,211,213,214,222,223,225,227,],[-24,-85,-44,-84,-23,-82,-86,-42,-66,-72,-17,-21,-63,-55,-76,122,-46,-79,-60,-112,-80,-52,-81,-114,-113,-50,-48,-73,-20,-83,-78,-71,-78,-81,-23,-70,-27,-75,-20,-23,-74,-47,-115,-69,-68,-67,-62,-61,-49,-64,-65,-58,-56,-57,-59,-54,-53,-51,-77,-22,-28,-87,-45,-43,]),'COLON':([140,141,178,219,241,],[205,-102,221,248,-101,]),'INST':([26,53,62,65,92,110,132,181,],[103,-112,-114,-113,103,103,103,-115,]),'LSHIFT':([13,15,19,26,27,28,30,31,38,42,43,50,52,53,57,61,62,65,74,80,82,89,90,91,92,97,105,121,132,134,181,190,191,192,193,194,198,199,201,202,203,204,213,222,223,],[-24,-85,-84,-23,-82,-86,-66,-72,-63,119,-76,-79,-60,-112,-80,-81,-114,-113,-73,-83,-78,-71,-78,-81,-23,-70,-27,-75,-23,-74,-115,-69,-68,-67,-62,-61,-64,-65,119,119,119,119,-77,-28,-87,]),'KEYWORD_PRINTLN':([7,8,9,11,13,18,22,23,24,33,37,41,44,47,48,51,53,55,56,60,62,65,70,72,75,76,77,78,86,87,88,93,94,96,98,99,105,107,108,109,110,111,114,120,123,124,126,146,147,148,149,150,151,153,154,155,156,172,173,181,196,200,212,222,226,231,234,242,243,256,261,282,289,292,313,314,317,318,326,327,],[-7,32,-4,-176,-24,-176,-176,-13,-15,-176,-176,-157,-176,-176,-176,-176,-112,-16,-11,-14,-114,-113,-176,-176,-176,-176,-176,-176,-125,-40,-159,-8,-6,-121,-132,-123,-27,-163,-26,-161,-23,-128,-122,-129,-124,-120,-119,32,-164,-175,-126,-94,-118,-130,-127,-131,32,-162,-160,-115,-176,-158,-12,-28,-25,-151,-150,-176,-174,-152,32,-135,-142,-140,-176,-141,-136,32,-176,32,]),'MINUS':([7,8,9,11,13,14,15,18,19,20,22,23,24,26,27,28,30,31,33,37,38,41,43,44,45,47,48,50,51,52,53,54,55,56,57,58,60,61,62,65,70,72,74,75,76,77,78,80,81,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,132,134,135,136,137,138,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,172,173,181,186,188,189,190,191,192,193,194,196,198,199,200,212,213,222,223,224,226,230,231,234,242,243,246,256,260,261,262,263,265,268,282,289,290,292,298,299,313,314,316,317,318,319,326,327,],[-7,14,-4,-176,-24,14,-85,-176,-84,14,-176,-13,-15,-23,-82,-86,-66,-72,-176,-176,-63,-157,-76,-176,14,-176,-176,-79,-176,128,-112,14,-16,-11,-80,14,-14,-81,-114,-113,-176,-176,-73,-176,-176,-176,-176,-83,14,-78,-125,-40,-159,-71,-78,-81,-23,-8,-6,14,-121,-70,-132,-123,14,14,-27,-176,-163,-26,-161,-23,-128,-176,-176,-122,14,14,14,14,14,-129,-75,-124,-120,14,-119,14,14,-23,-74,14,14,14,14,14,14,14,14,-164,-175,-126,-94,-118,14,-130,-127,-131,14,-30,-36,-34,-29,-32,-38,-35,-37,-31,14,-33,-39,-162,-160,-115,14,14,14,-69,-68,-67,128,128,-176,-64,-65,-158,-12,-77,-28,-87,14,-25,14,-151,-150,-176,-174,14,-152,14,14,14,-147,-146,-176,-135,-142,14,-140,14,14,-176,-141,14,-136,14,14,-176,14,]),'LSHIFT_ASSIGN':([13,26,53,62,65,82,105,132,181,222,],[-24,-23,-112,-114,-113,164,-27,-23,-115,-28,]),'KEYWORD_OBJECT':([0,1,3,4,6,7,8,9,11,13,18,22,23,24,33,37,41,44,47,48,51,53,55,56,60,62,65,70,72,75,76,77,78,86,87,88,93,94,96,98,99,105,107,108,109,110,111,114,120,123,124,126,146,147,148,149,150,151,153,154,155,156,172,173,181,196,200,212,222,226,231,234,243,256,282,289,292,314,317,],[5,5,-2,-3,-1,-7,5,-4,-176,-24,-176,-176,-13,-15,-176,-176,-157,-176,-176,-176,-176,-112,-16,-11,-14,-114,-113,-176,-176,-176,-176,-176,-176,-125,-40,-159,-8,-6,-121,-132,-123,-27,-163,-26,-161,-23,-128,-122,-129,-124,-120,-119,5,-164,-175,-126,-94,-118,-130,-127,-131,5,-162,-160,-115,-176,-158,-12,-28,-25,-151,-150,-174,-152,-135,-142,-140,-141,-136,]),'KEYWORD_RETURN':([7,8,9,11,13,18,22,23,24,33,37,41,44,47,48,51,53,55,56,60,62,65,70,72,75,76,77,78,86,87,88,93,94,96,98,99,105,107,108,109,110,111,114,120,123,124,126,146,147,148,149,150,151,153,154,155,156,172,173,181,196,200,212,222,226,231,234,242,243,256,261,282,289,292,313,314,317,318,326,327,],[-7,54,-4,-176,-24,-176,-176,-13,-15,-176,-176,-157,-176,-176,-176,-176,-112,-16,-11,-14,-114,-113,-176,-176,-176,-176,-176,-176,-125,-40,-159,-8,-6,-121,-132,-123,-27,-163,-26,-161,-23,-128,-122,-129,-124,-120,-119,54,-164,-175,-126,-94,-118,-130,-127,-131,54,-162,-160,-115,-176,-158,-12,-28,-25,-151,-150,-176,-174,-152,54,-135,-142,-140,-176,-141,-136,54,-176,54,]),'BOOL_CONSTF':([7,8,9,11,13,14,18,20,22,23,24,33,37,41,44,45,47,48,51,53,54,55,56,58,60,62,65,70,72,75,76,77,78,81,86,87,88,93,94,95,96,98,99,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,135,136,137,138,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,172,173,181,186,188,189,196,200,212,222,224,226,230,231,234,242,243,246,256,260,261,262,263,265,268,282,289,290,292,298,299,313,314,316,317,318,319,326,327,],[-7,15,-4,-176,-24,15,-176,15,-176,-13,-15,-176,-176,-157,-176,15,-176,-176,-176,-112,15,-16,-11,15,-14,-114,-113,-176,-176,-176,-176,-176,-176,15,-125,-40,-159,-8,-6,15,-121,-132,-123,15,15,-27,-176,-163,-26,-161,-23,-128,-176,-176,-122,15,15,15,15,15,-129,-124,-120,15,-119,15,15,15,15,15,15,15,15,15,15,-164,-175,-126,-94,-118,15,-130,-127,-131,15,-30,-36,-34,-29,-32,-38,-35,-37,-31,15,-33,-39,-162,-160,-115,15,15,15,-176,-158,-12,-28,15,-25,15,-151,-150,-176,-174,15,-152,15,15,15,-147,-146,-176,-135,-142,15,-140,15,15,-176,-141,15,-136,15,15,-176,15,]),'GEQ':([13,15,19,26,27,28,30,31,38,42,43,50,52,53,57,59,61,62,65,74,80,82,89,90,91,92,97,105,121,132,134,181,190,191,192,193,194,198,199,201,202,203,204,208,209,213,222,223,],[-24,-85,-84,-23,-82,-86,-66,-72,-63,-55,-76,-79,-60,-112,-80,135,-81,-114,-113,-73,-83,-78,-71,-78,-81,-23,-70,-27,-75,-23,-74,-115,-69,-68,-67,-62,-61,-64,-65,-58,-56,-57,-59,135,135,-77,-28,-87,]),'RPAREN':([13,15,17,19,27,28,29,30,31,34,35,38,42,43,49,50,52,53,57,59,62,65,68,73,74,80,82,87,89,90,91,92,97,100,101,104,105,121,131,132,134,157,174,175,176,177,179,181,182,183,184,185,190,191,192,193,194,197,198,199,201,202,203,204,207,208,209,211,213,214,216,222,223,225,227,228,235,236,238,240,245,249,250,251,264,287,288,294,300,301,302,307,308,320,322,],[-24,-85,-44,-84,-82,-86,-42,-66,-72,-17,-21,-63,-55,-76,-46,-79,-60,-112,-80,-52,-114,-113,-50,-48,-73,-83,-78,-40,-71,-78,-81,-23,-70,-176,-166,-176,-27,-75,-20,-23,-74,213,-47,-169,219,-167,-168,-115,223,-88,-89,-90,-69,-68,-67,-62,-61,-49,-64,-65,-58,-56,-57,-59,242,-54,-53,-51,-77,-22,-176,-28,-87,-45,-43,252,-109,-108,-107,-110,266,-170,-106,-91,-176,-145,-176,-111,-143,-149,309,313,-148,323,325,]),'LEQ':([13,15,19,26,27,28,30,31,38,42,43,50,52,53,57,59,61,62,65,74,80,82,89,90,91,92,97,105,121,132,134,181,190,191,192,193,194,198,199,201,202,203,204,208,209,213,222,223,],[-24,-85,-84,-23,-82,-86,-66,-72,-63,-55,-76,-79,-60,-112,-80,138,-81,-114,-113,-73,-83,-78,-71,-78,-81,-23,-70,-27,-75,-23,-74,-115,-69,-68,-67,-62,-61,-64,-65,-58,-56,-57,-59,138,138,-77,-28,-87,]),'OR_BITWISE':([13,15,17,19,26,27,28,30,31,38,42,43,49,50,52,53,57,59,61,62,65,68,73,74,80,82,89,90,91,92,97,105,121,132,134,174,181,190,191,192,193,194,197,198,199,201,202,203,204,208,209,211,213,222,223,225,],[-24,-85,95,-84,-23,-82,-86,-66,-72,-63,-55,-76,-46,-79,-60,-112,-80,-52,-81,-114,-113,-50,-48,-73,-83,-78,-71,-78,-81,-23,-70,-27,-75,-23,-74,-47,-115,-69,-68,-67,-62,-61,-49,-64,-65,-58,-56,-57,-59,-54,-53,-51,-77,-28,-87,95,]),'RBRAC':([13,15,17,19,27,28,29,30,31,34,35,38,42,43,49,50,52,53,57,59,62,65,68,73,74,80,82,89,90,91,92,97,105,121,131,132,134,174,180,181,190,191,192,193,194,197,198,199,201,202,203,204,208,209,211,213,214,222,223,225,227,235,236,238,240,276,294,305,310,],[-24,-85,-44,-84,-82,-86,-42,-66,-72,-17,-21,-63,-55,-76,-46,-79,-60,-112,-80,-52,-114,-113,-50,-48,-73,-83,-78,-71,-78,-81,-23,-70,-27,-75,-20,-23,-74,-47,222,-115,-69,-68,-67,-62,-61,-49,-64,-65,-58,-56,-57,-59,-54,-53,-51,-77,-22,-28,-87,-45,-43,-109,-108,-107,-110,294,-111,311,315,]),'TYPE_VOID':([248,],[270,]),'TYPE_INT':([205,221,248,259,296,304,],[235,235,235,276,235,235,]),'BOOL_CONSTT':([7,8,9,11,13,14,18,20,22,23,24,33,37,41,44,45,47,48,51,53,54,55,56,58,60,62,65,70,72,75,76,77,78,81,86,87,88,93,94,95,96,98,99,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,135,136,137,138,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,172,173,181,186,188,189,196,200,212,222,224,226,230,231,234,242,243,246,256,260,261,262,263,265,268,282,289,290,292,298,299,313,314,316,317,318,319,326,327,],[-7,19,-4,-176,-24,19,-176,19,-176,-13,-15,-176,-176,-157,-176,19,-176,-176,-176,-112,19,-16,-11,19,-14,-114,-113,-176,-176,-176,-176,-176,-176,19,-125,-40,-159,-8,-6,19,-121,-132,-123,19,19,-27,-176,-163,-26,-161,-23,-128,-176,-176,-122,19,19,19,19,19,-129,-124,-120,19,-119,19,19,19,19,19,19,19,19,19,19,-164,-175,-126,-94,-118,19,-130,-127,-131,19,-30,-36,-34,-29,-32,-38,-35,-37,-31,19,-33,-39,-162,-160,-115,19,19,19,-176,-158,-12,-28,19,-25,19,-151,-150,-176,-174,19,-152,19,19,19,-147,-146,-176,-135,-142,19,-140,19,19,-176,-141,19,-136,19,19,-176,19,]),'PLUS':([7,8,9,11,13,14,15,18,19,20,22,23,24,26,27,28,30,31,33,37,38,41,43,44,45,47,48,50,51,52,53,54,55,56,57,58,60,61,62,65,70,72,74,75,76,77,78,80,81,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,132,134,135,136,137,138,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,172,173,181,186,188,189,190,191,192,193,194,196,198,199,200,212,213,222,223,224,226,230,231,234,242,243,246,256,260,261,262,263,265,268,282,289,290,292,298,299,313,314,316,317,318,319,326,327,],[-7,20,-4,-176,-24,20,-85,-176,-84,20,-176,-13,-15,-23,-82,-86,-66,-72,-176,-176,-63,-157,-76,-176,20,-176,-176,-79,-176,127,-112,20,-16,-11,-80,20,-14,-81,-114,-113,-176,-176,-73,-176,-176,-176,-176,-83,20,-78,-125,-40,-159,-71,-78,-81,-23,-8,-6,20,-121,-70,-132,-123,20,20,-27,-176,-163,-26,-161,-23,-128,-176,-176,-122,20,20,20,20,20,-129,-75,-124,-120,20,-119,20,20,-23,-74,20,20,20,20,20,20,20,20,-164,-175,-126,-94,-118,20,-130,-127,-131,20,-30,-36,-34,-29,-32,-38,-35,-37,-31,20,-33,-39,-162,-160,-115,20,20,20,-69,-68,-67,127,127,-176,-64,-65,-158,-12,-77,-28,-87,20,-25,20,-151,-150,-176,-174,20,-152,20,20,20,-147,-146,-176,-135,-142,20,-140,20,20,-176,-141,20,-136,20,20,-176,20,]),'TILDA':([7,8,9,11,13,14,18,20,22,23,24,33,37,41,44,45,47,48,51,53,54,55,56,58,60,62,65,70,72,75,76,77,78,81,86,87,88,93,94,95,96,98,99,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,135,136,137,138,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,172,173,181,186,188,189,196,200,212,222,224,226,230,231,234,242,243,246,256,260,261,262,263,265,268,282,289,290,292,298,299,313,314,316,317,318,319,326,327,],[-7,58,-4,-176,-24,58,-176,58,-176,-13,-15,-176,-176,-157,-176,58,-176,-176,-176,-112,58,-16,-11,58,-14,-114,-113,-176,-176,-176,-176,-176,-176,58,-125,-40,-159,-8,-6,58,-121,-132,-123,58,58,-27,-176,-163,-26,-161,-23,-128,-176,-176,-122,58,58,58,58,58,-129,-124,-120,58,-119,58,58,58,58,58,58,58,58,58,58,-164,-175,-126,-94,-118,58,-130,-127,-131,58,-30,-36,-34,-29,-32,-38,-35,-37,-31,58,-33,-39,-162,-160,-115,58,58,58,-176,-158,-12,-28,58,-25,58,-151,-150,-176,-174,58,-152,58,58,58,-147,-146,-176,-135,-142,58,-140,58,58,-176,-141,58,-136,58,58,-176,58,]),'STRING':([32,85,],[107,172,]),'IDENTIFIER':([5,7,8,9,11,12,13,14,18,20,22,23,24,32,33,37,39,40,41,44,45,47,48,51,53,54,55,56,58,60,62,64,65,66,70,72,75,76,77,78,81,85,86,87,88,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,135,136,137,138,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,181,186,187,188,189,196,200,206,212,220,222,224,226,230,231,234,242,243,246,256,260,261,262,263,265,268,282,289,290,292,298,299,313,314,316,317,318,319,326,327,],[10,-7,62,-4,-176,88,-24,62,-176,62,-176,-13,-15,62,-176,-176,-92,-93,-157,-176,62,-176,-176,-176,-112,62,-16,-11,62,-14,-114,141,-113,142,-176,-176,-176,-176,-176,-176,62,62,-125,-40,-159,-8,-6,62,-121,-132,-123,178,-166,62,62,62,-27,-176,-163,-26,-161,-23,-128,-176,-176,-122,62,62,62,62,62,-129,-124,-120,62,-119,62,62,62,62,62,62,62,62,62,62,-164,-175,-126,-94,-118,62,-130,-127,-131,62,-30,-36,-34,-29,-32,-38,-35,-37,-31,62,-33,-39,217,-162,-160,-115,62,62,62,62,-176,-158,241,-12,178,-28,62,-25,62,-151,-150,-176,-174,62,-152,62,62,62,-147,-146,-176,-135,-142,62,-140,62,62,-176,-141,62,-136,62,62,-176,62,]),'KEYWORD_NEW':([260,],[278,]),'KEYWORD_WHILE':([7,8,9,11,13,18,22,23,24,33,37,41,44,47,48,51,53,55,56,60,62,65,70,72,75,76,77,78,86,87,88,93,94,96,98,99,105,107,108,109,110,111,114,120,123,124,126,146,147,148,149,150,151,153,154,155,156,172,173,181,196,200,212,218,222,226,231,234,243,256,282,289,292,314,317,],[-7,36,-4,-176,-24,-176,-176,-13,-15,-176,-176,-157,-176,-176,-176,-176,-112,-16,-11,-14,-114,-113,-176,-176,-176,-176,-176,-176,-125,-40,-159,-8,-6,-121,-132,-123,-27,-163,-26,-161,-23,-128,-122,-129,-124,-120,-119,36,-164,-175,-126,-94,-118,-130,-127,-131,36,-162,-160,-115,-176,-158,-12,247,-28,-25,-151,-150,-174,-152,-135,-142,-140,-141,-136,]),'$end':([1,3,4,6,9,93,94,],[0,-2,-3,-1,-4,-8,-6,]),'KEYWORD_ELSE':([11,13,33,41,44,47,53,62,65,70,75,76,77,86,87,88,93,94,98,105,107,108,109,110,111,120,123,149,153,154,155,172,173,181,196,200,222,226,231,234,253,256,282,283,285,286,297,321,324,328,],[-176,-24,-176,-157,-176,-176,-112,-114,-113,-176,-176,-176,-176,-125,-40,-159,-8,-6,-132,-27,-163,-26,-161,-23,-128,-129,-124,-126,-130,-127,-131,-162,-160,-115,-176,-158,-28,-25,-151,-150,-41,-152,-176,-176,-139,-138,306,-176,326,-137,]),'XOR':([13,15,19,26,27,28,30,31,38,42,43,49,50,52,53,57,59,61,62,65,68,73,74,80,82,89,90,91,92,97,105,121,132,134,174,181,190,191,192,193,194,197,198,199,201,202,203,204,208,209,211,213,222,223,],[-24,-85,-84,-23,-82,-86,-66,-72,-63,-55,-76,125,-79,-60,-112,-80,-52,-81,-114,-113,-50,-48,-73,-83,-78,-71,-78,-81,-23,-70,-27,-75,-23,-74,125,-115,-69,-68,-67,-62,-61,-49,-64,-65,-58,-56,-57,-59,-54,-53,-51,-77,-28,-87,]),'KEYWORD_TO':([13,15,17,19,27,28,29,30,31,34,35,38,42,43,49,50,52,53,57,59,62,65,68,73,74,80,82,87,89,90,91,92,97,105,121,131,132,134,174,181,190,191,192,193,194,197,198,199,201,202,203,204,208,209,211,213,214,215,222,223,225,227,244,267,],[-24,-85,-44,-84,-82,-86,-42,-66,-72,-17,-21,-63,-55,-76,-46,-79,-60,-112,-80,-52,-114,-113,-50,-48,-73,-83,-78,-40,-71,-78,-81,-23,-70,-27,-75,-20,-23,-74,-47,-115,-69,-68,-67,-62,-61,-49,-64,-65,-58,-56,-57,-59,-54,-53,-51,-77,-22,-176,-28,-87,-45,-43,263,-144,]),'AND_ASSIGN':([13,26,53,62,65,82,105,132,181,222,],[-24,-23,-112,-114,-113,165,-27,-23,-115,-28,]),'PLUS_ASSIGN':([13,26,53,62,65,82,105,132,181,222,],[-24,-23,-112,-114,-113,168,-27,-23,-115,-28,]),'KEYWORD_VAR':([7,8,9,11,13,18,22,23,24,33,37,41,44,47,48,51,53,55,56,60,62,65,70,72,75,76,77,78,86,87,88,93,94,96,98,99,105,107,108,109,110,111,114,120,123,124,126,146,147,148,149,150,151,153,154,155,156,172,173,181,196,200,212,222,226,231,234,243,256,282,289,292,314,317,],[-7,39,-4,-176,-24,-176,-176,-13,-15,-176,-176,-157,-176,-176,-176,-176,-112,-16,-11,-14,-114,-113,-176,-176,-176,-176,-176,-176,-125,-40,-159,-8,-6,-121,-132,-123,-27,-163,-26,-161,-23,-128,-122,-129,-124,-120,-119,39,-164,-175,-126,-94,-118,-130,-127,-131,39,-162,-160,-115,-176,-158,-12,-28,-25,-151,-150,-174,-152,-135,-142,-140,-141,-136,]),'TIMES_ASSIGN':([13,26,53,62,65,82,105,132,181,222,],[-24,-23,-112,-114,-113,158,-27,-23,-115,-28,]),'TIMES':([13,15,19,26,27,28,30,31,38,43,50,53,57,61,62,65,74,80,82,89,90,91,92,97,105,121,132,134,181,190,191,192,198,199,213,222,223,],[-24,-85,-84,-23,-82,-86,-66,-72,117,-76,-79,-112,-80,-81,-114,-113,-73,-83,-78,-71,-78,-81,-23,-70,-27,-75,-23,-74,-115,-69,-68,-67,117,117,-77,-28,-87,]),'KEYWORD_VAL':([7,8,9,11,13,18,22,23,24,33,37,41,44,47,48,51,53,55,56,60,62,65,70,72,75,76,77,78,86,87,88,93,94,96,98,99,105,107,108,109,110,111,114,120,123,124,126,146,147,148,149,150,151,153,154,155,156,172,173,181,196,200,212,222,226,231,234,243,256,282,289,292,314,317,],[-7,40,-4,-176,-24,-176,-176,-13,-15,-176,-176,-157,-176,-176,-176,-176,-112,-16,-11,-14,-114,-113,-176,-176,-176,-176,-176,-176,-125,-40,-159,-8,-6,-121,-132,-123,-27,-163,-26,-161,-23,-128,-122,-129,-124,-120,-119,40,-164,-175,-126,-94,-118,-130,-127,-131,40,-162,-160,-115,-176,-158,-12,-28,-25,-151,-150,-174,-152,-135,-142,-140,-141,-136,]),'DIVIDE_ASSIGN':([13,26,53,62,65,82,105,132,181,222,],[-24,-23,-112,-114,-113,166,-27,-23,-115,-28,]),'TERMINATOR':([7,8,9,11,13,15,17,18,19,21,22,23,24,27,28,29,30,31,33,34,35,37,38,41,42,43,44,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,65,68,70,71,72,73,74,75,76,77,78,79,80,82,86,87,88,89,90,91,92,93,94,96,97,98,99,105,107,108,109,110,111,114,120,121,123,124,126,129,130,131,132,133,134,139,146,147,148,149,150,151,153,154,155,156,172,173,174,181,190,191,192,193,194,196,197,198,199,200,201,202,203,204,208,209,211,212,213,214,222,223,225,226,227,231,234,242,243,256,261,277,279,281,282,289,292,309,313,314,317,318,323,325,326,327,],[-7,41,-4,-176,-24,-85,-44,-176,-84,98,-176,-13,-15,-82,-86,-42,-66,-72,-176,-17,-21,-176,-63,-157,-55,-76,-176,-176,-176,-46,-79,-176,-60,-112,-176,-16,-11,-80,-52,-14,-134,-114,-113,-50,-176,150,-176,-48,-73,-176,-176,-176,-176,-133,-83,-78,-125,-40,-159,-71,-78,-81,-23,-8,-6,-121,-70,-132,-123,-27,-163,-26,-161,-23,-128,-122,-129,-75,-124,-120,-119,200,-19,-20,-23,-18,-74,-95,41,-164,-175,-126,-94,-118,-130,-127,-131,41,-162,-160,-47,-115,-69,-68,-67,-62,-61,-176,-49,-64,-65,-158,-58,-56,-57,-59,-54,-53,-51,-12,-77,-22,-28,-87,-45,-25,-43,-151,-150,-176,-174,-152,41,-100,-97,-96,-135,-142,-140,314,-176,-141,-136,41,-117,-116,-176,41,]),'LPAREN':([7,8,9,11,13,14,18,20,22,23,24,25,26,33,36,37,41,44,45,47,48,51,53,54,55,56,58,60,62,65,67,70,72,75,76,77,78,81,83,86,87,88,92,93,94,95,96,98,99,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,132,135,136,137,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,172,173,181,186,188,189,196,200,212,222,224,226,230,231,234,242,243,246,247,256,260,261,262,263,265,268,282,284,289,290,292,298,299,311,313,314,315,316,317,318,319,326,327,],[-7,81,-4,-176,-24,81,-176,81,-176,-13,-15,101,104,-176,113,-176,-157,-176,81,-176,-176,-176,-112,81,-16,-11,81,-14,-114,-113,143,-176,-176,-176,-176,-176,-176,81,170,-125,-40,-159,104,-8,-6,81,-121,-132,-123,81,81,-27,-176,-163,-26,-161,-23,-128,-176,-176,-122,81,81,81,81,81,-129,-124,-120,81,-119,81,81,104,81,81,81,81,-173,81,81,81,81,-164,-175,-126,-94,-118,81,-130,-127,-131,81,-30,-36,-34,-29,-32,-38,-35,-37,-31,81,-33,-39,-162,-160,-115,81,81,81,-176,-158,-12,-28,81,-25,81,-151,-150,-176,-174,81,268,-152,81,81,81,-147,-146,-176,-135,298,-142,81,-140,81,81,316,-176,-141,319,81,-136,81,81,-176,81,]),'BLOCKEND':([7,8,9,11,13,16,18,22,23,24,33,37,41,44,47,48,51,53,55,56,60,62,63,65,70,72,75,76,77,78,86,87,88,93,94,96,98,99,105,107,108,109,110,111,114,120,123,124,126,146,147,148,149,150,151,153,154,155,172,173,181,195,196,200,210,212,222,226,231,232,233,234,243,253,256,257,258,275,282,289,292,293,303,314,317,],[-7,-176,-4,-176,-24,93,-176,-176,-13,-15,-176,-176,-157,-176,-176,-176,-176,-112,-16,-11,-14,-114,-10,-113,-176,-176,-176,-176,-176,-9,-125,-40,-159,-8,-6,-121,-132,-123,-27,-163,-26,-161,-23,-128,-122,-129,-124,-120,-119,-176,-164,-175,-126,-94,-118,-130,-127,-131,-162,-160,-115,231,-176,-158,93,-12,-28,-25,-151,256,-176,-150,-174,-41,-152,-176,-153,-154,-135,-142,-140,-176,-155,-141,-136,]),'KEYWORD_IF':([7,8,9,11,13,18,22,23,24,33,37,41,44,47,48,51,53,55,56,60,62,65,70,72,75,76,77,78,86,87,88,93,94,96,98,99,105,107,108,109,110,111,114,120,123,124,126,146,147,148,149,150,151,153,154,155,156,172,173,181,196,200,212,222,226,231,234,242,243,256,261,282,289,292,313,314,317,318,326,327,],[-7,67,-4,-176,-24,-176,-176,-13,-15,-176,-176,-157,-176,-176,-176,-176,-112,-16,-11,-14,-114,-113,-176,-176,-176,-176,-176,-176,-125,-40,-159,-8,-6,-121,-132,-123,-27,-163,-26,-161,-23,-128,-122,-129,-124,-120,-119,67,-164,-175,-126,-94,-118,-130,-127,-131,67,-162,-160,-115,-176,-158,-12,-28,-25,-151,-150,-176,-174,-152,284,-135,-142,-140,-176,-141,-136,284,-176,284,]),'AND_BITWISE':([13,15,19,26,27,28,30,31,38,42,43,50,52,53,57,59,61,62,65,68,73,74,80,82,89,90,91,92,97,105,121,132,134,181,190,191,192,193,194,197,198,199,201,202,203,204,208,209,211,213,222,223,],[-24,-85,-84,-23,-82,-86,-66,-72,-63,-55,-76,-79,-60,-112,-80,-52,-81,-114,-113,-50,152,-73,-83,-78,-71,-78,-81,-23,-70,-27,-75,-23,-74,-115,-69,-68,-67,-62,-61,152,-64,-65,-58,-56,-57,-59,-54,-53,-51,-77,-28,-87,]),'LBRAC':([26,53,62,65,92,110,132,181,237,280,295,],[102,-112,-114,-113,102,102,102,-115,259,296,304,]),'AND':([13,15,17,19,26,27,28,29,30,31,38,42,43,49,50,52,53,57,59,61,62,65,68,73,74,80,82,89,90,91,92,97,105,121,132,134,174,181,190,191,192,193,194,197,198,199,201,202,203,204,208,209,211,213,222,223,225,227,],[-24,-85,-44,-84,-23,-82,-86,106,-66,-72,-63,-55,-76,-46,-79,-60,-112,-80,-52,-81,-114,-113,-50,-48,-73,-83,-78,-71,-78,-81,-23,-70,-27,-75,-23,-74,-47,-115,-69,-68,-67,-62,-61,-49,-64,-65,-58,-56,-57,-59,-54,-53,-51,-77,-28,-87,-45,106,]),'NEQUAL':([13,15,19,26,27,28,30,31,38,42,43,50,52,53,57,59,61,62,65,68,74,80,82,89,90,91,92,97,105,121,132,134,181,190,191,192,193,194,198,199,201,202,203,204,208,209,211,213,222,223,],[-24,-85,-84,-23,-82,-86,-66,-72,-63,-55,-76,-79,-60,-112,-80,-52,-81,-114,-113,144,-73,-83,-78,-71,-78,-81,-23,-70,-27,-75,-23,-74,-115,-69,-68,-67,-62,-61,-64,-65,-58,-56,-57,-59,-54,-53,144,-77,-28,-87,]),'GREATER':([13,15,19,26,27,28,30,31,38,42,43,50,52,53,57,59,61,62,65,74,80,82,89,90,91,92,97,105,121,132,134,181,190,191,192,193,194,198,199,201,202,203,204,208,209,213,222,223,],[-24,-85,-84,-23,-82,-86,-66,-72,-63,-55,-76,-79,-60,-112,-80,136,-81,-114,-113,-73,-83,-78,-71,-78,-81,-23,-70,-27,-75,-23,-74,-115,-69,-68,-67,-62,-61,-64,-65,-58,-56,-57,-59,136,136,-77,-28,-87,]),'ASOP':([13,26,53,62,65,82,105,132,181,222,235,236,238,239,240,269,270,271,294,],[-24,-23,-112,-114,-113,161,-27,-23,-115,-28,-109,-108,-107,260,-110,291,-172,-171,-111,]),'XOR_ASSIGN':([13,26,53,62,65,82,105,132,181,222,],[-24,-23,-112,-114,-113,169,-27,-23,-115,-28,]),'REMAINDER':([13,15,19,26,27,28,30,31,38,43,50,53,57,61,62,65,74,80,82,89,90,91,92,97,105,121,132,134,181,190,191,192,198,199,213,222,223,],[-24,-85,-84,-23,-82,-86,-66,-72,115,-76,-79,-112,-80,-81,-114,-113,-73,-83,-78,-71,-78,-81,-23,-70,-27,-75,-23,-74,-115,-69,-68,-67,115,115,-77,-28,-87,]),'RSHIFT_ASSIGN':([13,26,53,62,65,82,105,132,181,222,],[-24,-23,-112,-114,-113,159,-27,-23,-115,-28,]),'OR_ASSIGN':([13,26,53,62,65,82,105,132,181,222,],[-24,-23,-112,-114,-113,163,-27,-23,-115,-28,]),'KEYWORD_DEF':([7,8,9,11,13,18,22,23,24,33,37,41,44,47,48,51,53,55,56,60,62,65,70,72,75,76,77,78,86,87,88,93,94,96,98,99,105,107,108,109,110,111,114,120,123,124,126,146,147,148,149,150,151,153,154,155,156,172,173,181,196,200,212,222,226,231,234,243,256,282,289,292,314,317,],[-7,66,-4,-176,-24,-176,-176,-13,-15,-176,-176,-157,-176,-176,-176,-176,-112,-16,-11,-14,-114,-113,-176,-176,-176,-176,-176,-176,-125,-40,-159,-8,-6,-121,-132,-123,-27,-163,-26,-161,-23,-128,-122,-129,-124,-120,-119,66,-164,-175,-126,-94,-118,-130,-127,-131,66,-162,-160,-115,-176,-158,-12,-28,-25,-151,-150,-174,-152,-135,-142,-140,-141,-136,]),'KEYWORD_ARRAY':([205,221,248,260,278,296,304,],[237,237,237,280,295,237,237,]),'KEYWORD_UNTIL':([13,15,17,19,27,28,29,30,31,34,35,38,42,43,49,50,52,53,57,59,62,65,68,73,74,80,82,87,89,90,91,92,97,105,121,131,132,134,174,181,190,191,192,193,194,197,198,199,201,202,203,204,208,209,211,213,214,215,222,223,225,227,244,267,],[-24,-85,-44,-84,-82,-86,-42,-66,-72,-17,-21,-63,-55,-76,-46,-79,-60,-112,-80,-52,-114,-113,-50,-48,-73,-83,-78,-40,-71,-78,-81,-23,-70,-27,-75,-20,-23,-74,-47,-115,-69,-68,-67,-62,-61,-49,-64,-65,-58,-56,-57,-59,-54,-53,-51,-77,-22,-176,-28,-87,-45,-43,265,-144,]),'KEYWORD_FOR':([7,8,9,11,13,18,22,23,24,33,37,41,44,47,48,51,53,55,56,60,62,65,70,72,75,76,77,78,86,87,88,93,94,96,98,99,105,107,108,109,110,111,114,120,123,124,126,146,147,148,149,150,151,153,154,155,156,172,173,181,196,200,212,222,226,231,234,243,256,282,289,292,314,317,],[-7,83,-4,-176,-24,-176,-176,-13,-15,-176,-176,-157,-176,-176,-176,-176,-112,-16,-11,-14,-114,-113,-176,-176,-176,-176,-176,-176,-125,-40,-159,-8,-6,-121,-132,-123,-27,-163,-26,-161,-23,-128,-122,-129,-124,-120,-119,83,-164,-175,-126,-94,-118,-130,-127,-131,83,-162,-160,-115,-176,-158,-12,-28,-25,-151,-150,-174,-152,-135,-142,-140,-141,-136,]),'BLOCKBEGIN':([2,7,8,9,10,11,13,18,22,23,24,33,37,41,44,47,48,51,53,55,56,60,62,65,69,70,72,75,76,77,78,84,86,87,88,93,94,96,98,99,105,107,108,109,110,111,114,120,122,123,124,126,146,147,148,149,150,151,153,154,155,156,171,172,173,181,196,200,212,222,226,229,231,234,242,243,252,253,254,256,261,266,272,273,274,282,289,291,292,306,312,313,314,317,318,326,327,],[7,-7,7,-4,-5,-176,-24,-176,-176,-13,-15,-176,-176,-157,-176,-176,-176,-176,-112,-16,-11,-14,-114,-113,148,-176,-176,-176,-176,-176,-176,-176,-125,-40,-159,-8,-6,-121,-132,-123,-27,-163,-26,-161,-23,-128,-122,-129,195,-124,-120,-119,7,-164,-175,-126,-94,-118,-130,-127,-131,7,7,-162,-160,-115,-176,-158,-12,-28,-25,-176,-151,-150,-176,-174,-176,-41,-176,-152,7,7,7,7,-156,-135,-142,-165,-140,-176,7,-176,-141,-136,7,-176,7,]),'KEYWORD_DO':([7,8,9,11,13,18,22,23,24,33,37,41,44,47,48,51,53,55,56,60,62,65,70,72,75,76,77,78,86,87,88,93,94,96,98,99,105,107,108,109,110,111,114,120,123,124,126,146,147,148,149,150,151,153,154,155,156,172,173,181,196,200,212,222,226,231,234,243,256,282,289,292,314,317,],[-7,84,-4,-176,-24,-176,-176,-13,-15,-176,-176,-157,-176,-176,-176,-176,-112,-16,-11,-14,-114,-113,-176,-176,-176,-176,-176,-176,-125,-40,-159,-8,-6,-121,-132,-123,-27,-163,-26,-161,-23,-128,-122,-129,-124,-120,-119,84,-164,-175,-126,-94,-118,-130,-127,-131,84,-162,-160,-115,-176,-158,-12,-28,-25,-151,-150,-174,-152,-135,-142,-140,-141,-136,]),'INT_NUMBER':([7,8,9,11,13,14,18,20,22,23,24,33,37,41,44,45,47,48,51,53,54,55,56,58,60,62,65,70,72,75,76,77,78,81,86,87,88,93,94,95,96,98,99,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,135,136,137,138,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,172,173,181,186,188,189,196,200,212,222,224,226,230,231,234,242,243,246,256,260,261,262,263,265,268,282,289,290,292,298,299,313,314,316,317,318,319,326,327,],[-7,28,-4,-176,-24,28,-176,28,-176,-13,-15,-176,-176,-157,-176,28,-176,-176,-176,-112,28,-16,-11,28,-14,-114,-113,-176,-176,-176,-176,-176,-176,28,-125,-40,-159,-8,-6,28,-121,-132,-123,28,28,-27,-176,-163,-26,-161,-23,-128,-176,-176,-122,28,28,28,28,28,-129,-124,-120,28,-119,28,28,28,28,28,28,28,28,28,28,-164,-175,-126,-94,-118,28,-130,-127,-131,28,-30,-36,-34,-29,-32,-38,-35,-37,-31,28,-33,-39,-162,-160,-115,28,28,28,-176,-158,-12,-28,28,-25,28,-151,-150,-176,-174,28,-152,28,28,28,-147,-146,-176,-135,-142,28,-140,28,28,-176,-141,28,-136,28,28,-176,28,]),'NOT':([7,8,9,11,13,14,18,20,22,23,24,33,37,41,44,45,47,48,51,53,54,55,56,58,60,62,65,70,72,75,76,77,78,81,86,87,88,93,94,95,96,98,99,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,135,136,137,138,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,172,173,181,186,188,189,196,200,212,222,224,226,230,231,234,242,243,246,256,260,261,262,263,265,268,282,289,290,292,298,299,313,314,316,317,318,319,326,327,],[-7,45,-4,-176,-24,45,-176,45,-176,-13,-15,-176,-176,-157,-176,45,-176,-176,-176,-112,45,-16,-11,45,-14,-114,-113,-176,-176,-176,-176,-176,-176,45,-125,-40,-159,-8,-6,45,-121,-132,-123,45,45,-27,-176,-163,-26,-161,-23,-128,-176,-176,-122,45,45,45,45,45,-129,-124,-120,45,-119,45,45,45,45,45,45,45,45,45,45,-164,-175,-126,-94,-118,45,-130,-127,-131,45,-30,-36,-34,-29,-32,-38,-35,-37,-31,45,-33,-39,-162,-160,-115,45,45,45,-176,-158,-12,-28,45,-25,45,-151,-150,-176,-174,45,-152,45,45,45,-147,-146,-176,-135,-142,45,-140,45,45,-176,-141,45,-136,45,45,-176,45,]),'KEYWORD_CASE':([87,93,94,195,232,233,253,257,258,275,293,303,],[-40,-8,-6,230,230,-176,-41,-176,-153,-154,-176,-155,]),'COMMA':([13,15,17,19,27,28,29,30,31,34,35,38,42,43,49,50,52,53,57,59,62,65,68,73,74,80,82,89,90,91,92,97,105,108,109,110,121,131,132,134,140,141,173,174,175,177,181,183,185,190,191,192,193,194,197,198,199,201,202,203,204,208,209,211,213,214,222,223,225,226,227,235,236,238,240,241,249,250,251,294,320,],[-24,-85,-44,-84,-82,-86,-42,-66,-72,-17,-21,-63,-55,-76,-46,-79,-60,-112,-80,-52,-114,-113,-50,-48,-73,-83,-78,-71,-78,-81,-23,-70,-27,-26,187,-23,-75,-20,-23,-74,206,-102,187,-47,-169,220,-115,224,-90,-69,-68,-67,-62,-61,-49,-64,-65,-58,-56,-57,-59,-54,-53,-51,-77,-22,-28,-87,-45,-25,-43,-109,-108,-107,-110,-101,-170,-106,-91,-111,224,]),'KEYWORD_PRINT':([7,8,9,11,13,18,22,23,24,33,37,41,44,47,48,51,53,55,56,60,62,65,70,72,75,76,77,78,86,87,88,93,94,96,98,99,105,107,108,109,110,111,114,120,123,124,126,146,147,148,149,150,151,153,154,155,156,172,173,181,196,200,212,222,226,231,234,242,243,256,261,282,289,292,313,314,317,318,326,327,],[-7,85,-4,-176,-24,-176,-176,-13,-15,-176,-176,-157,-176,-176,-176,-176,-112,-16,-11,-14,-114,-113,-176,-176,-176,-176,-176,-176,-125,-40,-159,-8,-6,-121,-132,-123,-27,-163,-26,-161,-23,-128,-122,-129,-124,-120,-119,85,-164,-175,-126,-94,-118,-130,-127,-131,85,-162,-160,-115,-176,-158,-12,-28,-25,-151,-150,-176,-174,-152,85,-135,-142,-140,-176,-141,-136,85,-176,85,]),'OR':([13,15,17,19,26,27,28,29,30,31,35,38,42,43,49,50,52,53,57,59,61,62,65,68,73,74,80,82,89,90,91,92,97,105,121,132,134,174,181,190,191,192,193,194,197,198,199,201,202,203,204,208,209,211,213,222,223,225,227,322,],[-24,-85,-44,-84,-23,-82,-86,-42,-66,-72,112,-63,-55,-76,-46,-79,-60,-112,-80,-52,-81,-114,-113,-50,-48,-73,-83,-78,-71,-78,-81,-23,-70,-27,-75,-23,-74,-47,-115,-69,-68,-67,-62,-61,-49,-64,-65,-58,-56,-57,-59,-54,-53,-51,-77,-28,-87,-45,-43,112,]),'CHOOSE':([217,],[246,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_statement':([8,146,156,261,318,327,],[11,11,11,11,11,11,]),'variable_declaration_initializer':([260,],[277,]),'end_scope':([16,210,],[94,243,]),'array_access':([8,14,20,32,45,54,58,81,85,95,102,104,115,116,117,118,119,125,127,128,135,136,137,138,143,144,145,146,152,156,167,186,187,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'block_statements_opt':([8,146,],[16,210,]),'inclusive_or_expression':([8,54,81,102,104,143,146,156,167,186,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[17,17,17,17,17,17,17,17,17,225,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'while_statement':([8,146,156,],[18,18,18,]),'statement_expression':([8,146,156,261,318,327,],[21,21,21,21,21,21,]),'for_loop':([170,],[215,]),'local_variable_declaration_statement':([8,146,156,],[23,23,23,]),'valid_variables':([32,85,],[109,173,]),'ProgramStructure':([0,],[1,]),'SingletonObject':([0,1,8,146,156,],[4,4,24,24,24,]),'method_header_name':([8,146,156,],[25,25,25,]),'array_data_type':([205,221,248,296,304,],[240,240,240,240,240,]),'int_float':([8,14,20,45,54,58,81,95,102,104,115,116,117,118,119,125,127,128,135,136,137,138,143,144,145,146,152,156,167,186,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'name':([8,14,20,32,45,54,58,81,85,95,102,104,115,116,117,118,119,125,127,128,135,136,137,138,143,144,145,146,152,156,167,186,187,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[26,92,92,110,92,132,92,132,110,92,132,132,92,92,92,92,92,92,92,92,92,92,92,92,132,92,92,26,92,26,132,92,110,92,132,132,132,132,132,26,132,132,132,132,132,26,92,26,]),'argument_list_opt':([104,],[182,]),'for_step_opts':([288,],[300,]),'conditional_and_expression':([8,54,81,102,104,143,146,156,167,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[29,29,29,29,29,29,29,29,29,227,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'unary_expression':([8,14,20,45,54,58,81,95,102,104,115,116,117,118,119,125,127,128,135,136,137,138,143,144,145,146,152,156,167,186,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[30,89,97,121,30,134,30,30,30,30,190,191,192,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'ObjectDeclare':([0,1,8,146,156,],[2,2,2,2,2,]),'unary_expression_not_plus_minus':([8,14,20,45,54,58,81,95,102,104,115,116,117,118,119,125,127,128,135,136,137,138,143,144,145,146,152,156,167,186,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'switch_statement':([8,146,156,261,318,327,],[33,33,33,33,33,33,]),'c_literal':([8,14,20,45,54,58,81,95,102,104,115,116,117,118,119,125,127,128,135,136,137,138,143,144,145,146,152,156,167,186,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'valid_variable':([8,14,20,32,45,54,58,81,85,95,102,104,115,116,117,118,119,125,127,128,135,136,137,138,143,144,145,146,152,156,167,186,187,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[82,90,90,108,90,82,90,82,108,90,82,82,90,90,90,90,90,90,90,90,90,90,90,90,82,90,90,82,90,82,82,90,226,90,82,82,82,82,82,82,82,82,82,82,82,82,90,82,]),'reference_type':([205,221,248,296,304,],[236,236,236,236,236,]),'for_part':([244,],[264,]),'argument_list':([104,316,],[183,320,]),'conditional_or_expression':([8,54,81,102,104,143,146,156,167,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,322,35,]),'variable_declaration_body':([64,],[139,]),'do_while_statement':([8,146,156,],[37,37,37,]),'multiplicative_expression':([8,54,81,95,102,104,118,119,125,127,128,135,136,137,138,143,144,145,146,152,156,167,186,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[38,38,38,38,38,38,38,38,38,198,199,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'for_update':([170,],[216,]),'shift_expression':([8,54,81,95,102,104,125,135,136,137,138,143,144,145,146,152,156,167,186,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[42,42,42,42,42,42,42,201,202,203,204,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'variable_literal':([8,14,20,45,54,58,81,95,102,104,115,116,117,118,119,125,127,128,135,136,137,138,143,144,145,146,152,156,167,186,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'print_int':([8,146,156,261,318,327,],[44,44,44,44,44,44,]),'narker':([229,283,293,321,],[254,297,303,324,]),'fun_params_opt':([100,],[176,]),'class_and_objects':([0,1,],[3,6,]),'assignment_operator':([82,],[167,]),'expression':([8,54,81,102,104,143,146,156,189,224,230,246,260,261,262,290,298,299,316,318,327,],[46,133,157,180,185,207,46,46,228,251,255,267,281,46,287,302,307,308,185,46,46,]),'block':([2,8,146,156,171,261,266,272,273,312,318,327,],[9,47,47,47,218,282,289,292,293,317,47,47,]),'if_then_else_statement':([8,146,156,],[48,48,48,]),'for_untilTo':([244,],[262,]),'exclusive_or_expression':([8,54,81,95,102,104,143,146,156,167,186,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[49,49,49,174,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'primary':([8,14,20,45,54,58,81,95,102,104,115,116,117,118,119,125,127,128,135,136,137,138,143,144,145,146,152,156,167,186,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'if_then_else_intermediate':([261,318,327,],[283,321,328,]),'if_then_statement':([8,146,156,],[51,51,51,]),'marker':([11,18,22,33,37,44,47,48,51,70,72,75,76,77,78,84,106,112,113,196,215,216,233,242,252,254,257,264,268,282,306,313,326,],[86,96,99,111,114,120,123,124,126,149,151,153,154,155,156,171,186,188,189,234,244,245,258,261,272,273,275,288,290,123,312,318,327,]),'additive_expression':([8,54,81,95,102,104,118,119,125,135,136,137,138,143,144,145,146,152,156,167,186,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[52,52,52,52,52,52,193,194,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'simple_name':([8,14,20,32,45,54,58,81,85,95,102,103,104,115,116,117,118,119,125,127,128,135,136,137,138,143,144,145,146,152,156,167,186,187,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[53,53,53,53,53,53,53,53,53,53,53,181,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'method_declaration':([8,146,156,],[55,55,55,]),'fun_params':([100,],[177,]),'block_statement':([8,146,156,],[56,56,212,]),'primitive_type':([205,221,248,296,304,],[238,238,238,238,238,]),'literal':([8,14,20,45,54,58,81,95,102,104,115,116,117,118,119,125,127,128,135,136,137,138,143,144,145,146,152,156,167,186,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'relational_expression':([8,54,81,95,102,104,125,143,144,145,146,152,156,167,186,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[59,59,59,59,59,59,59,59,208,209,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'statement':([8,146,156,],[60,60,60,]),'method_invocation':([8,14,20,45,54,58,81,95,102,104,115,116,117,118,119,125,127,128,135,136,137,138,143,144,145,146,152,156,167,186,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[61,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,61,91,61,91,91,91,91,91,91,91,91,61,91,91,91,91,91,61,91,61,]),'type':([205,221,248,296,304,],[239,250,271,305,310,]),'empty':([8,11,18,22,33,37,44,47,48,51,54,70,72,75,76,77,78,84,100,104,106,112,113,146,196,215,216,229,233,242,252,254,257,264,268,282,283,288,293,306,313,321,326,],[63,87,87,87,87,87,87,87,87,87,130,87,87,87,87,87,87,87,179,184,87,87,87,63,87,87,87,253,87,87,87,87,87,87,87,87,253,301,253,87,87,253,87,]),'normal_statement':([8,146,156,261,318,327,],[72,72,72,286,286,286,]),'qualified_name':([8,14,20,32,45,54,58,81,85,95,102,104,115,116,117,118,119,125,127,128,135,136,137,138,143,144,145,146,152,156,167,186,187,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'switch_label':([195,232,],[229,229,]),'equality_expression':([8,54,81,95,102,104,125,143,146,152,156,167,186,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[68,68,68,68,68,68,68,68,68,211,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'method_start_scope':([69,],[146,]),'method_header':([8,146,156,],[69,69,69,]),'empty_statement':([8,146,156,261,318,327,],[70,70,70,70,70,70,]),'local_variable_declaration':([8,146,156,],[71,71,71,]),'func_arg_start':([25,],[100,]),'if_then_else_statement_precedence':([261,318,327,],[285,285,285,]),'method_return_type':([248,],[269,]),'declaration_keyword':([8,146,156,],[64,64,64,]),'for_statement':([8,146,156,],[22,22,22,]),'fun_variable_declarator_id':([100,220,],[175,249,]),'and_expression':([8,54,81,95,102,104,125,143,146,156,167,186,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[73,73,73,73,73,73,197,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'base_variable_set':([8,14,20,45,54,58,81,95,102,104,115,116,117,118,119,125,127,128,135,136,137,138,143,144,145,146,152,156,167,186,188,189,224,230,246,260,261,262,290,298,299,316,318,319,327,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'print_string':([8,146,156,261,318,327,],[75,75,75,75,75,75,]),'return_statement':([8,146,156,261,318,327,],[76,76,76,76,76,76,]),'scan_int':([8,146,156,261,318,327,],[77,77,77,77,77,77,]),'switch_block_statement':([195,232,],[233,257,]),'block_statements':([8,146,],[78,78,]),'assignment_expression':([8,54,81,102,104,143,146,156,167,189,224,230,246,260,261,262,290,298,299,316,318,327,],[34,34,34,34,34,34,34,34,214,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'expression_optional':([54,],[129,]),'assignment':([8,54,81,102,104,143,146,156,167,189,224,230,246,260,261,262,290,298,299,316,318,327,],[79,131,131,131,131,131,79,79,131,131,131,131,131,131,79,131,131,131,131,131,79,79,]),'method_body':([69,],[147,]),'start_scope':([2,8,146,156,171,261,266,272,273,312,318,327,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'array_initializer':([260,],[279,]),'identifiers':([64,],[140,]),'switch_block':([122,],[196,]),'switch_block_statements':([195,],[232,]),'dimension':([26,92,110,132,],[105,105,105,105,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ProgramStructure","S'",1,None,None,None),
  ('ProgramStructure -> ProgramStructure class_and_objects','ProgramStructure',2,'p_program_structure','backpatch.py',111),
  ('ProgramStructure -> class_and_objects','ProgramStructure',1,'p_program_structure','backpatch.py',112),
  ('class_and_objects -> SingletonObject','class_and_objects',1,'p_class_and_objects','backpatch.py',119),
  ('SingletonObject -> ObjectDeclare block','SingletonObject',2,'p_SingletonObject','backpatch.py',123),
  ('ObjectDeclare -> KEYWORD_OBJECT IDENTIFIER','ObjectDeclare',2,'p_object_declare','backpatch.py',133),
  ('block -> start_scope block_statements_opt end_scope','block',3,'p_block','backpatch.py',140),
  ('start_scope -> BLOCKBEGIN','start_scope',1,'p_start_scope','backpatch.py',145),
  ('end_scope -> BLOCKEND','end_scope',1,'p_end_scope','backpatch.py',156),
  ('block_statements_opt -> block_statements','block_statements_opt',1,'p_block_statements_opt','backpatch.py',165),
  ('block_statements_opt -> empty','block_statements_opt',1,'p_block_statements_opt','backpatch.py',166),
  ('block_statements -> block_statement','block_statements',1,'p_block_statements','backpatch.py',171),
  ('block_statements -> block_statements marker block_statement','block_statements',3,'p_block_statements','backpatch.py',172),
  ('block_statement -> local_variable_declaration_statement','block_statement',1,'p_block_statement','backpatch.py',182),
  ('block_statement -> statement','block_statement',1,'p_block_statement','backpatch.py',183),
  ('block_statement -> SingletonObject','block_statement',1,'p_block_statement','backpatch.py',184),
  ('block_statement -> method_declaration','block_statement',1,'p_block_statement','backpatch.py',185),
  ('expression -> assignment_expression','expression',1,'p_expression','backpatch.py',191),
  ('expression_optional -> expression','expression_optional',1,'p_expression_optional','backpatch.py',199),
  ('expression_optional -> empty','expression_optional',1,'p_expression_optional','backpatch.py',200),
  ('assignment_expression -> assignment','assignment_expression',1,'p_assignment_expression','backpatch.py',206),
  ('assignment_expression -> conditional_or_expression','assignment_expression',1,'p_assignment_expression','backpatch.py',207),
  ('assignment -> valid_variable assignment_operator assignment_expression','assignment',3,'p_assignment','backpatch.py',223),
  ('valid_variable -> name','valid_variable',1,'p_valid_variable','backpatch.py',238),
  ('valid_variable -> array_access','valid_variable',1,'p_valid_variable1','backpatch.py',246),
  ('valid_variables -> valid_variables COMMA valid_variable','valid_variables',3,'p_valid_variables','backpatch.py',252),
  ('valid_variables -> valid_variable','valid_variables',1,'p_valid_variables','backpatch.py',253),
  ('array_access -> name dimension','array_access',2,'p_array_access','backpatch.py',263),
  ('dimension -> LBRAC expression RBRAC','dimension',3,'p_dimension','backpatch.py',278),
  ('assignment_operator -> ASOP','assignment_operator',1,'p_assignment_operator','backpatch.py',287),
  ('assignment_operator -> TIMES_ASSIGN','assignment_operator',1,'p_assignment_operator','backpatch.py',288),
  ('assignment_operator -> DIVIDE_ASSIGN','assignment_operator',1,'p_assignment_operator','backpatch.py',289),
  ('assignment_operator -> REMAINDER_ASSIGN','assignment_operator',1,'p_assignment_operator','backpatch.py',290),
  ('assignment_operator -> PLUS_ASSIGN','assignment_operator',1,'p_assignment_operator','backpatch.py',291),
  ('assignment_operator -> MINUS_ASSIGN','assignment_operator',1,'p_assignment_operator','backpatch.py',292),
  ('assignment_operator -> LSHIFT_ASSIGN','assignment_operator',1,'p_assignment_operator','backpatch.py',293),
  ('assignment_operator -> RSHIFT_ASSIGN','assignment_operator',1,'p_assignment_operator','backpatch.py',294),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator','backpatch.py',295),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator','backpatch.py',296),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator','backpatch.py',297),
  ('marker -> empty','marker',1,'p_marker','backpatch.py',306),
  ('narker -> empty','narker',1,'p_narker','backpatch.py',311),
  ('conditional_or_expression -> conditional_and_expression','conditional_or_expression',1,'p_conditional_or_expression','backpatch.py',318),
  ('conditional_or_expression -> conditional_or_expression OR marker conditional_and_expression','conditional_or_expression',4,'p_conditional_or_expression','backpatch.py',319),
  ('conditional_and_expression -> inclusive_or_expression','conditional_and_expression',1,'p_conditional_and_expression','backpatch.py',342),
  ('conditional_and_expression -> conditional_and_expression AND marker inclusive_or_expression','conditional_and_expression',4,'p_conditional_and_expression','backpatch.py',343),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','backpatch.py',363),
  ('inclusive_or_expression -> inclusive_or_expression OR_BITWISE exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','backpatch.py',364),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','backpatch.py',384),
  ('exclusive_or_expression -> exclusive_or_expression XOR and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','backpatch.py',385),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','backpatch.py',404),
  ('and_expression -> and_expression AND_BITWISE equality_expression','and_expression',3,'p_and_expression','backpatch.py',405),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','backpatch.py',424),
  ('equality_expression -> equality_expression EQUAL relational_expression','equality_expression',3,'p_equality_expression','backpatch.py',425),
  ('equality_expression -> equality_expression NEQUAL relational_expression','equality_expression',3,'p_equality_expression','backpatch.py',426),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','backpatch.py',447),
  ('relational_expression -> relational_expression GREATER shift_expression','relational_expression',3,'p_relational_expression','backpatch.py',448),
  ('relational_expression -> relational_expression LESS shift_expression','relational_expression',3,'p_relational_expression','backpatch.py',449),
  ('relational_expression -> relational_expression GEQ shift_expression','relational_expression',3,'p_relational_expression','backpatch.py',450),
  ('relational_expression -> relational_expression LEQ shift_expression','relational_expression',3,'p_relational_expression','backpatch.py',451),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','backpatch.py',474),
  ('shift_expression -> shift_expression LSHIFT additive_expression','shift_expression',3,'p_shift_expression','backpatch.py',475),
  ('shift_expression -> shift_expression RSHIFT additive_expression','shift_expression',3,'p_shift_expression','backpatch.py',476),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','backpatch.py',496),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','backpatch.py',497),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','backpatch.py',498),
  ('multiplicative_expression -> unary_expression','multiplicative_expression',1,'p_multiplicative_expression','backpatch.py',517),
  ('multiplicative_expression -> multiplicative_expression TIMES unary_expression','multiplicative_expression',3,'p_multiplicative_expression','backpatch.py',518),
  ('multiplicative_expression -> multiplicative_expression DIVIDE unary_expression','multiplicative_expression',3,'p_multiplicative_expression','backpatch.py',519),
  ('multiplicative_expression -> multiplicative_expression REMAINDER unary_expression','multiplicative_expression',3,'p_multiplicative_expression','backpatch.py',520),
  ('unary_expression -> PLUS unary_expression','unary_expression',2,'p_unary_expression','backpatch.py',539),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_unary_expression','backpatch.py',540),
  ('unary_expression -> unary_expression_not_plus_minus','unary_expression',1,'p_unary_expression','backpatch.py',541),
  ('unary_expression_not_plus_minus -> base_variable_set','unary_expression_not_plus_minus',1,'p_unary_expression_not_plus_minus','backpatch.py',559),
  ('unary_expression_not_plus_minus -> TILDA unary_expression','unary_expression_not_plus_minus',2,'p_unary_expression_not_plus_minus','backpatch.py',560),
  ('unary_expression_not_plus_minus -> NOT unary_expression','unary_expression_not_plus_minus',2,'p_unary_expression_not_plus_minus1','backpatch.py',579),
  ('base_variable_set -> variable_literal','base_variable_set',1,'p_base_variable_set','backpatch.py',590),
  ('base_variable_set -> LPAREN expression RPAREN','base_variable_set',3,'p_base_variable_set','backpatch.py',591),
  ('variable_literal -> valid_variable','variable_literal',1,'p_variableliteral','backpatch.py',606),
  ('variable_literal -> primary','variable_literal',1,'p_variableliteral','backpatch.py',607),
  ('primary -> literal','primary',1,'p_primary','backpatch.py',623),
  ('primary -> method_invocation','primary',1,'p_primary','backpatch.py',624),
  ('literal -> int_float','literal',1,'p_literal','backpatch.py',632),
  ('literal -> c_literal','literal',1,'p_literal','backpatch.py',633),
  ('c_literal -> BOOL_CONSTT','c_literal',1,'p_c_literal_binary_true','backpatch.py',651),
  ('c_literal -> BOOL_CONSTF','c_literal',1,'p_c_literal_binary_false','backpatch.py',660),
  ('int_float -> INT_NUMBER','int_float',1,'p_int_float','backpatch.py',669),
  ('method_invocation -> name LPAREN argument_list_opt RPAREN','method_invocation',4,'p_method_invocation','backpatch.py',677),
  ('argument_list_opt -> argument_list','argument_list_opt',1,'p_argument_list_opt','backpatch.py',712),
  ('argument_list_opt -> empty','argument_list_opt',1,'p_argument_list_opt2','backpatch.py',717),
  ('argument_list -> expression','argument_list',1,'p_argument_list','backpatch.py',721),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','backpatch.py',722),
  ('declaration_keyword -> KEYWORD_VAR','declaration_keyword',1,'p_declaration_keyword','backpatch.py',735),
  ('declaration_keyword -> KEYWORD_VAL','declaration_keyword',1,'p_declaration_keyword','backpatch.py',736),
  ('local_variable_declaration_statement -> local_variable_declaration TERMINATOR','local_variable_declaration_statement',2,'p_local_variable_declaration_statement','backpatch.py',742),
  ('local_variable_declaration -> declaration_keyword variable_declaration_body','local_variable_declaration',2,'p_local_variable_declaration','backpatch.py',748),
  ('variable_declaration_initializer -> expression','variable_declaration_initializer',1,'p_variable_declaration_initializer','backpatch.py',752),
  ('variable_declaration_initializer -> array_initializer','variable_declaration_initializer',1,'p_variable_declaration_initializer','backpatch.py',753),
  ('variable_argument_list -> variable_declaration_initializer','variable_argument_list',1,'p_variable_argument_list','backpatch.py',759),
  ('variable_argument_list -> variable_argument_list COMMA variable_declaration_initializer','variable_argument_list',3,'p_variable_argument_list','backpatch.py',760),
  ('variable_declaration_body -> identifiers COLON type ASOP variable_declaration_initializer','variable_declaration_body',5,'p_variable_declaration_body_1','backpatch.py',769),
  ('identifiers -> identifiers COMMA IDENTIFIER','identifiers',3,'p_identifiers','backpatch.py',797),
  ('identifiers -> IDENTIFIER','identifiers',1,'p_identifiers','backpatch.py',798),
  ('variable_list -> variable_declarator_id','variable_list',1,'p_variable_list','backpatch.py',820),
  ('variable_list -> variable_list COMMA variable_declarator_id','variable_list',3,'p_variable_list','backpatch.py',821),
  ('variable_declarator_id -> IDENTIFIER COLON type','variable_declarator_id',3,'p_variable_declarator_id','backpatch.py',856),
  ('fun_variable_declarator_id -> IDENTIFIER COLON type','fun_variable_declarator_id',3,'p_fun_variable_declarator_id','backpatch.py',863),
  ('type -> primitive_type','type',1,'p_type','backpatch.py',873),
  ('type -> reference_type','type',1,'p_type','backpatch.py',874),
  ('primitive_type -> TYPE_INT','primitive_type',1,'p_primitive_type','backpatch.py',879),
  ('reference_type -> array_data_type','reference_type',1,'p_reference_type','backpatch.py',885),
  ('array_data_type -> KEYWORD_ARRAY LBRAC TYPE_INT RBRAC','array_data_type',4,'p_array_data_type','backpatch.py',891),
  ('name -> simple_name','name',1,'p_name','backpatch.py',902),
  ('name -> qualified_name','name',1,'p_name','backpatch.py',903),
  ('simple_name -> IDENTIFIER','simple_name',1,'p_simple_name','backpatch.py',910),
  ('qualified_name -> name INST simple_name','qualified_name',3,'p_qualified_name','backpatch.py',920),
  ('array_initializer -> KEYWORD_NEW KEYWORD_ARRAY LBRAC type RBRAC LPAREN conditional_or_expression RPAREN','array_initializer',8,'p_array_initializer','backpatch.py',931),
  ('array_initializer -> KEYWORD_ARRAY LBRAC type RBRAC LPAREN argument_list RPAREN','array_initializer',7,'p_array_initializer','backpatch.py',932),
  ('statement -> normal_statement marker','statement',2,'p_statement','backpatch.py',973),
  ('statement -> if_then_statement marker','statement',2,'p_statement','backpatch.py',974),
  ('statement -> if_then_else_statement marker','statement',2,'p_statement','backpatch.py',975),
  ('statement -> while_statement marker','statement',2,'p_statement','backpatch.py',976),
  ('statement -> do_while_statement marker','statement',2,'p_statement','backpatch.py',977),
  ('statement -> for_statement marker','statement',2,'p_statement','backpatch.py',978),
  ('normal_statement -> block marker','normal_statement',2,'p_normal_statement','backpatch.py',983),
  ('normal_statement -> expression_statement marker','normal_statement',2,'p_normal_statement','backpatch.py',984),
  ('normal_statement -> empty_statement marker','normal_statement',2,'p_normal_statement','backpatch.py',985),
  ('normal_statement -> return_statement marker','normal_statement',2,'p_normal_statement','backpatch.py',986),
  ('normal_statement -> switch_statement marker','normal_statement',2,'p_normal_statement','backpatch.py',987),
  ('normal_statement -> print_int marker','normal_statement',2,'p_normal_statement','backpatch.py',988),
  ('normal_statement -> print_string marker','normal_statement',2,'p_normal_statement','backpatch.py',989),
  ('normal_statement -> scan_int marker','normal_statement',2,'p_normal_statement','backpatch.py',990),
  ('expression_statement -> statement_expression TERMINATOR','expression_statement',2,'p_expression_statement','backpatch.py',996),
  ('statement_expression -> assignment','statement_expression',1,'p_statement_expression','backpatch.py',1002),
  ('statement_expression -> method_invocation','statement_expression',1,'p_statement_expression','backpatch.py',1003),
  ('if_then_statement -> KEYWORD_IF LPAREN expression RPAREN marker block','if_then_statement',6,'p_if_then_statement','backpatch.py',1011),
  ('if_then_else_statement -> KEYWORD_IF LPAREN expression RPAREN marker if_then_else_intermediate narker KEYWORD_ELSE marker block','if_then_else_statement',10,'p_if_then_else_statement','backpatch.py',1020),
  ('if_then_else_statement_precedence -> KEYWORD_IF LPAREN expression RPAREN marker if_then_else_intermediate narker KEYWORD_ELSE marker if_then_else_intermediate','if_then_else_statement_precedence',10,'p_if_then_else_statement_precedence','backpatch.py',1032),
  ('if_then_else_intermediate -> normal_statement','if_then_else_intermediate',1,'p_if_then_else_intermediate','backpatch.py',1044),
  ('if_then_else_intermediate -> if_then_else_statement_precedence','if_then_else_intermediate',1,'p_if_then_else_intermediate','backpatch.py',1045),
  ('while_statement -> KEYWORD_WHILE LPAREN marker expression RPAREN marker block','while_statement',7,'p_while_statement','backpatch.py',1051),
  ('do_while_statement -> KEYWORD_DO marker block KEYWORD_WHILE LPAREN marker expression RPAREN TERMINATOR','do_while_statement',9,'p_do_while_statement','backpatch.py',1063),
  ('for_statement -> KEYWORD_FOR LPAREN for_update marker RPAREN block','for_statement',6,'p_for_statement','backpatch.py',1076),
  ('for_update -> for_loop marker for_part marker for_step_opts','for_update',5,'p_for_update','backpatch.py',1087),
  ('for_loop -> IDENTIFIER CHOOSE expression','for_loop',3,'p_for_loop','backpatch.py',1099),
  ('for_part -> for_untilTo expression','for_part',2,'p_for_part','backpatch.py',1111),
  ('for_untilTo -> KEYWORD_UNTIL','for_untilTo',1,'p_for_untilTo1','backpatch.py',1120),
  ('for_untilTo -> KEYWORD_TO','for_untilTo',1,'p_for_untilTo2','backpatch.py',1127),
  ('for_step_opts -> KEYWORD_BY expression','for_step_opts',2,'p_for_step_opts','backpatch.py',1134),
  ('for_step_opts -> empty','for_step_opts',1,'p_for_step_opts','backpatch.py',1135),
  ('switch_statement -> expression KEYWORD_MATCH switch_block marker','switch_statement',4,'p_switch_statement','backpatch.py',1145),
  ('switch_block -> BLOCKBEGIN BLOCKEND','switch_block',2,'p_switch_block','backpatch.py',1158),
  ('switch_block -> BLOCKBEGIN switch_block_statements BLOCKEND','switch_block',3,'p_switch_block2','backpatch.py',1165),
  ('switch_block_statements -> switch_block_statement marker','switch_block_statements',2,'p_switch_block_statements','backpatch.py',1174),
  ('switch_block_statements -> switch_block_statements switch_block_statement marker','switch_block_statements',3,'p_switch_block_statements','backpatch.py',1175),
  ('switch_block_statement -> switch_label narker marker block narker','switch_block_statement',5,'p_switch_block_statement','backpatch.py',1191),
  ('switch_label -> KEYWORD_CASE expression FUNTYPE','switch_label',3,'p_switch_label','backpatch.py',1199),
  ('empty_statement -> TERMINATOR','empty_statement',1,'p_empty_statement','backpatch.py',1208),
  ('return_statement -> KEYWORD_RETURN expression_optional TERMINATOR','return_statement',3,'p_return_statement','backpatch.py',1214),
  ('scan_int -> KEYWORD_SCAN IDENTIFIER','scan_int',2,'p_scan_int','backpatch.py',1230),
  ('print_int -> KEYWORD_PRINT valid_variables','print_int',2,'p_print_int','backpatch.py',1238),
  ('print_int -> KEYWORD_PRINTLN valid_variables','print_int',2,'p_println_int','backpatch.py',1251),
  ('print_string -> KEYWORD_PRINT STRING','print_string',2,'p_print_string','backpatch.py',1265),
  ('print_string -> KEYWORD_PRINTLN STRING','print_string',2,'p_println_string','backpatch.py',1275),
  ('method_declaration -> method_header method_body','method_declaration',2,'p_method_declaration','backpatch.py',1286),
  ('method_header -> method_header_name func_arg_start fun_params_opt RPAREN COLON method_return_type ASOP','method_header',7,'p_method_header','backpatch.py',1291),
  ('func_arg_start -> LPAREN','func_arg_start',1,'p_func_arg_start','backpatch.py',1326),
  ('fun_params_opt -> fun_params','fun_params_opt',1,'p_fun_params_opt','backpatch.py',1336),
  ('fun_params_opt -> empty','fun_params_opt',1,'p_fun_params_opt','backpatch.py',1337),
  ('fun_params -> fun_variable_declarator_id','fun_params',1,'p_fun_params','backpatch.py',1343),
  ('fun_params -> fun_params COMMA fun_variable_declarator_id','fun_params',3,'p_fun_params','backpatch.py',1344),
  ('method_return_type -> type','method_return_type',1,'p_method_return_type','backpatch.py',1357),
  ('method_return_type -> TYPE_VOID','method_return_type',1,'p_method_return_type1','backpatch.py',1362),
  ('method_header_name -> KEYWORD_DEF IDENTIFIER','method_header_name',2,'p_method_header_name','backpatch.py',1367),
  ('method_body -> method_start_scope block_statements_opt end_scope','method_body',3,'p_method_body','backpatch.py',1381),
  ('method_start_scope -> BLOCKBEGIN','method_start_scope',1,'p_method_start_scope','backpatch.py',1386),
  ('empty -> <empty>','empty',0,'p_empty','backpatch.py',1470),
]
