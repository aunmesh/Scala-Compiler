
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '69B8FC8A3780DA0EA050F876BDBDB994'
    
_lr_action_items = {'TOK_divassign':([19,20,21,22,37,38,59,72,120,162,],[51,-24,-23,-28,-25,-26,-29,51,-27,-30,]),'TOK_and':([20,21,22,37,38,59,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,88,89,91,92,93,94,95,97,100,101,103,120,131,132,133,134,138,145,161,162,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[-24,-23,-28,-25,-26,-29,-61,-41,-73,-67,-72,-77,-68,-39,-81,-55,-74,-43,-75,-47,-78,-58,-83,-82,-80,-50,-45,-76,-70,-79,-84,146,-27,-69,-72,-23,-75,-65,-66,-85,-30,-44,-42,-60,-59,-46,146,-53,-52,-54,-51,-62,-63,-64,-57,-56,-48,-49,-71,-40,]),'KW_obj':([0,1,2,6,7,9,10,11,12,13,18,23,24,26,27,29,33,34,40,41,44,46,47,48,63,66,67,104,105,143,202,208,210,212,227,],[4,-2,4,-4,-3,4,-5,-115,-10,-109,-110,-14,-15,-117,-112,-13,-113,-12,-116,-134,4,-114,-111,-7,-118,-137,-145,-92,-11,-135,-127,-109,-121,-126,-122,]),'TOK_xor':([20,21,22,37,38,59,68,69,70,71,72,73,74,76,77,78,79,80,83,84,88,89,91,92,93,94,95,97,100,101,120,131,132,133,134,138,145,161,162,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,],[-24,-23,-28,-25,-26,-29,-61,121,-73,-67,-72,-77,-68,-81,-55,-74,-43,-75,-47,-78,-58,-83,-82,-80,-50,-45,-76,-70,-79,-84,-27,-69,-72,-23,-75,-65,-66,-85,-30,-44,121,-60,-59,-46,-53,-52,-54,-51,-62,-63,-64,-57,-56,-48,-49,-71,]),'TOK_lesser':([20,21,22,37,38,59,68,70,71,72,73,74,76,77,78,80,83,84,88,89,91,92,93,95,97,100,101,120,131,132,133,134,138,145,161,162,177,178,181,182,183,184,185,186,187,188,189,190,191,192,],[-24,-23,-28,-25,-26,-29,-61,-73,-67,-72,-77,-68,-81,-55,-74,-75,128,-78,-58,-83,-82,-80,-50,-76,-70,-79,-84,-27,-69,-72,-23,-75,-65,-66,-85,-30,-60,-59,-53,-52,-54,-51,-62,-63,-64,-57,-56,128,128,-71,]),'TOK_colon':([50,172,205,],[108,206,108,]),'KW_val':([6,9,10,11,12,13,18,23,24,26,27,29,33,34,40,41,44,46,47,48,63,66,67,104,105,143,202,208,210,212,227,],[-4,14,-5,-115,-10,-109,-110,-14,-15,-117,-112,-13,-113,-12,-116,-134,14,-114,-111,-7,-118,-137,-145,-92,-11,-135,-127,-109,-121,-126,-122,]),'KW_boolean':([108,199,206,223,],[153,153,153,153,]),'TOK_or_bitwise':([20,21,22,37,38,59,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,88,89,91,92,93,94,95,97,100,101,120,131,132,133,134,138,145,161,162,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,],[-24,-23,-28,-25,-26,-29,-61,-41,-73,-67,-72,-77,-68,122,-81,-55,-74,-43,-75,-47,-78,-58,-83,-82,-80,-50,-45,-76,-70,-79,-84,-27,-69,-72,-23,-75,-65,-66,-85,-30,-44,-42,-60,-59,-46,-53,-52,-54,-51,-62,-63,-64,-57,-56,-48,-49,-71,122,]),'KW_var':([6,9,10,11,12,13,18,23,24,26,27,29,33,34,40,41,44,46,47,48,63,66,67,104,105,143,202,208,210,212,227,],[-4,17,-5,-115,-10,-109,-110,-14,-15,-117,-112,-13,-113,-12,-116,-134,17,-114,-111,-7,-118,-137,-145,-92,-11,-135,-127,-109,-121,-126,-122,]),'KW_until':([20,21,22,37,38,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,86,87,88,89,91,92,93,94,95,97,100,101,103,109,120,131,132,133,134,138,145,161,162,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,203,],[-24,-23,-28,-25,-26,-29,-61,-41,-73,-67,-72,-77,-68,-39,-81,-55,-74,-43,-21,-20,-47,-78,-18,-19,-58,-83,-82,-80,-50,-45,-76,-70,-79,-84,-37,-22,-27,-69,-72,-23,-75,-65,-66,-85,-30,-44,-42,-60,-59,-46,-38,-53,-52,-54,-51,-62,-63,-64,-57,-56,-48,-49,-71,-40,216,]),'KW_int':([108,199,206,223,],[154,154,154,154,]),'TOK_assignment':([19,20,21,22,37,38,59,72,107,120,149,150,151,152,153,154,155,157,158,159,162,219,224,],[56,-24,-23,-28,-25,-26,-29,56,148,-27,-102,-105,-101,-99,-104,-100,-98,-136,-106,-103,-30,226,-107,]),'KW_string':([108,199,206,223,],[159,159,159,159,]),'TOK_mulassign':([19,20,21,22,37,38,59,72,120,162,],[57,-24,-23,-28,-25,-26,-29,57,-27,-30,]),'TOK_identifier':([4,6,9,10,11,12,13,14,16,17,18,23,24,26,27,28,29,33,34,40,41,42,44,46,47,48,51,52,53,54,55,56,57,58,60,61,63,64,65,66,67,85,90,98,99,104,105,106,118,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,143,146,148,160,163,166,167,174,194,202,204,208,210,212,215,216,217,221,222,227,230,234,],[8,-4,22,-5,-115,-10,-109,-91,50,-90,-110,-14,-15,-117,-112,22,-13,-113,-12,-116,-134,22,22,-114,-111,-7,-33,-34,-36,-35,22,-31,-32,22,22,117,-118,22,22,-137,-145,22,22,22,22,-92,-11,22,172,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-135,22,22,22,22,22,22,22,22,-127,172,-109,-121,-126,22,-130,-131,22,22,-122,22,22,]),'KW_for':([6,9,10,11,12,13,18,23,24,26,27,29,33,34,40,41,44,46,47,48,63,66,67,104,105,143,166,174,194,202,208,210,212,221,227,230,234,],[-4,25,-5,-115,-10,-109,-110,-14,-15,-117,-112,-13,-113,-12,-116,-134,25,-114,-111,-7,-118,-137,-145,-92,-11,-135,25,25,25,-127,-109,-121,-126,25,-122,25,25,]),'KW_while':([6,9,10,11,12,13,18,23,24,26,27,29,33,34,40,41,44,46,47,48,63,66,67,104,105,143,166,174,194,202,208,210,212,221,227,230,234,],[-4,45,-5,-115,-10,-109,-110,-14,-15,-117,-112,-13,-113,-12,-116,-134,45,-114,-111,-7,-118,-137,-145,-92,-11,-135,45,45,45,-127,-109,-121,-126,45,-122,45,45,]),'KW_to':([20,21,22,37,38,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,86,87,88,89,91,92,93,94,95,97,100,101,103,109,120,131,132,133,134,138,145,161,162,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,203,],[-24,-23,-28,-25,-26,-29,-61,-41,-73,-67,-72,-77,-68,-39,-81,-55,-74,-43,-21,-20,-47,-78,-18,-19,-58,-83,-82,-80,-50,-45,-76,-70,-79,-84,-37,-22,-27,-69,-72,-23,-75,-65,-66,-85,-30,-44,-42,-60,-59,-46,-38,-53,-52,-54,-51,-62,-63,-64,-57,-56,-48,-49,-71,-40,217,]),'TOK_geq':([20,21,22,37,38,59,68,70,71,72,73,74,76,77,78,80,83,84,88,89,91,92,93,95,97,100,101,120,131,132,133,134,138,145,161,162,177,178,181,182,183,184,185,186,187,188,189,190,191,192,],[-24,-23,-28,-25,-26,-29,-61,-73,-67,-72,-77,-68,-81,-55,-74,-75,127,-78,-58,-83,-82,-80,-50,-76,-70,-79,-84,-27,-69,-72,-23,-75,-65,-66,-85,-30,-60,-59,-53,-52,-54,-51,-62,-63,-64,-57,-56,127,127,-71,]),'KW_double':([108,199,206,223,],[151,151,151,151,]),'KW_null':([42,51,52,53,54,55,56,57,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,167,215,216,217,222,],[76,-33,-34,-36,-35,76,-31,-32,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-130,-131,76,]),'TOK_comma':([20,21,22,37,38,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,86,87,88,89,91,92,93,94,95,97,100,101,103,109,110,113,120,131,132,133,134,138,145,149,150,151,152,153,154,155,158,159,161,162,168,169,170,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,200,218,220,224,],[-24,-23,-28,-25,-26,-29,-61,-41,-73,-67,-72,-77,-68,-39,-81,-55,-74,-43,-21,-20,-47,-78,-18,-19,-58,-83,-82,-80,-50,-45,-76,-70,-79,-84,-37,-22,160,-88,-27,-69,-72,-23,-75,-65,-66,-102,-105,-101,-99,-104,-100,-98,-106,-103,-85,-30,-144,-142,204,-44,-42,-60,-59,-46,-38,-53,-52,-54,-51,-62,-63,-64,-57,-56,-48,-49,-71,-40,-89,-143,-97,-107,]),'TOK_nequal':([20,21,22,37,38,59,68,70,71,72,73,74,76,77,78,80,83,84,88,89,91,92,93,94,95,97,100,101,120,131,132,133,134,138,145,161,162,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,],[-24,-23,-28,-25,-26,-29,-61,-73,-67,-72,-77,-68,-81,-55,-74,-75,-47,-78,-58,-83,-82,-80,-50,142,-76,-70,-79,-84,-27,-69,-72,-23,-75,-65,-66,-85,-30,-60,-59,142,-53,-52,-54,-51,-62,-63,-64,-57,-56,-48,-49,-71,]),'TOK_addassign':([19,20,21,22,37,38,59,72,120,162,],[54,-24,-23,-28,-25,-26,-29,54,-27,-30,]),'TOK_rsqb':([20,21,22,37,38,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,86,87,88,89,91,92,93,94,95,97,100,101,103,109,114,120,131,132,133,134,138,145,149,150,151,152,153,154,155,158,159,161,162,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,214,224,229,],[-24,-23,-28,-25,-26,-29,-61,-41,-73,-67,-72,-77,-68,-39,-81,-55,-74,-43,-21,-20,-47,-78,-18,-19,-58,-83,-82,-80,-50,-45,-76,-70,-79,-84,-37,-22,162,-27,-69,-72,-23,-75,-65,-66,-102,-105,-101,-99,-104,-100,-98,-106,-103,-85,-30,-44,-42,-60,-59,-46,-38,-53,-52,-54,-51,-62,-63,-64,-57,-56,-48,-49,-71,-40,224,-107,231,]),'KW_def':([6,9,10,11,12,13,18,23,24,26,27,29,33,34,40,41,44,46,47,48,63,66,67,104,105,143,202,208,210,212,227,],[-4,28,-5,-115,-10,-109,-110,-14,-15,-117,-112,-13,-113,-12,-116,-134,28,-114,-111,-7,-118,-137,-145,-92,-11,-135,-127,-109,-121,-126,-122,]),'KW_if':([6,9,10,11,12,13,18,23,24,26,27,29,33,34,40,41,44,46,47,48,63,66,67,104,105,143,166,174,194,202,208,210,212,221,227,230,234,],[-4,31,-5,-115,-10,-109,-110,-14,-15,-117,-112,-13,-113,-12,-116,-134,31,-114,-111,-7,-118,-137,-145,-92,-11,-135,31,211,31,-127,-109,-121,-126,31,-122,211,211,]),'TOK_char':([42,51,52,53,54,55,56,57,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,167,215,216,217,222,],[91,-33,-34,-36,-35,91,-31,-32,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-130,-131,91,]),'TOK_paraleft':([21,22,25,31,37,38,42,45,51,52,53,54,55,56,57,58,60,62,64,85,90,98,99,106,120,121,122,123,124,125,126,127,128,129,130,133,135,136,137,139,140,141,142,146,148,160,163,167,211,215,216,217,222,231,],[58,-28,61,64,-25,-26,98,106,-33,-34,-36,-35,98,-31,-32,98,98,118,98,98,98,98,98,98,-27,98,98,98,98,98,98,98,98,98,98,58,98,98,98,98,98,98,98,98,98,98,98,98,222,98,-130,-131,98,233,]),'$end':([1,2,3,6,7,10,48,],[-2,-1,0,-4,-3,-5,-7,]),'TOK_string':([42,51,52,53,54,55,56,57,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,167,215,216,217,222,],[84,-33,-34,-36,-35,84,-31,-32,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-130,-131,84,]),'TOK_not':([42,51,52,53,54,55,56,57,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,167,215,216,217,222,],[85,-33,-34,-36,-35,85,-31,-32,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-130,-131,85,]),'TOK_or':([20,21,22,37,38,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,88,89,91,92,93,94,95,97,100,101,103,120,131,132,133,134,138,145,161,162,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[-24,-23,-28,-25,-26,-29,-61,-41,-73,-67,-72,-77,-68,-39,-81,-55,-74,-43,-75,126,-47,-78,-58,-83,-82,-80,-50,-45,-76,-70,-79,-84,-37,-27,-69,-72,-23,-75,-65,-66,-85,-30,-44,-42,-60,-59,-46,-38,-53,-52,-54,-51,-62,-63,-64,-57,-56,-48,-49,-71,-40,]),'TOK_divide':([20,21,22,37,38,59,68,70,71,72,73,74,76,78,80,84,88,89,91,92,95,97,100,101,120,131,132,133,134,138,145,161,162,177,178,185,186,187,192,],[-24,-23,-28,-25,-26,-29,-61,-73,-67,-72,-77,-68,-81,-74,-75,-78,136,-83,-82,-80,-76,-70,-79,-84,-27,-69,-72,-23,-75,-65,-66,-85,-30,136,136,-62,-63,-64,-71,]),'TOK_float':([42,51,52,53,54,55,56,57,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,167,215,216,217,222,],[89,-33,-34,-36,-35,89,-31,-32,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-130,-131,89,]),'TOK_plus':([20,21,22,37,38,42,51,52,53,54,55,56,57,58,59,60,64,68,70,71,72,73,74,76,77,78,80,84,85,88,89,90,91,92,95,97,98,99,100,101,106,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,148,160,161,162,163,167,177,178,185,186,187,188,189,192,215,216,217,222,],[-24,-23,-28,-25,-26,90,-33,-34,-36,-35,90,-31,-32,90,-29,90,90,-61,-73,-67,-72,-77,-68,-81,124,-74,-75,-78,90,-58,-83,90,-82,-80,-76,-70,90,90,-79,-84,90,-27,90,90,90,90,90,90,90,90,90,90,-69,-72,-23,-75,90,90,90,-65,90,90,90,90,-66,90,90,90,-85,-30,90,90,-60,-59,-62,-63,-64,124,124,-71,90,-130,-131,90,]),'TOK_subassign':([19,20,21,22,37,38,59,72,120,162,],[53,-24,-23,-28,-25,-26,-29,53,-27,-30,]),'TOK_lsqb':([21,22,37,38,120,133,156,213,],[60,-28,-25,-26,-27,60,199,223,]),'TOK_minus':([20,21,22,37,38,42,51,52,53,54,55,56,57,58,59,60,64,68,70,71,72,73,74,76,77,78,80,84,85,88,89,90,91,92,95,97,98,99,100,101,106,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,148,160,161,162,163,167,177,178,185,186,187,188,189,192,215,216,217,222,],[-24,-23,-28,-25,-26,99,-33,-34,-36,-35,99,-31,-32,99,-29,99,99,-61,-73,-67,-72,-77,-68,-81,123,-74,-75,-78,99,-58,-83,99,-82,-80,-76,-70,99,99,-79,-84,99,-27,99,99,99,99,99,99,99,99,99,99,-69,-72,-23,-75,99,99,99,-65,99,99,99,99,-66,99,99,99,-85,-30,99,99,-60,-59,-62,-63,-64,123,123,-71,99,-130,-131,99,]),'KW_else':([11,26,40,41,46,48,63,143,207,208,209,232,236,],[-115,-117,-116,-134,-114,-7,-118,-135,-125,-124,221,234,-123,]),'TOK_leq':([20,21,22,37,38,59,68,70,71,72,73,74,76,77,78,80,83,84,88,89,91,92,93,95,97,100,101,120,131,132,133,134,138,145,161,162,177,178,181,182,183,184,185,186,187,188,189,190,191,192,],[-24,-23,-28,-25,-26,-29,-61,-73,-67,-72,-77,-68,-81,-55,-74,-75,129,-78,-58,-83,-82,-80,-50,-76,-70,-79,-84,-27,-69,-72,-23,-75,-65,-66,-85,-30,-60,-59,-53,-52,-54,-51,-62,-63,-64,-57,-56,129,129,-71,]),'TOK_rshift':([20,21,22,37,38,59,68,70,71,72,73,74,76,77,78,80,84,88,89,91,92,93,95,97,100,101,120,131,132,133,134,138,145,161,162,177,178,181,182,183,184,185,186,187,188,189,192,],[-24,-23,-28,-25,-26,-29,-61,-73,-67,-72,-77,-68,-81,-55,-74,-75,-78,-58,-83,-82,-80,139,-76,-70,-79,-84,-27,-69,-72,-23,-75,-65,-66,-85,-30,-60,-59,139,139,139,139,-62,-63,-64,-57,-56,-71,]),'KW_array':([108,196,199,206,223,],[156,213,156,156,156,]),'KW_false':([42,51,52,53,54,55,56,57,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,167,215,216,217,222,],[92,-33,-34,-36,-35,92,-31,-32,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-130,-131,92,]),'TOK_pararight':([20,21,22,37,38,58,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,86,87,88,89,91,92,93,94,95,97,100,101,103,109,110,111,112,113,115,116,118,119,120,131,132,133,134,138,144,145,147,149,150,151,152,153,154,155,158,159,161,162,164,165,168,169,170,171,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,200,201,218,220,224,225,228,235,],[-24,-23,-28,-25,-26,-146,-29,-61,-41,-73,-67,-72,-77,-68,-39,-81,-55,-74,-43,-21,-20,-47,-78,-18,-19,-58,-83,-82,-80,-50,-45,-76,-70,-79,-84,-37,-22,-86,-87,161,-88,-146,166,-146,174,-27,-69,-72,-23,-75,-65,192,-66,194,-102,-105,-101,-99,-104,-100,-98,-106,-103,-85,-30,-128,-133,-144,-142,-140,205,-141,-44,-42,-60,-59,-46,-38,-53,-52,-54,-51,-62,-63,-64,-57,-56,-48,-49,-71,-40,-89,-132,-143,-97,-107,-129,230,237,]),'TOK_dot':([22,37,],[-28,65,]),'KW_char':([108,199,206,223,],[149,149,149,149,]),'KW_new':([148,],[196,]),'KW_void':([108,199,206,223,],[150,150,150,150,]),'TOK_times':([20,21,22,37,38,59,68,70,71,72,73,74,76,78,80,84,88,89,91,92,95,97,100,101,120,131,132,133,134,138,145,161,162,177,178,185,186,187,192,],[-24,-23,-28,-25,-26,-29,-61,-73,-67,-72,-77,-68,-81,-74,-75,-78,135,-83,-82,-80,-76,-70,-79,-84,-27,-69,-72,-23,-75,-65,-66,-85,-30,135,135,-62,-63,-64,-71,]),'TOK_equal':([20,21,22,37,38,59,68,70,71,72,73,74,76,77,78,80,83,84,88,89,91,92,93,94,95,97,100,101,120,131,132,133,134,138,145,161,162,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,],[-24,-23,-28,-25,-26,-29,-61,-73,-67,-72,-77,-68,-81,-55,-74,-75,-47,-78,-58,-83,-82,-80,-50,141,-76,-70,-79,-84,-27,-69,-72,-23,-75,-65,-66,-85,-30,-60,-59,141,-53,-52,-54,-51,-62,-63,-64,-57,-56,-48,-49,-71,]),'TOK_modassign':([19,20,21,22,37,38,59,72,120,162,],[52,-24,-23,-28,-25,-26,-29,52,-27,-30,]),'KW_true':([42,51,52,53,54,55,56,57,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,167,215,216,217,222,],[100,-33,-34,-36,-35,100,-31,-32,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-130,-131,100,]),'TOK_semi':([6,9,10,11,12,13,18,20,21,22,23,24,26,27,29,30,33,34,35,36,37,38,40,41,42,43,44,46,47,48,49,59,63,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,91,92,93,94,95,96,97,100,101,102,103,104,105,109,120,131,132,133,134,138,143,145,161,162,166,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,202,208,210,212,221,227,230,234,237,],[-4,41,-5,-115,-10,-109,-110,-24,-23,-28,-14,-15,-117,-112,-13,63,-113,-12,-119,-120,-25,-26,-116,-134,-146,104,41,-114,-111,-7,-93,-29,-118,-137,-145,-61,-41,-73,-67,-72,-77,-68,-39,-81,-55,-74,-43,-21,-20,-17,-47,-78,-18,-19,-58,-83,-82,-80,-50,-45,-76,143,-70,-79,-84,-16,-37,-92,-11,-22,-27,-69,-72,-23,-75,-65,-135,-66,-85,-30,41,41,-44,-42,-60,-59,-46,-38,-53,-52,-54,-51,-62,-63,-64,-57,-56,-48,-49,-71,-40,41,-96,-95,-94,-127,-109,-121,-126,41,-122,41,41,-108,]),'TOK_choose':([117,],[167,]),'TOK_modulus':([20,21,22,37,38,59,68,70,71,72,73,74,76,78,80,84,88,89,91,92,95,97,100,101,120,131,132,133,134,138,145,161,162,177,178,185,186,187,192,],[-24,-23,-28,-25,-26,-29,-61,-73,-67,-72,-77,-68,-81,-74,-75,-78,137,-83,-82,-80,-76,-70,-79,-84,-27,-69,-72,-23,-75,-65,-66,-85,-30,137,137,-62,-63,-64,-71,]),'TOK_and_bitwise':([20,21,22,37,38,59,68,70,71,72,73,74,76,77,78,79,80,83,84,88,89,91,92,93,94,95,97,100,101,120,131,132,133,134,138,145,161,162,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,],[-24,-23,-28,-25,-26,-29,-61,-73,-67,-72,-77,-68,-81,-55,-74,125,-75,-47,-78,-58,-83,-82,-80,-50,-45,-76,-70,-79,-84,-27,-69,-72,-23,-75,-65,-66,-85,-30,125,-60,-59,-46,-53,-52,-54,-51,-62,-63,-64,-57,-56,-48,-49,-71,]),'TOK_greater':([20,21,22,37,38,59,68,70,71,72,73,74,76,77,78,80,83,84,88,89,91,92,93,95,97,100,101,120,131,132,133,134,138,145,161,162,177,178,181,182,183,184,185,186,187,188,189,190,191,192,],[-24,-23,-28,-25,-26,-29,-61,-73,-67,-72,-77,-68,-81,-55,-74,-75,130,-78,-58,-83,-82,-80,-50,-76,-70,-79,-84,-27,-69,-72,-23,-75,-65,-66,-85,-30,-60,-59,-53,-52,-54,-51,-62,-63,-64,-57,-56,130,130,-71,]),'TOK_lshift':([20,21,22,37,38,59,68,70,71,72,73,74,76,77,78,80,84,88,89,91,92,93,95,97,100,101,120,131,132,133,134,138,145,161,162,177,178,181,182,183,184,185,186,187,188,189,192,],[-24,-23,-28,-25,-26,-29,-61,-73,-67,-72,-77,-68,-81,-55,-74,-75,-78,-58,-83,-82,-80,140,-76,-70,-79,-84,-27,-69,-72,-23,-75,-65,-66,-85,-30,-60,-59,140,140,140,140,-62,-63,-64,-57,-56,-71,]),'TOK_lcurly':([5,6,8,9,10,11,12,13,18,23,24,26,27,29,33,34,39,40,41,44,46,47,48,63,66,67,104,105,143,166,174,194,202,205,208,210,212,221,226,227,230,234,],[9,-4,-6,9,-5,-115,-10,-109,-110,-14,-15,-117,-112,-13,-113,-12,9,-116,-134,9,-114,-111,-7,-118,-137,-145,-92,-11,-135,9,9,9,-127,-139,-109,-121,-126,9,-138,-122,9,9,]),'KW_by':([20,21,22,37,38,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,86,87,88,89,91,92,93,94,95,97,100,101,103,109,115,120,131,132,133,134,138,145,161,162,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,225,],[-24,-23,-28,-25,-26,-29,-61,-41,-73,-67,-72,-77,-68,-39,-81,-55,-74,-43,-21,-20,-47,-78,-18,-19,-58,-83,-82,-80,-50,-45,-76,-70,-79,-84,-37,-22,163,-27,-69,-72,-23,-75,-65,-66,-85,-30,-44,-42,-60,-59,-46,-38,-53,-52,-54,-51,-62,-63,-64,-57,-56,-48,-49,-71,-40,-129,]),'TOK_rcurly':([6,9,10,11,12,13,15,18,23,24,26,27,29,32,33,34,40,41,44,46,47,48,63,66,67,104,105,143,202,208,210,212,227,],[-4,-146,-5,-115,-10,-109,48,-110,-14,-15,-117,-112,-13,-9,-113,-12,-116,-134,-8,-114,-111,-7,-118,-137,-145,-92,-11,-135,-127,-109,-121,-126,-122,]),'TOK_int':([42,51,52,53,54,55,56,57,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,167,215,216,217,222,233,],[101,-33,-34,-36,-35,101,-31,-32,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-130,-131,101,235,]),'KW_return':([6,9,10,11,12,13,18,23,24,26,27,29,33,34,40,41,44,46,47,48,63,66,67,104,105,143,166,174,194,202,208,210,212,221,227,230,234,],[-4,42,-5,-115,-10,-109,-110,-14,-15,-117,-112,-13,-113,-12,-116,-134,42,-114,-111,-7,-118,-137,-145,-92,-11,-135,42,42,42,-127,-109,-121,-126,42,-122,42,42,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_statement':([9,44,166,174,194,221,230,234,],[11,11,11,11,11,11,11,11,]),'variable_declaration_initializer':([148,],[195,]),'class_and_obj_declarations':([0,],[2,]),'fun_params_question':([118,],[171,]),'object_declaration':([0,2,9,44,],[5,5,5,5,]),'unary_expression':([42,55,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,167,215,222,],[68,68,68,68,68,131,138,68,145,68,68,68,68,68,68,68,68,68,68,68,185,186,187,68,68,68,68,68,68,68,68,68,68,68,]),'if_then_else_statement_precedence':([174,230,234,],[207,207,207,]),'reference_type':([108,199,206,223,],[152,152,152,152,]),'block_stat':([9,44,],[12,105,]),'normal_statement':([9,44,166,174,194,221,230,234,],[13,13,13,208,13,13,208,208,]),'primary':([42,55,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,167,215,222,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'block_stats_star':([9,],[15,]),'unary_expression_not_plus_minus':([42,55,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,167,215,222,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'local_variable_declaration_statement':([9,44,],[34,34,]),'if_then_else_intermediate':([174,230,234,],[209,232,236,]),'if_then_statement':([9,44,166,174,194,221,230,234,],[18,18,18,18,18,18,18,18,]),'left_hand_side':([9,42,44,55,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,166,167,174,194,215,221,222,230,234,],[19,72,19,72,72,72,72,132,132,72,132,72,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,72,72,72,19,72,19,19,72,19,72,19,19,]),'array_access':([9,42,44,55,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,166,167,174,194,215,221,222,230,234,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'id':([9,42,44,55,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,166,167,174,194,215,221,222,230,234,],[21,21,21,21,21,21,21,133,133,21,133,21,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,21,21,21,21,21,21,21,21,21,21,21,21,]),'additive_expression':([42,55,58,60,64,98,106,121,122,125,126,127,128,129,130,139,140,141,142,146,148,160,163,167,215,222,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,188,189,77,77,77,77,77,77,77,77,77,]),'class_and_obj_declaration':([0,2,9,44,],[1,7,23,23,]),'primitive_type':([108,199,206,223,],[155,155,155,155,]),'c_literal':([42,55,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,167,215,222,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'base_variable_set':([42,55,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,167,215,222,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'inclusive_or_expression':([42,55,58,60,64,98,106,126,146,148,160,163,167,215,222,],[75,75,75,75,75,75,75,75,193,75,75,75,75,75,75,]),'array_data_type':([108,199,206,223,],[158,158,158,158,]),'method_declaration':([9,44,],[24,24,]),'literal':([42,55,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,167,215,222,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'return_statement':([9,44,166,174,194,221,230,234,],[26,26,26,26,26,26,26,26,]),'while_statement':([9,44,166,174,194,221,230,234,],[27,27,27,27,27,27,27,27,]),'for_loop':([61,],[115,]),'relational_expression':([42,55,58,60,64,98,106,121,122,125,126,141,142,146,148,160,163,167,215,222,],[83,83,83,83,83,83,83,83,83,83,83,190,191,83,83,83,83,83,83,83,]),'statement':([9,44,166,174,194,221,230,234,],[29,29,202,210,212,227,210,227,]),'statement_expression':([9,44,166,174,194,221,230,234,],[30,30,30,30,30,30,30,30,]),'method_invocation':([9,42,44,55,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,166,167,174,194,215,221,222,230,234,],[36,80,36,80,80,80,80,134,134,80,134,80,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,80,80,80,36,80,36,36,80,36,80,36,36,]),'for_untilTo':([203,],[215,]),'conditional_or_expression':([42,55,58,60,64,98,106,148,160,163,167,215,222,],[81,81,81,81,81,81,81,81,81,81,81,81,81,]),'exclusive_or_expression':([42,55,58,60,64,98,106,122,126,146,148,160,163,167,215,222,],[69,69,69,69,69,69,69,176,69,69,69,69,69,69,69,69,]),'empty':([9,42,58,115,118,],[32,82,111,165,173,]),'argument_list':([58,],[110,]),'variable_declaration_body':([16,],[49,]),'for_statement':([9,44,166,174,194,221,230,234,],[33,33,33,33,33,33,33,33,]),'declaration_keyword':([9,44,],[16,16,]),'assignment_expression':([42,55,58,60,64,98,106,148,160,163,167,215,222,],[86,109,86,86,86,86,86,86,86,86,86,86,86,]),'assignment':([9,42,44,55,58,60,64,98,106,148,160,163,166,167,174,194,215,221,222,230,234,],[35,87,35,87,87,87,87,87,87,87,87,87,35,87,35,35,87,35,87,35,35,]),'multiplicative_expression':([42,55,58,60,64,98,106,121,122,123,124,125,126,127,128,129,130,139,140,141,142,146,148,160,163,167,215,222,],[88,88,88,88,88,88,88,88,88,177,178,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'compilation_unit':([0,],[3,]),'fun_param':([118,204,],[169,218,]),'method_body':([39,],[66,]),'fun_params':([118,],[170,]),'singleton_object':([0,2,9,44,],[6,6,6,6,]),'shift_expression':([42,55,58,60,64,98,106,121,122,125,126,127,128,129,130,141,142,146,148,160,163,167,215,222,],[93,93,93,93,93,93,93,93,93,93,93,181,182,183,184,93,93,93,93,93,93,93,93,93,]),'equality_expression':([42,55,58,60,64,98,106,121,122,125,126,146,148,160,163,167,215,222,],[94,94,94,94,94,94,94,94,94,179,94,94,94,94,94,94,94,94,]),'array_initializer':([148,],[197,]),'int_float':([42,55,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,167,215,222,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'expression_question':([42,],[96,]),'and_expression':([42,55,58,60,64,98,106,121,122,126,146,148,160,163,167,215,222,],[79,79,79,79,79,79,79,175,79,79,79,79,79,79,79,79,79,]),'variable_literal':([42,55,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,167,215,222,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'name':([9,28,42,44,55,58,60,64,65,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,166,167,174,194,215,221,222,230,234,],[37,62,37,37,37,37,37,37,120,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'qualified_id':([9,42,44,55,58,60,64,85,90,98,99,106,121,122,123,124,125,126,127,128,129,130,135,136,137,139,140,141,142,146,148,160,163,166,167,174,194,215,221,222,230,234,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'for_update':([61,],[116,]),'type':([108,199,206,223,],[157,214,220,229,]),'type_question':([50,205,],[107,219,]),'method_header':([9,44,],[39,39,]),'empty_statement':([9,44,166,174,194,221,230,234,],[40,40,40,40,40,40,40,40,]),'conditional_and_expression':([42,55,58,60,64,98,106,126,148,160,163,167,215,222,],[103,103,103,103,103,103,103,180,103,103,103,103,103,103,]),'argument_list_question':([58,],[112,]),'variable_declarator_id':([118,204,],[168,168,]),'assignment_operator':([19,72,],[55,55,]),'local_variable_declaration':([9,44,],[43,43,]),'block_stats':([9,],[44,]),'for_step_opts':([115,],[164,]),'expression':([42,58,60,64,98,106,148,160,163,167,215,222,],[102,113,114,119,144,147,198,200,201,203,225,228,]),'dimension':([21,133,],[59,59,]),'block':([5,9,39,44,166,174,194,221,230,234,],[10,46,67,46,46,46,46,46,46,46,]),'if_then_else_statement':([9,44,166,174,194,221,230,234,],[47,47,47,47,47,47,47,47,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> compilation_unit","S'",1,None,None,None),
  ('compilation_unit -> class_and_obj_declarations','compilation_unit',1,'p_compilation_unit','Grammar4.py',71),
  ('class_and_obj_declarations -> class_and_obj_declaration','class_and_obj_declarations',1,'p_class_and_obj_declarations','Grammar4.py',79),
  ('class_and_obj_declarations -> class_and_obj_declarations class_and_obj_declaration','class_and_obj_declarations',2,'p_class_and_obj_declarations','Grammar4.py',80),
  ('class_and_obj_declaration -> singleton_object','class_and_obj_declaration',1,'p_class_and_obj_declaration','Grammar4.py',89),
  ('singleton_object -> object_declaration block','singleton_object',2,'p_singleton_object','Grammar4.py',94),
  ('object_declaration -> KW_obj TOK_identifier','object_declaration',2,'p_object_declaration','Grammar4.py',99),
  ('block -> TOK_lcurly block_stats_star TOK_rcurly','block',3,'p_block','Grammar4.py',116),
  ('block_stats_star -> block_stats','block_stats_star',1,'p_block_stats_star','Grammar4.py',123),
  ('block_stats_star -> empty','block_stats_star',1,'p_block_stats_star','Grammar4.py',124),
  ('block_stats -> block_stat','block_stats',1,'p_block_stats','Grammar4.py',129),
  ('block_stats -> block_stats block_stat','block_stats',2,'p_block_stats','Grammar4.py',130),
  ('block_stat -> local_variable_declaration_statement','block_stat',1,'p_block_stat','Grammar4.py',139),
  ('block_stat -> statement','block_stat',1,'p_block_stat','Grammar4.py',140),
  ('block_stat -> class_and_obj_declaration','block_stat',1,'p_block_stat','Grammar4.py',141),
  ('block_stat -> method_declaration','block_stat',1,'p_block_stat','Grammar4.py',142),
  ('expression_question -> expression','expression_question',1,'p_expression_question','Grammar4.py',149),
  ('expression_question -> empty','expression_question',1,'p_expression_question','Grammar4.py',150),
  ('expression -> assignment_expression','expression',1,'p_expression','Grammar4.py',156),
  ('assignment_expression -> assignment','assignment_expression',1,'p_assignment_expression','Grammar4.py',162),
  ('assignment_expression -> conditional_or_expression','assignment_expression',1,'p_assignment_expression','Grammar4.py',163),
  ('assignment_expression -> method_invocation','assignment_expression',1,'p_assignment_expression','Grammar4.py',164),
  ('assignment -> left_hand_side assignment_operator assignment_expression','assignment',3,'p_assignment','Grammar4.py',180),
  ('left_hand_side -> id','left_hand_side',1,'p_left_hand_side','Grammar4.py',193),
  ('left_hand_side -> array_access','left_hand_side',1,'p_left_hand_side','Grammar4.py',194),
  ('id -> name','id',1,'p_id','Grammar4.py',199),
  ('id -> qualified_id','id',1,'p_id','Grammar4.py',200),
  ('qualified_id -> name TOK_dot name','qualified_id',3,'p_qualified_id','Grammar4.py',206),
  ('name -> TOK_identifier','name',1,'p_name','Grammar4.py',214),
  ('array_access -> id dimension','array_access',2,'p_array_access','Grammar4.py',221),
  ('dimension -> TOK_lsqb expression TOK_rsqb','dimension',3,'p_dimension','Grammar4.py',237),
  ('assignment_operator -> TOK_assignment','assignment_operator',1,'p_assignment_operator','Grammar4.py',254),
  ('assignment_operator -> TOK_mulassign','assignment_operator',1,'p_assignment_operator','Grammar4.py',255),
  ('assignment_operator -> TOK_divassign','assignment_operator',1,'p_assignment_operator','Grammar4.py',256),
  ('assignment_operator -> TOK_modassign','assignment_operator',1,'p_assignment_operator','Grammar4.py',257),
  ('assignment_operator -> TOK_addassign','assignment_operator',1,'p_assignment_operator','Grammar4.py',258),
  ('assignment_operator -> TOK_subassign','assignment_operator',1,'p_assignment_operator','Grammar4.py',259),
  ('conditional_or_expression -> conditional_and_expression','conditional_or_expression',1,'p_conditional_or_expression','Grammar4.py',266),
  ('conditional_or_expression -> conditional_or_expression TOK_or conditional_and_expression','conditional_or_expression',3,'p_conditional_or_expression','Grammar4.py',267),
  ('conditional_and_expression -> inclusive_or_expression','conditional_and_expression',1,'p_conditional_and_expression','Grammar4.py',283),
  ('conditional_and_expression -> conditional_and_expression TOK_and inclusive_or_expression','conditional_and_expression',3,'p_conditional_and_expression','Grammar4.py',284),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','Grammar4.py',297),
  ('inclusive_or_expression -> inclusive_or_expression TOK_or_bitwise exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','Grammar4.py',298),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','Grammar4.py',313),
  ('exclusive_or_expression -> exclusive_or_expression TOK_xor and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','Grammar4.py',314),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','Grammar4.py',329),
  ('and_expression -> and_expression TOK_and_bitwise equality_expression','and_expression',3,'p_and_expression','Grammar4.py',330),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','Grammar4.py',345),
  ('equality_expression -> equality_expression TOK_equal relational_expression','equality_expression',3,'p_equality_expression','Grammar4.py',346),
  ('equality_expression -> equality_expression TOK_nequal relational_expression','equality_expression',3,'p_equality_expression','Grammar4.py',347),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','Grammar4.py',367),
  ('relational_expression -> relational_expression TOK_greater shift_expression','relational_expression',3,'p_relational_expression','Grammar4.py',368),
  ('relational_expression -> relational_expression TOK_lesser shift_expression','relational_expression',3,'p_relational_expression','Grammar4.py',369),
  ('relational_expression -> relational_expression TOK_geq shift_expression','relational_expression',3,'p_relational_expression','Grammar4.py',370),
  ('relational_expression -> relational_expression TOK_leq shift_expression','relational_expression',3,'p_relational_expression','Grammar4.py',371),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','Grammar4.py',388),
  ('shift_expression -> shift_expression TOK_lshift additive_expression','shift_expression',3,'p_shift_expression','Grammar4.py',389),
  ('shift_expression -> shift_expression TOK_rshift additive_expression','shift_expression',3,'p_shift_expression','Grammar4.py',390),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','Grammar4.py',407),
  ('additive_expression -> additive_expression TOK_plus multiplicative_expression','additive_expression',3,'p_additive_expression','Grammar4.py',408),
  ('additive_expression -> additive_expression TOK_minus multiplicative_expression','additive_expression',3,'p_additive_expression','Grammar4.py',409),
  ('multiplicative_expression -> unary_expression','multiplicative_expression',1,'p_multiplicative_expression','Grammar4.py',425),
  ('multiplicative_expression -> multiplicative_expression TOK_times unary_expression','multiplicative_expression',3,'p_multiplicative_expression','Grammar4.py',426),
  ('multiplicative_expression -> multiplicative_expression TOK_divide unary_expression','multiplicative_expression',3,'p_multiplicative_expression','Grammar4.py',427),
  ('multiplicative_expression -> multiplicative_expression TOK_modulus unary_expression','multiplicative_expression',3,'p_multiplicative_expression','Grammar4.py',428),
  ('unary_expression -> TOK_plus unary_expression','unary_expression',2,'p_unary_expression','Grammar4.py',445),
  ('unary_expression -> TOK_minus unary_expression','unary_expression',2,'p_unary_expression','Grammar4.py',446),
  ('unary_expression -> unary_expression_not_plus_minus','unary_expression',1,'p_unary_expression','Grammar4.py',447),
  ('unary_expression_not_plus_minus -> base_variable_set','unary_expression_not_plus_minus',1,'p_unary_expression_not_plus_minus','Grammar4.py',462),
  ('unary_expression_not_plus_minus -> TOK_not unary_expression','unary_expression_not_plus_minus',2,'p_unary_expression_not_plus_minus','Grammar4.py',463),
  ('base_variable_set -> variable_literal','base_variable_set',1,'p_base_variable_set','Grammar4.py',475),
  ('base_variable_set -> TOK_paraleft expression TOK_pararight','base_variable_set',3,'p_base_variable_set','Grammar4.py',476),
  ('variable_literal -> left_hand_side','variable_literal',1,'p_variable_literal','Grammar4.py',488),
  ('variable_literal -> primary','variable_literal',1,'p_variable_literal','Grammar4.py',489),
  ('primary -> literal','primary',1,'p_primary','Grammar4.py',504),
  ('primary -> method_invocation','primary',1,'p_primary','Grammar4.py',505),
  ('literal -> int_float','literal',1,'p_literal','Grammar4.py',512),
  ('literal -> c_literal','literal',1,'p_literal','Grammar4.py',513),
  ('c_literal -> TOK_string','c_literal',1,'p_c_literal1','Grammar4.py',519),
  ('c_literal -> KW_true','c_literal',1,'p_c_literal1','Grammar4.py',520),
  ('c_literal -> KW_false','c_literal',1,'p_c_literal1','Grammar4.py',521),
  ('c_literal -> KW_null','c_literal',1,'p_c_literal1','Grammar4.py',522),
  ('c_literal -> TOK_char','c_literal',1,'p_c_literal2','Grammar4.py',538),
  ('int_float -> TOK_float','int_float',1,'p_int_float1','Grammar4.py',549),
  ('int_float -> TOK_int','int_float',1,'p_int_float2','Grammar4.py',559),
  ('method_invocation -> id TOK_paraleft argument_list_question TOK_pararight','method_invocation',4,'p_method_invocation','Grammar4.py',571),
  ('argument_list_question -> argument_list','argument_list_question',1,'p_argument_list_question','Grammar4.py',600),
  ('argument_list_question -> empty','argument_list_question',1,'p_argument_list_question','Grammar4.py',601),
  ('argument_list -> expression','argument_list',1,'p_argument_list','Grammar4.py',611),
  ('argument_list -> argument_list TOK_comma expression','argument_list',3,'p_argument_list','Grammar4.py',612),
  ('declaration_keyword -> KW_var','declaration_keyword',1,'p_declaration_keyword','Grammar4.py',627),
  ('declaration_keyword -> KW_val','declaration_keyword',1,'p_declaration_keyword','Grammar4.py',628),
  ('local_variable_declaration_statement -> local_variable_declaration TOK_semi','local_variable_declaration_statement',2,'p_local_variable_declaration_statement','Grammar4.py',635),
  ('local_variable_declaration -> declaration_keyword variable_declaration_body','local_variable_declaration',2,'p_local_variable_declaration','Grammar4.py',641),
  ('variable_declaration_initializer -> expression','variable_declaration_initializer',1,'p_variable_declaration_initializer','Grammar4.py',647),
  ('variable_declaration_initializer -> array_initializer','variable_declaration_initializer',1,'p_variable_declaration_initializer','Grammar4.py',648),
  ('variable_declaration_body -> TOK_identifier type_question TOK_assignment variable_declaration_initializer','variable_declaration_body',4,'p_variable_declaration_body','Grammar4.py',653),
  ('variable_declarator_id -> TOK_identifier TOK_colon type','variable_declarator_id',3,'p_variable_declarator_id','Grammar4.py',673),
  ('type -> primitive_type','type',1,'p_type','Grammar4.py',698),
  ('type -> reference_type','type',1,'p_type','Grammar4.py',699),
  ('primitive_type -> KW_int','primitive_type',1,'p_primitive_type','Grammar4.py',705),
  ('primitive_type -> KW_double','primitive_type',1,'p_primitive_type','Grammar4.py',706),
  ('primitive_type -> KW_char','primitive_type',1,'p_primitive_type','Grammar4.py',707),
  ('primitive_type -> KW_string','primitive_type',1,'p_primitive_type','Grammar4.py',708),
  ('primitive_type -> KW_boolean','primitive_type',1,'p_primitive_type','Grammar4.py',709),
  ('primitive_type -> KW_void','primitive_type',1,'p_primitive_type','Grammar4.py',710),
  ('reference_type -> array_data_type','reference_type',1,'p_reference_type','Grammar4.py',718),
  ('array_data_type -> KW_array TOK_lsqb type TOK_rsqb','array_data_type',4,'p_array_data_type','Grammar4.py',724),
  ('array_initializer -> KW_new KW_array TOK_lsqb type TOK_rsqb TOK_paraleft TOK_int TOK_pararight','array_initializer',8,'p_array_initializer','Grammar4.py',735),
  ('statement -> normal_statement','statement',1,'p_statement','Grammar4.py',754),
  ('statement -> if_then_statement','statement',1,'p_statement','Grammar4.py',755),
  ('statement -> if_then_else_statement','statement',1,'p_statement','Grammar4.py',756),
  ('statement -> while_statement','statement',1,'p_statement','Grammar4.py',757),
  ('statement -> for_statement','statement',1,'p_statement','Grammar4.py',758),
  ('normal_statement -> block','normal_statement',1,'p_normal_statement','Grammar4.py',763),
  ('normal_statement -> expression_statement','normal_statement',1,'p_normal_statement','Grammar4.py',764),
  ('normal_statement -> empty_statement','normal_statement',1,'p_normal_statement','Grammar4.py',765),
  ('normal_statement -> return_statement','normal_statement',1,'p_normal_statement','Grammar4.py',766),
  ('expression_statement -> statement_expression TOK_semi','expression_statement',2,'p_expression_statement','Grammar4.py',771),
  ('statement_expression -> assignment','statement_expression',1,'p_statement_expression','Grammar4.py',778),
  ('statement_expression -> method_invocation','statement_expression',1,'p_statement_expression','Grammar4.py',779),
  ('if_then_statement -> KW_if TOK_paraleft expression TOK_pararight statement','if_then_statement',5,'p_if_then_statement','Grammar4.py',786),
  ('if_then_else_statement -> KW_if TOK_paraleft expression TOK_pararight if_then_else_intermediate KW_else statement','if_then_else_statement',7,'p_if_then_else_statement','Grammar4.py',797),
  ('if_then_else_statement_precedence -> KW_if TOK_paraleft expression TOK_pararight if_then_else_intermediate KW_else if_then_else_intermediate','if_then_else_statement_precedence',7,'p_if_then_else_statement_precedence','Grammar4.py',813),
  ('if_then_else_intermediate -> normal_statement','if_then_else_intermediate',1,'p_if_then_else_intermediate','Grammar4.py',829),
  ('if_then_else_intermediate -> if_then_else_statement_precedence','if_then_else_intermediate',1,'p_if_then_else_intermediate','Grammar4.py',830),
  ('while_statement -> KW_while TOK_paraleft expression TOK_pararight statement','while_statement',5,'p_while_statement','Grammar4.py',835),
  ('for_statement -> KW_for TOK_paraleft for_update TOK_pararight statement','for_statement',5,'p_for_statement','Grammar4.py',852),
  ('for_update -> for_loop for_step_opts','for_update',2,'p_for_update','Grammar4.py',874),
  ('for_loop -> TOK_identifier TOK_choose expression for_untilTo expression','for_loop',5,'p_for_loop','Grammar4.py',882),
  ('for_untilTo -> KW_until','for_untilTo',1,'p_for_untilTo','Grammar4.py',894),
  ('for_untilTo -> KW_to','for_untilTo',1,'p_for_untilTo','Grammar4.py',895),
  ('for_step_opts -> KW_by expression','for_step_opts',2,'p_for_step_opts','Grammar4.py',906),
  ('for_step_opts -> empty','for_step_opts',1,'p_for_step_opts','Grammar4.py',907),
  ('empty_statement -> TOK_semi','empty_statement',1,'p_empty_statement','Grammar4.py',917),
  ('return_statement -> KW_return expression_question TOK_semi','return_statement',3,'p_return_statement','Grammar4.py',922),
  ('type_question -> TOK_colon type','type_question',2,'p_type_question','Grammar4.py',935),
  ('method_declaration -> method_header method_body','method_declaration',2,'p_method_declaration','Grammar4.py',945),
  ('method_header -> KW_def name TOK_paraleft fun_params_question TOK_pararight type_question TOK_assignment','method_header',7,'p_method_header1','Grammar4.py',952),
  ('method_header -> KW_def name TOK_paraleft fun_params_question TOK_pararight','method_header',5,'p_method_header2','Grammar4.py',973),
  ('fun_params_question -> fun_params','fun_params_question',1,'p_fun_params_question','Grammar4.py',995),
  ('fun_params_question -> empty','fun_params_question',1,'p_fun_params_question','Grammar4.py',996),
  ('fun_params -> fun_param','fun_params',1,'p_fun_params','Grammar4.py',1007),
  ('fun_params -> fun_params TOK_comma fun_param','fun_params',3,'p_fun_params','Grammar4.py',1008),
  ('fun_param -> variable_declarator_id','fun_param',1,'p_fun_param','Grammar4.py',1018),
  ('method_body -> block','method_body',1,'p_method_body','Grammar4.py',1023),
  ('empty -> <empty>','empty',0,'p_empty','Grammar4.py',1032),
]
