
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '1B89E2A79B142683CEF70F10B4C33887'
    
_lr_action_items = {'TOK_divassign':([12,28,29,30,46,47,70,88,89,168,217,279,],[-30,62,-26,-25,-27,-28,-31,62,-25,-29,-33,-32,]),'TOK_and':([12,29,46,47,70,83,84,85,86,87,88,89,90,91,93,94,95,97,98,99,103,104,109,110,111,115,116,117,119,120,124,125,127,168,171,172,186,190,204,215,217,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,267,268,279,304,],[-30,-26,-27,-28,-31,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-58,-53,-80,-50,-85,-61,-81,-84,-75,-87,-48,-89,-82,-64,-90,205,-29,-72,-77,-73,-68,-69,-91,-33,-49,-47,-45,-63,-62,-60,-59,205,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,-32,-79,]),'TOK_xor':([12,29,46,47,70,83,84,85,86,87,88,89,90,91,93,95,97,98,99,103,104,109,110,111,115,116,117,119,120,124,125,168,171,172,186,190,204,215,217,243,244,245,246,247,248,249,254,255,256,257,258,259,260,261,262,267,279,304,],[-30,-26,-27,-28,-31,-46,170,-78,-70,-86,-77,-25,-74,-83,-71,-88,-58,-53,-80,-50,-85,-61,-81,-84,-75,-87,-48,-89,-82,-64,-90,-29,-72,-77,-73,-68,-69,-91,-33,-49,-47,170,-63,-62,-60,-59,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-32,-79,]),'KW_boolean':([122,161,195,251,274,287,301,],[201,201,201,201,201,201,201,]),'TOK_lesser':([12,29,46,47,70,85,86,87,88,89,90,91,93,95,97,98,99,103,104,109,110,111,115,116,119,120,124,125,168,171,172,186,190,204,215,217,246,247,248,249,254,255,256,257,258,259,260,261,262,267,279,304,],[-30,-26,-27,-28,-31,-78,-70,-86,-77,-25,-74,-83,-71,-88,-58,-53,-80,183,-85,-61,-81,-84,-75,-87,-89,-82,-64,-90,-29,-72,-77,-73,-68,-69,-91,-33,-63,-62,-60,-59,-56,-55,-57,-54,-65,-66,-67,183,183,-76,-32,-79,]),'TOK_colon':([74,158,165,167,210,240,285,293,],[161,-191,161,-112,274,161,-192,-111,]),'KW_private':([5,8,11,12,14,15,16,17,23,24,25,27,29,31,32,34,35,37,41,42,46,47,49,50,53,55,56,59,61,70,76,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,103,104,105,107,108,109,110,111,113,114,115,116,117,118,119,120,124,125,126,127,128,132,133,139,143,144,146,147,168,171,172,186,190,204,206,211,215,217,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,267,268,276,279,281,289,291,302,304,305,321,327,337,340,344,348,],[-5,-4,19,-30,19,-6,-166,-186,-143,-11,-137,-138,-26,-15,-16,-145,-140,-14,-141,-13,-27,-28,-144,-164,19,-142,-139,-200,-8,-31,-146,-199,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-134,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-187,-106,-75,-87,-48,-105,-89,-82,-64,-90,-104,-40,-198,-102,-12,-178,19,-176,-177,-24,-29,-72,-77,-73,-68,-69,-165,-200,-91,-33,-49,-47,-45,-63,-62,-60,-59,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,-177,-32,-155,-137,-149,-132,-79,-154,-136,-150,-23,-133,-131,-135,]),'KW_int':([122,161,195,251,274,287,301,],[202,202,202,202,202,202,202,]),'TOK_modassign':([12,28,29,30,46,47,70,88,89,168,217,279,],[-30,63,-26,-25,-27,-28,-31,63,-25,-29,-33,-32,]),'TOK_or_bitwise':([12,29,46,47,70,83,84,85,86,87,88,89,90,91,93,94,95,97,98,99,103,104,109,110,111,115,116,117,119,120,124,125,168,171,172,186,190,204,215,217,243,244,245,246,247,248,249,254,255,256,257,258,259,260,261,262,267,268,279,304,],[-30,-26,-27,-28,-31,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,173,-88,-58,-53,-80,-50,-85,-61,-81,-84,-75,-87,-48,-89,-82,-64,-90,-29,-72,-77,-73,-68,-69,-91,-33,-49,-47,-45,-63,-62,-60,-59,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,173,-32,-79,]),'KW_var':([5,8,12,14,15,16,17,18,19,21,22,23,24,25,27,29,31,32,34,35,37,40,41,42,44,46,47,49,50,53,55,56,59,61,70,76,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,103,104,105,107,108,109,110,111,113,114,115,116,117,118,119,120,124,125,126,127,128,132,133,139,143,144,146,147,168,171,172,186,190,204,206,211,212,215,217,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,267,268,276,279,281,289,291,302,304,305,321,327,337,340,344,348,],[-5,-4,-30,-200,-6,-166,-186,-98,-97,-96,-99,-143,-11,-137,-138,-26,-15,-16,-145,-140,-14,-99,-141,-13,78,-27,-28,-144,-164,-200,-142,-139,-200,-8,-31,-146,-199,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-134,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-187,-106,-75,-87,-48,-105,-89,-82,-64,-90,-104,-40,-198,-102,-12,-178,-200,-176,-177,-24,-29,-72,-77,-73,-68,-69,-165,-200,78,-91,-33,-49,-47,-45,-63,-62,-60,-59,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,-177,-32,-155,-137,-149,-132,-79,-154,-136,-150,-23,-133,-131,-135,]),'TOK_lsqb':([12,30,46,47,70,89,121,168,179,217,233,263,279,],[-30,71,-27,-28,152,71,195,-29,251,-33,287,301,-32,]),'KW_true':([12,46,47,48,51,62,63,64,65,66,67,68,69,71,74,75,77,92,106,112,122,123,134,152,158,160,162,168,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,196,198,199,200,201,202,205,214,218,223,229,230,231,232,234,235,236,252,266,272,285,294,298,309,310,311,315,323,326,329,330,331,339,342,],[-30,-27,-28,87,87,-36,-37,-39,-38,87,-34,-35,87,87,-200,-188,87,87,87,87,87,87,87,87,-191,-190,-182,-29,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-122,-124,-123,-126,-125,-121,87,87,87,87,-189,-120,-119,-127,-181,-129,-128,87,87,87,-192,87,87,87,-160,-161,87,87,-130,87,87,87,87,87,]),'TOK_assignment':([12,28,29,30,46,47,70,74,88,89,158,160,162,165,167,168,196,198,199,200,201,202,209,217,227,230,231,232,234,235,236,239,279,285,293,297,308,326,],[-30,67,-26,-25,-27,-28,-31,-200,67,-25,-191,229,-182,-200,-112,-29,-122,-124,-123,-126,-125,-121,272,-33,272,-120,-119,-127,-181,-129,-128,294,-32,-192,-111,318,-118,-130,]),'KW_string':([122,161,195,251,274,287,301,],[198,198,198,198,198,198,198,]),'TOK_divide':([12,29,46,47,70,85,86,87,88,89,90,91,93,95,99,104,109,110,111,115,116,119,120,124,125,168,171,172,186,190,204,215,217,246,247,258,259,260,267,279,304,],[-30,-26,-27,-28,-31,-78,-70,-86,-77,-25,-74,-83,-71,-88,-80,-85,188,-81,-84,-75,-87,-89,-82,-64,-90,-29,-72,-77,-73,-68,-69,-91,-33,188,188,-65,-66,-67,-76,-32,-79,]),'TOK_mulassign':([12,28,29,30,46,47,70,88,89,168,217,279,],[-30,68,-26,-25,-27,-28,-31,68,-25,-29,-33,-32,]),'TOK_identifier':([3,5,6,8,12,14,15,16,17,23,24,25,27,29,31,32,34,35,36,37,41,42,46,47,48,49,50,51,53,55,56,59,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,132,133,134,136,140,146,147,152,158,159,160,161,162,166,168,169,170,171,172,173,174,175,176,177,178,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,198,199,200,201,202,204,205,206,211,214,215,217,218,221,222,223,229,230,231,232,234,235,236,237,238,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,266,267,268,269,270,272,274,276,277,279,281,284,285,287,289,291,294,296,298,301,302,304,305,309,310,311,314,315,321,323,326,327,329,330,331,334,337,339,340,342,344,346,348,],[12,-5,13,-4,-30,12,-6,-166,-186,-143,-11,-137,-138,-26,-15,-16,-145,-140,12,-14,-141,-13,-27,-28,12,-144,-164,12,12,-142,-139,-200,-8,-36,-37,-39,-38,12,-34,-35,12,-31,12,157,-200,-188,-146,12,-100,167,-101,12,-199,-46,-44,-78,-70,-86,-77,-25,-74,-83,12,-71,-42,-88,-134,-58,-53,-80,12,-21,-50,-85,-22,12,-19,-20,-61,-81,-84,12,-187,-106,-75,-87,-48,-105,-89,-82,12,12,-64,-90,-104,-40,-198,-102,-12,12,12,210,-180,-24,12,-191,210,-190,12,-182,240,-29,12,12,-72,-77,12,12,12,12,12,12,12,12,12,12,12,-73,12,12,12,-68,12,12,12,12,-122,-124,-123,-126,-125,-121,-69,12,-165,-200,12,-91,-33,12,12,157,12,-189,-120,-119,-127,-181,-129,-128,12,293,-49,-47,-45,-63,-62,-60,-59,12,12,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,12,-76,-43,12,240,12,12,-180,-179,-32,-155,210,-192,12,-137,-149,12,240,12,12,-132,-79,-154,12,-160,-161,12,12,-136,12,-130,-150,12,12,12,12,-23,12,-133,12,-131,12,-135,]),'KW_for':([5,8,12,14,15,16,17,23,24,25,27,29,31,32,34,35,37,41,42,46,47,49,50,53,55,56,61,70,76,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,103,104,105,107,108,109,110,111,113,114,115,116,117,118,119,120,124,125,126,127,128,132,133,147,168,171,172,186,190,204,206,215,217,221,237,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,267,268,269,279,281,289,291,302,304,305,314,321,327,334,337,340,344,346,348,],[-5,-4,-30,33,-6,-166,-186,-143,-11,-137,-138,-26,-15,-16,-145,-140,-14,-141,-13,-27,-28,-144,-164,33,-142,-139,-8,-31,-146,-199,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-134,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-187,-106,-75,-87,-48,-105,-89,-82,-64,-90,-104,-40,-198,-102,-12,-24,-29,-72,-77,-73,-68,-69,-165,-91,-33,33,33,-49,-47,-45,-63,-62,-60,-59,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,33,-32,-155,-137,-149,-132,-79,-154,33,-136,-150,33,-23,-133,-131,33,-135,]),'TOK_addassign':([12,28,29,30,46,47,70,88,89,168,217,279,],[-30,65,-26,-25,-27,-28,-31,65,-25,-29,-33,-32,]),'KW_to':([12,29,46,47,70,83,84,85,86,87,88,89,90,91,93,94,95,97,98,99,102,103,104,105,107,108,109,110,111,115,116,117,119,120,124,125,127,147,168,171,172,186,190,204,215,217,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,267,268,279,283,304,337,],[-30,-26,-27,-28,-31,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-75,-87,-48,-89,-82,-64,-90,-40,-24,-29,-72,-77,-73,-68,-69,-91,-33,-49,-47,-45,-63,-62,-60,-59,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,-32,311,-79,-23,]),'TOK_tilda':([12,46,47,48,51,62,63,64,65,66,67,68,69,71,74,75,77,92,106,112,122,123,134,152,158,160,162,168,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,196,198,199,200,201,202,205,214,218,223,229,230,231,232,234,235,236,252,266,272,285,294,298,309,310,311,315,323,326,329,330,331,339,342,],[-30,-27,-28,92,92,-36,-37,-39,-38,92,-34,-35,92,92,-200,-188,92,92,92,92,92,92,92,92,-191,-190,-182,-29,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-122,-124,-123,-126,-125,-121,92,92,92,92,-189,-120,-119,-127,-181,-129,-128,92,92,92,-192,92,92,92,-160,-161,92,92,-130,92,92,92,92,92,]),'TOK_dot':([12,46,121,],[-30,81,193,]),'TOK_rsqb':([12,29,46,47,70,83,84,85,86,87,88,89,90,91,93,94,95,97,98,99,102,103,104,105,107,108,109,110,111,115,116,117,119,120,124,125,127,147,153,168,171,172,186,190,196,198,199,200,201,202,204,215,216,217,230,231,232,235,236,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,265,267,268,279,299,304,313,322,326,337,],[-30,-26,-27,-28,-31,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-75,-87,-48,-89,-82,-64,-90,-40,-24,217,-29,-72,-77,-73,-68,-122,-124,-123,-126,-125,-121,-69,-91,279,-33,-120,-119,-127,-129,-128,-49,-47,-45,-63,-62,-60,-59,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,303,-76,-43,-32,320,-79,326,332,-130,-23,]),'KW_double':([122,161,195,251,274,287,301,],[196,196,196,196,196,196,196,]),'KW_null':([12,46,47,48,51,62,63,64,65,66,67,68,69,71,74,75,77,92,106,112,122,123,134,152,158,160,162,168,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,196,198,199,200,201,202,205,214,218,223,229,230,231,232,234,235,236,252,266,272,285,294,298,309,310,311,315,323,326,329,330,331,339,342,],[-30,-27,-28,95,95,-36,-37,-39,-38,95,-34,-35,95,95,-200,-188,95,95,95,95,95,95,95,95,-191,-190,-182,-29,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-122,-124,-123,-126,-125,-121,95,95,95,95,-189,-120,-119,-127,-181,-129,-128,95,95,95,-192,95,95,95,-160,-161,95,95,-130,95,95,95,95,95,]),'TOK_comma':([12,29,46,47,70,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,103,104,105,107,108,109,110,111,114,115,116,117,118,119,120,124,125,126,127,141,142,147,148,151,162,165,167,168,171,172,186,190,196,198,199,200,201,202,204,209,215,217,224,225,227,230,231,232,234,235,236,240,241,242,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,267,268,271,273,275,278,279,286,293,295,302,304,306,307,308,312,317,321,326,335,336,337,340,344,345,347,348,],[-30,-26,-27,-28,-31,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-134,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-106,-75,-87,-48,-105,-89,-82,-64,-90,-104,-40,-173,211,-24,214,-92,-182,238,-112,-29,-72,-77,-73,-68,-122,-124,-123,-126,-125,-121,-69,-200,-91,-33,-195,284,-200,-120,-119,-127,-181,-129,-128,-200,-113,296,-49,-47,-45,-63,-62,-60,-59,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,-175,-117,-174,-93,-32,-197,-111,-115,-132,-79,296,-116,-118,-196,-114,-136,-130,-107,342,-23,-133,-131,214,-108,-135,]),'KW_while':([5,8,12,14,15,16,17,23,24,25,27,29,31,32,34,35,37,41,42,46,47,49,50,53,55,56,61,70,76,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,103,104,105,107,108,109,110,111,113,114,115,116,117,118,119,120,124,125,126,127,128,132,133,147,168,171,172,186,190,204,206,215,217,221,237,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,267,268,269,279,281,289,291,302,304,305,314,321,327,334,337,340,344,346,348,],[-5,-4,-30,54,-6,-166,-186,-143,-11,-137,-138,-26,-15,-16,-145,-140,-14,-141,-13,-27,-28,-144,-164,54,-142,-139,-8,-31,-146,-199,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-134,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-187,-106,-75,-87,-48,-105,-89,-82,-64,-90,-104,-40,-198,-102,-12,-24,-29,-72,-77,-73,-68,-69,-165,-91,-33,54,54,-49,-47,-45,-63,-62,-60,-59,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,54,-32,-155,-137,-149,-132,-79,-154,54,-136,-150,54,-23,-133,-131,54,-135,]),'KW_protected':([5,8,11,12,14,15,16,17,23,24,25,27,29,31,32,34,35,37,41,42,46,47,49,50,53,55,56,59,61,70,76,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,103,104,105,107,108,109,110,111,113,114,115,116,117,118,119,120,124,125,126,127,128,132,133,139,143,144,146,147,168,171,172,186,190,204,206,211,215,217,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,267,268,276,279,281,289,291,302,304,305,321,327,337,340,344,348,],[-5,-4,21,-30,21,-6,-166,-186,-143,-11,-137,-138,-26,-15,-16,-145,-140,-14,-141,-13,-27,-28,-144,-164,21,-142,-139,-200,-8,-31,-146,-199,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-134,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-187,-106,-75,-87,-48,-105,-89,-82,-64,-90,-104,-40,-198,-102,-12,-178,21,-176,-177,-24,-29,-72,-77,-73,-68,-69,-165,-200,-91,-33,-49,-47,-45,-63,-62,-60,-59,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,-177,-32,-155,-137,-149,-132,-79,-154,-136,-150,-23,-133,-131,-135,]),'KW_def':([5,8,12,14,15,16,17,23,24,25,27,29,31,32,34,35,37,41,42,46,47,49,50,53,55,56,61,70,76,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,103,104,105,107,108,109,110,111,113,114,115,116,117,118,119,120,124,125,126,127,128,132,133,147,168,171,172,186,190,204,206,215,217,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,267,268,279,281,289,291,302,304,305,321,327,337,340,344,348,],[-5,-4,-30,36,-6,-166,-186,-143,-11,-137,-138,-26,-15,-16,-145,-140,-14,-141,-13,-27,-28,-144,-164,36,-142,-139,-8,-31,-146,-199,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-134,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-187,-106,-75,-87,-48,-105,-89,-82,-64,-90,-104,-40,-198,-102,-12,-24,-29,-72,-77,-73,-68,-69,-165,-91,-33,-49,-47,-45,-63,-62,-60,-59,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,-32,-155,-137,-149,-132,-79,-154,-136,-150,-23,-133,-131,-135,]),'KW_ofdim':([193,],[263,]),'KW_if':([5,8,12,14,15,16,17,23,24,25,27,29,31,32,34,35,37,41,42,46,47,48,49,50,51,53,55,56,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,103,104,105,107,108,109,110,111,113,114,115,116,117,118,119,120,122,124,125,126,127,128,132,133,134,147,152,158,160,162,168,171,172,178,186,190,194,196,198,199,200,201,202,204,206,214,215,217,218,221,223,229,230,231,232,234,235,236,237,243,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,267,268,269,272,279,281,285,289,291,294,298,302,304,305,309,310,311,314,315,321,323,326,327,329,330,334,337,339,340,342,344,346,348,],[-5,-4,-30,39,-6,-166,-186,-143,-11,-137,-138,-26,-15,-16,-145,-140,-14,-141,-13,-27,-28,100,-144,-164,100,39,-142,-139,-8,-36,-37,-39,-38,100,-34,-35,100,-31,100,-200,-188,-146,100,-199,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-134,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-187,-106,-75,-87,-48,-105,-89,-82,100,-64,-90,-104,-40,-198,-102,-12,100,-24,100,-191,-190,-182,-29,-72,-77,100,-73,-68,100,-122,-124,-123,-126,-125,-121,-69,-165,100,-91,-33,100,39,100,-189,-120,-119,-127,-181,-129,-128,292,-49,-47,-45,-63,-62,-60,-59,100,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,39,100,-32,-155,-192,-137,-149,100,100,-132,-79,-154,100,-160,-161,39,100,-136,100,-130,-150,100,100,292,-23,100,-133,100,-131,292,-135,]),'KW_new':([12,46,47,48,74,75,158,160,162,168,196,198,199,200,201,202,229,230,231,232,234,235,236,272,285,294,326,329,342,],[-30,-27,-28,101,-200,-188,-191,-190,-182,-29,-122,-124,-123,-126,-125,-121,-189,-120,-119,-127,-181,-129,-128,101,-192,101,-130,101,101,]),'TOK_rshift':([12,29,46,47,70,85,86,87,88,89,90,91,93,95,97,98,99,104,109,110,111,115,116,119,120,124,125,168,171,172,186,190,204,215,217,246,247,248,249,254,255,256,257,258,259,260,267,279,304,],[-30,-26,-27,-28,-31,-78,-70,-86,-77,-25,-74,-83,-71,-88,-58,176,-80,-85,-61,-81,-84,-75,-87,-89,-82,-64,-90,-29,-72,-77,-73,-68,-69,-91,-33,-63,-62,-60,-59,176,176,176,176,-65,-66,-67,-76,-32,-79,]),'$end':([1,2,4,5,8,10,15,16,17,61,],[-2,-1,0,-5,-4,-3,-6,-166,-186,-8,]),'TOK_string':([12,46,47,48,51,62,63,64,65,66,67,68,69,71,74,75,77,92,106,112,122,123,134,152,158,160,162,168,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,196,198,199,200,201,202,205,214,218,223,229,230,231,232,234,235,236,252,266,272,285,294,298,309,310,311,315,323,326,329,330,331,339,342,],[-30,-27,-28,104,104,-36,-37,-39,-38,104,-34,-35,104,104,-200,-188,104,104,104,104,104,104,104,104,-191,-190,-182,-29,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-122,-124,-123,-126,-125,-121,104,104,104,104,-189,-120,-119,-127,-181,-129,-128,104,104,104,-192,104,104,104,-160,-161,104,104,-130,104,104,104,104,104,]),'TOK_not':([12,46,47,48,51,62,63,64,65,66,67,68,69,71,74,75,77,92,106,112,122,123,134,152,158,160,162,168,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,196,198,199,200,201,202,205,214,218,223,229,230,231,232,234,235,236,252,266,272,285,294,298,309,310,311,315,323,326,329,330,331,339,342,],[-30,-27,-28,106,106,-36,-37,-39,-38,106,-34,-35,106,106,-200,-188,106,106,106,106,106,106,106,106,-191,-190,-182,-29,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-122,-124,-123,-126,-125,-121,106,106,106,106,-189,-120,-119,-127,-181,-129,-128,106,106,106,-192,106,106,106,-160,-161,106,106,-130,106,106,106,106,106,]),'TOK_or':([12,29,46,47,70,83,84,85,86,87,88,89,90,91,93,94,95,97,98,99,102,103,104,109,110,111,115,116,117,119,120,124,125,127,168,171,172,186,190,204,215,217,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,267,268,279,304,338,],[-30,-26,-27,-28,-31,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-58,-53,-80,181,-50,-85,-61,-81,-84,-75,-87,-48,-89,-82,-64,-90,-40,-29,-72,-77,-73,-68,-69,-91,-33,-49,-47,-45,-63,-62,-60,-59,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,-32,-79,181,]),'KW_val':([5,8,12,14,15,16,17,18,19,21,22,23,24,25,27,29,31,32,34,35,37,40,41,42,44,46,47,49,50,53,55,56,59,61,70,76,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,103,104,105,107,108,109,110,111,113,114,115,116,117,118,119,120,124,125,126,127,128,132,133,139,143,144,146,147,168,171,172,186,190,204,206,211,212,215,217,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,267,268,276,279,281,289,291,302,304,305,321,327,337,340,344,348,],[-5,-4,-30,-200,-6,-166,-186,-98,-97,-96,-99,-143,-11,-137,-138,-26,-15,-16,-145,-140,-14,-99,-141,-13,80,-27,-28,-144,-164,-200,-142,-139,-200,-8,-31,-146,-199,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-134,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-187,-106,-75,-87,-48,-105,-89,-82,-64,-90,-104,-40,-198,-102,-12,-178,-200,-176,-177,-24,-29,-72,-77,-73,-68,-69,-165,-200,80,-91,-33,-49,-47,-45,-63,-62,-60,-59,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,-177,-32,-155,-137,-149,-132,-79,-154,-136,-150,-23,-133,-131,-135,]),'TOK_float':([12,46,47,48,51,62,63,64,65,66,67,68,69,71,74,75,77,92,106,112,122,123,134,152,158,160,162,168,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,196,198,199,200,201,202,205,214,218,223,229,230,231,232,234,235,236,252,266,272,285,294,298,309,310,311,315,323,326,329,330,331,339,342,],[-30,-27,-28,119,119,-36,-37,-39,-38,119,-34,-35,119,119,-200,-188,119,119,119,119,119,119,119,119,-191,-190,-182,-29,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-122,-124,-123,-126,-125,-121,119,119,119,119,-189,-120,-119,-127,-181,-129,-128,119,119,119,-192,119,119,119,-160,-161,119,119,-130,119,119,119,119,119,]),'TOK_nequal':([12,29,46,47,70,85,86,87,88,89,90,91,93,95,97,98,99,103,104,109,110,111,115,116,117,119,120,124,125,168,171,172,186,190,204,215,217,243,246,247,248,249,254,255,256,257,258,259,260,261,262,267,279,304,],[-30,-26,-27,-28,-31,-78,-70,-86,-77,-25,-74,-83,-71,-88,-58,-53,-80,-50,-85,-61,-81,-84,-75,-87,192,-89,-82,-64,-90,-29,-72,-77,-73,-68,-69,-91,-33,192,-63,-62,-60,-59,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-32,-79,]),'TOK_plus':([12,29,46,47,48,51,62,63,64,65,66,67,68,69,70,71,74,75,77,85,86,87,88,89,90,91,92,93,95,97,99,104,106,109,110,111,112,115,116,119,120,122,123,124,125,134,152,158,160,162,168,169,170,171,172,173,174,175,176,177,178,181,182,183,184,185,186,187,188,189,190,191,192,194,196,198,199,200,201,202,204,205,214,215,217,218,223,229,230,231,232,234,235,236,246,247,248,249,252,258,259,260,266,267,272,279,285,294,298,304,309,310,311,315,323,326,329,330,331,339,342,],[-30,-26,-27,-28,112,112,-36,-37,-39,-38,112,-34,-35,112,-31,112,-200,-188,112,-78,-70,-86,-77,-25,-74,-83,112,-71,-88,175,-80,-85,112,-61,-81,-84,112,-75,-87,-89,-82,112,112,-64,-90,112,112,-191,-190,-182,-29,112,112,-72,-77,112,112,112,112,112,112,112,112,112,112,112,-73,112,112,112,-68,112,112,112,-122,-124,-123,-126,-125,-121,-69,112,112,-91,-33,112,112,-189,-120,-119,-127,-181,-129,-128,-63,-62,175,175,112,-65,-66,-67,112,-76,112,-32,-192,112,112,-79,112,-160,-161,112,112,-130,112,112,112,112,112,]),'TOK_equal':([12,29,46,47,70,85,86,87,88,89,90,91,93,95,97,98,99,103,104,109,110,111,115,116,117,119,120,124,125,168,171,172,186,190,204,215,217,243,246,247,248,249,254,255,256,257,258,259,260,261,262,267,279,304,],[-30,-26,-27,-28,-31,-78,-70,-86,-77,-25,-74,-83,-71,-88,-58,-53,-80,-50,-85,-61,-81,-84,-75,-87,191,-89,-82,-64,-90,-29,-72,-77,-73,-68,-69,-91,-33,191,-63,-62,-60,-59,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-32,-79,]),'KW_until':([12,29,46,47,70,83,84,85,86,87,88,89,90,91,93,94,95,97,98,99,102,103,104,105,107,108,109,110,111,115,116,117,119,120,124,125,127,147,168,171,172,186,190,204,215,217,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,267,268,279,283,304,337,],[-30,-26,-27,-28,-31,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-75,-87,-48,-89,-82,-64,-90,-40,-24,-29,-72,-77,-73,-68,-69,-91,-33,-49,-47,-45,-63,-62,-60,-59,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,-32,310,-79,-23,]),'KW_else':([12,23,29,34,46,47,49,50,55,61,70,76,83,84,85,86,87,88,89,90,91,93,94,95,97,98,99,102,103,104,105,107,108,109,110,111,115,116,117,119,120,124,125,127,147,168,171,172,186,190,204,206,215,217,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,267,268,279,288,289,290,304,319,337,341,349,],[-30,-143,-26,-145,-27,-28,-144,-164,-142,-8,-31,-146,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-75,-87,-48,-89,-82,-64,-90,-40,-24,-29,-72,-77,-73,-68,-69,-165,-91,-33,-49,-47,-45,-63,-62,-60,-59,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,-32,-153,-152,314,-79,330,-23,346,-151,]),'TOK_leq':([12,29,46,47,70,85,86,87,88,89,90,91,93,95,97,98,99,103,104,109,110,111,115,116,119,120,124,125,168,171,172,186,190,204,215,217,246,247,248,249,254,255,256,257,258,259,260,261,262,267,279,304,],[-30,-26,-27,-28,-31,-78,-70,-86,-77,-25,-74,-83,-71,-88,-58,-53,-80,184,-85,-61,-81,-84,-75,-87,-89,-82,-64,-90,-29,-72,-77,-73,-68,-69,-91,-33,-63,-62,-60,-59,-56,-55,-57,-54,-65,-66,-67,184,184,-76,-32,-79,]),'TOK_char':([12,46,47,48,51,62,63,64,65,66,67,68,69,71,74,75,77,92,106,112,122,123,134,152,158,160,162,168,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,196,198,199,200,201,202,205,214,218,223,229,230,231,232,234,235,236,252,266,272,285,294,298,309,310,311,315,323,326,329,330,331,339,342,],[-30,-27,-28,111,111,-36,-37,-39,-38,111,-34,-35,111,111,-200,-188,111,111,111,111,111,111,111,111,-191,-190,-182,-29,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-122,-124,-123,-126,-125,-121,111,111,111,111,-189,-120,-119,-127,-181,-129,-128,111,111,111,-192,111,111,111,-160,-161,111,111,-130,111,111,111,111,111,]),'KW_void':([122,161,195,251,274,287,301,],[200,200,200,200,200,200,200,]),'KW_false':([12,46,47,48,51,62,63,64,65,66,67,68,69,71,74,75,77,92,106,112,122,123,134,152,158,160,162,168,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,196,198,199,200,201,202,205,214,218,223,229,230,231,232,234,235,236,252,266,272,285,294,298,309,310,311,315,323,326,329,330,331,339,342,],[-30,-27,-28,116,116,-36,-37,-39,-38,116,-34,-35,116,116,-200,-188,116,116,116,116,116,116,116,116,-191,-190,-182,-29,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,-122,-124,-123,-126,-125,-121,116,116,116,116,-189,-120,-119,-127,-181,-129,-128,116,116,116,-192,116,116,116,-160,-161,116,116,-130,116,116,116,116,116,]),'TOK_subassign':([12,28,29,30,46,47,70,88,89,168,217,279,],[-30,64,-26,-25,-27,-28,-31,64,-25,-29,-33,-32,]),'TOK_pararight':([12,29,46,47,59,69,70,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,103,104,105,107,108,109,110,111,114,115,116,117,118,119,120,124,125,126,127,141,142,145,146,147,148,149,150,151,154,155,156,159,162,163,168,171,172,186,190,194,196,197,198,199,200,201,202,203,204,207,209,215,217,219,220,224,225,226,227,228,230,231,232,234,235,236,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,264,267,268,271,273,275,278,279,280,282,286,295,300,302,304,306,307,308,312,317,321,323,325,326,328,333,335,336,337,338,340,344,345,347,348,],[-30,-26,-27,-28,-200,-200,-31,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-134,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-106,-75,-87,-48,-105,-89,-82,-64,-90,-104,-40,-173,-171,213,-172,-24,-94,-95,215,-92,-200,221,-156,-200,-182,237,-29,-72,-77,-73,-68,-200,-122,266,-124,-123,-126,-125,-121,267,-69,269,-200,-91,-33,-158,-163,-195,-193,285,-200,-194,-120,-119,-127,-181,-129,-128,-200,-113,297,-49,-47,-45,-63,-62,-60,-59,298,-200,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,302,-76,-43,-175,-117,-174,-93,-32,-162,-157,-197,-115,321,-132,-79,324,-116,-118,-196,-114,-136,-200,-159,-130,334,340,-107,343,-23,344,-133,-131,348,-108,-135,]),'TOK_geq':([12,29,46,47,70,85,86,87,88,89,90,91,93,95,97,98,99,103,104,109,110,111,115,116,119,120,124,125,168,171,172,186,190,204,215,217,246,247,248,249,254,255,256,257,258,259,260,261,262,267,279,304,],[-30,-26,-27,-28,-31,-78,-70,-86,-77,-25,-74,-83,-71,-88,-58,-53,-80,182,-85,-61,-81,-84,-75,-87,-89,-82,-64,-90,-29,-72,-77,-73,-68,-69,-91,-33,-63,-62,-60,-59,-56,-55,-57,-54,-65,-66,-67,182,182,-76,-32,-79,]),'KW_char':([122,161,195,251,274,287,301,],[199,199,199,199,199,199,199,]),'TOK_int':([12,46,47,48,51,62,63,64,65,66,67,68,69,71,74,75,77,92,106,112,122,123,134,152,158,160,162,168,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,196,198,199,200,201,202,205,214,218,223,229,230,231,232,234,235,236,252,266,272,285,294,298,309,310,311,315,323,326,329,330,331,339,342,],[-30,-27,-28,125,125,-36,-37,-39,-38,125,-34,-35,125,125,-200,-188,125,125,125,125,125,125,125,125,-191,-190,-182,-29,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,-122,-124,-123,-126,-125,-121,125,125,125,125,-189,-120,-119,-127,-181,-129,-128,125,125,125,-192,125,125,125,-160,-161,125,125,-130,125,125,125,125,125,]),'KW_array':([12,46,47,48,74,75,101,158,160,161,162,168,195,196,198,199,200,201,202,229,230,231,232,234,235,236,251,272,274,285,287,294,301,326,329,342,],[-30,-27,-28,121,-200,-188,179,-191,-190,233,-182,-29,233,-122,-124,-123,-126,-125,-121,-189,-120,-119,-127,-181,-129,-128,233,121,233,-192,233,121,233,-130,121,121,]),'KW_override':([59,211,],[139,139,]),'TOK_times':([12,29,46,47,70,85,86,87,88,89,90,91,93,95,99,104,109,110,111,115,116,119,120,124,125,168,171,172,186,190,204,215,217,246,247,258,259,260,267,279,304,],[-30,-26,-27,-28,-31,-78,-70,-86,-77,-25,-74,-83,-71,-88,-80,-85,187,-81,-84,-75,-87,-89,-82,-64,-90,-29,-72,-77,-73,-68,-69,-91,-33,187,187,-65,-66,-67,-76,-32,-79,]),'TOK_paraleft':([11,12,18,19,20,21,22,30,33,39,46,47,48,51,54,62,63,64,65,66,67,68,69,71,73,74,75,77,78,79,80,89,92,100,106,112,121,122,123,134,152,158,160,162,168,169,170,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,191,192,194,196,198,199,200,201,202,205,208,214,218,223,229,230,231,232,234,235,236,252,266,272,285,292,294,298,303,309,310,311,315,318,320,323,326,329,330,331,332,339,342,],[-200,-30,-98,-97,59,-96,-99,69,72,77,-27,-28,122,122,134,-36,-37,-39,-38,122,-34,-35,122,122,159,-200,-188,122,-100,166,-101,69,122,178,122,122,194,122,122,122,122,-191,-190,-182,-29,122,122,122,122,122,122,122,122,252,122,122,122,122,122,122,122,122,122,122,122,-122,-124,-123,-126,-125,-121,122,270,122,122,122,-189,-120,-119,-127,-181,-129,-128,122,122,122,-192,315,122,122,323,122,-160,-161,122,329,331,122,-130,122,122,122,339,122,122,]),'KW_obj':([0,1,2,5,8,10,12,14,15,16,17,23,24,25,27,29,31,32,34,35,37,41,42,46,47,49,50,53,55,56,61,70,76,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,103,104,105,107,108,109,110,111,113,114,115,116,117,118,119,120,124,125,126,127,128,132,133,147,168,171,172,186,190,204,206,215,217,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,267,268,279,281,289,291,302,304,305,321,327,337,340,344,348,],[6,-2,6,-5,-4,-3,-30,6,-6,-166,-186,-143,-11,-137,-138,-26,-15,-16,-145,-140,-14,-141,-13,-27,-28,-144,-164,6,-142,-139,-8,-31,-146,-199,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-134,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-187,-106,-75,-87,-48,-105,-89,-82,-64,-90,-104,-40,-198,-102,-12,-24,-29,-72,-77,-73,-68,-69,-165,-91,-33,-49,-47,-45,-63,-62,-60,-59,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,-32,-155,-137,-149,-132,-79,-154,-136,-150,-23,-133,-131,-135,]),'KW_extends':([11,12,18,19,20,21,22,57,58,60,213,],[-200,-30,-98,-97,-200,-96,-99,-168,136,-169,-170,]),'TOK_semi':([5,8,12,14,15,16,17,23,24,25,27,29,31,32,34,35,37,38,41,42,43,45,46,47,49,50,51,52,53,55,56,61,70,76,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,103,104,105,107,108,109,110,111,113,114,115,116,117,118,119,120,124,125,126,127,128,129,130,131,132,133,147,154,156,164,168,171,172,186,190,204,206,215,217,219,220,221,237,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,267,268,269,279,280,281,289,291,302,304,305,314,316,321,325,327,334,337,340,343,344,346,348,],[-5,-4,-30,50,-6,-166,-186,-143,-11,-137,-138,-26,-15,-16,-145,-140,-14,76,-141,-13,-147,-148,-27,-28,-144,-164,-200,132,50,-142,-139,-8,-31,-146,-199,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-134,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-187,-106,-75,-87,-48,-105,-89,-82,-64,-90,-104,-40,-198,-18,206,-17,-102,-12,-24,-200,222,-103,-29,-72,-77,-73,-68,-69,-165,-91,-33,-158,-163,50,50,-49,-47,-45,-63,-62,-60,-59,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,50,-32,-162,-155,-137,-149,-132,-79,-154,50,-109,-136,-159,-150,50,-23,-133,-110,-131,50,-135,]),'TOK_choose':([157,],[223,]),'TOK_modulus':([12,29,46,47,70,85,86,87,88,89,90,91,93,95,99,104,109,110,111,115,116,119,120,124,125,168,171,172,186,190,204,215,217,246,247,258,259,260,267,279,304,],[-30,-26,-27,-28,-31,-78,-70,-86,-77,-25,-74,-83,-71,-88,-80,-85,189,-81,-84,-75,-87,-89,-82,-64,-90,-29,-72,-77,-73,-68,-69,-91,-33,189,189,-65,-66,-67,-76,-32,-79,]),'TOK_and_bitwise':([12,29,46,47,70,83,85,86,87,88,89,90,91,93,95,97,98,99,103,104,109,110,111,115,116,117,119,120,124,125,168,171,172,186,190,204,215,217,243,244,246,247,248,249,254,255,256,257,258,259,260,261,262,267,279,304,],[-30,-26,-27,-28,-31,169,-78,-70,-86,-77,-25,-74,-83,-71,-88,-58,-53,-80,-50,-85,-61,-81,-84,-75,-87,-48,-89,-82,-64,-90,-29,-72,-77,-73,-68,-69,-91,-33,-49,169,-63,-62,-60,-59,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-32,-79,]),'TOK_minus':([12,29,46,47,48,51,62,63,64,65,66,67,68,69,70,71,74,75,77,85,86,87,88,89,90,91,92,93,95,97,99,104,106,109,110,111,112,115,116,119,120,122,123,124,125,134,152,158,160,162,168,169,170,171,172,173,174,175,176,177,178,181,182,183,184,185,186,187,188,189,190,191,192,194,196,198,199,200,201,202,204,205,214,215,217,218,223,229,230,231,232,234,235,236,246,247,248,249,252,258,259,260,266,267,272,279,285,294,298,304,309,310,311,315,323,326,329,330,331,339,342,],[-30,-26,-27,-28,123,123,-36,-37,-39,-38,123,-34,-35,123,-31,123,-200,-188,123,-78,-70,-86,-77,-25,-74,-83,123,-71,-88,174,-80,-85,123,-61,-81,-84,123,-75,-87,-89,-82,123,123,-64,-90,123,123,-191,-190,-182,-29,123,123,-72,-77,123,123,123,123,123,123,123,123,123,123,123,-73,123,123,123,-68,123,123,123,-122,-124,-123,-126,-125,-121,-69,123,123,-91,-33,123,123,-189,-120,-119,-127,-181,-129,-128,-63,-62,174,174,123,-65,-66,-67,123,-76,123,-32,-192,123,123,-79,123,-160,-161,123,123,-130,123,123,123,123,123,]),'TOK_greater':([12,29,46,47,70,85,86,87,88,89,90,91,93,95,97,98,99,103,104,109,110,111,115,116,119,120,124,125,168,171,172,186,190,204,215,217,246,247,248,249,254,255,256,257,258,259,260,261,262,267,279,304,],[-30,-26,-27,-28,-31,-78,-70,-86,-77,-25,-74,-83,-71,-88,-58,-53,-80,185,-85,-61,-81,-84,-75,-87,-89,-82,-64,-90,-29,-72,-77,-73,-68,-69,-91,-33,-63,-62,-60,-59,-56,-55,-57,-54,-65,-66,-67,185,185,-76,-32,-79,]),'TOK_lshift':([12,29,46,47,70,85,86,87,88,89,90,91,93,95,97,98,99,104,109,110,111,115,116,119,120,124,125,168,171,172,186,190,204,215,217,246,247,248,249,254,255,256,257,258,259,260,267,279,304,],[-30,-26,-27,-28,-31,-78,-70,-86,-77,-25,-74,-83,-71,-88,-58,177,-80,-85,-61,-81,-84,-75,-87,-89,-82,-64,-90,-29,-72,-77,-73,-68,-69,-91,-33,-63,-62,-60,-59,177,177,177,177,-65,-66,-67,-76,-32,-79,]),'TOK_lcurly':([5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,29,31,32,34,35,37,41,42,46,47,48,49,50,53,55,56,57,58,60,61,70,74,75,76,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,103,104,105,107,108,109,110,111,113,114,115,116,117,118,119,120,124,125,126,127,128,132,133,135,137,138,147,158,160,162,168,171,172,186,190,196,198,199,200,201,202,204,206,213,215,217,221,229,230,231,232,234,235,236,237,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,267,268,269,279,281,285,289,291,302,304,305,314,321,324,326,327,334,337,340,344,346,348,],[-5,14,-4,14,-200,-30,-7,14,-6,-166,-186,-98,-97,-200,-96,-99,-143,-11,-137,-138,-26,-15,-16,-145,-140,-14,-141,-13,-27,-28,14,-144,-164,14,-142,-139,-168,-200,-169,-8,-31,-200,-188,-146,-199,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-134,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-187,-106,-75,-87,-48,-105,-89,-82,-64,-90,-104,-40,-198,-102,-12,-183,-167,-184,-24,-191,-190,-182,-29,-72,-77,-73,-68,-122,-124,-123,-126,-125,-121,-69,-165,-170,-91,-33,14,-189,-120,-119,-127,-181,-129,-128,14,-49,-47,-45,-63,-62,-60,-59,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,14,-32,-155,-192,-137,-149,-132,-79,-154,14,-136,-185,-130,-150,14,-23,-133,-131,14,-135,]),'KW_by':([12,29,46,47,70,83,84,85,86,87,88,89,90,91,93,94,95,97,98,99,102,103,104,105,107,108,109,110,111,115,116,117,119,120,124,125,127,147,154,168,171,172,186,190,204,215,217,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,267,268,279,304,325,337,],[-30,-26,-27,-28,-31,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-75,-87,-48,-89,-82,-64,-90,-40,-24,218,-29,-72,-77,-73,-68,-69,-91,-33,-49,-47,-45,-63,-62,-60,-59,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,-32,-79,-159,-23,]),'TOK_rcurly':([5,8,12,14,15,16,17,23,24,25,26,27,29,31,32,34,35,37,40,41,42,46,47,49,50,53,55,56,61,70,76,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,103,104,105,107,108,109,110,111,113,114,115,116,117,118,119,120,124,125,126,127,128,132,133,147,168,171,172,186,190,204,206,215,217,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,267,268,279,281,289,291,302,304,305,321,327,337,340,344,348,],[-5,-4,-30,-200,-6,-166,-186,-143,-11,-137,61,-138,-26,-15,-16,-145,-140,-14,-10,-141,-13,-27,-28,-144,-164,-9,-142,-139,-8,-31,-146,-199,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-134,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-187,-106,-75,-87,-48,-105,-89,-82,-64,-90,-104,-40,-198,-102,-12,-24,-29,-72,-77,-73,-68,-69,-165,-91,-33,-49,-47,-45,-63,-62,-60,-59,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,-32,-155,-137,-149,-132,-79,-154,-136,-150,-23,-133,-131,-135,]),'KW_class':([0,1,2,5,8,10,12,14,15,16,17,23,24,25,27,29,31,32,34,35,37,41,42,46,47,49,50,53,55,56,61,70,76,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,103,104,105,107,108,109,110,111,113,114,115,116,117,118,119,120,124,125,126,127,128,132,133,147,168,171,172,186,190,204,206,215,217,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,267,268,279,281,289,291,302,304,305,321,327,337,340,344,348,],[3,-2,3,-5,-4,-3,-30,3,-6,-166,-186,-143,-11,-137,-138,-26,-15,-16,-145,-140,-14,-141,-13,-27,-28,-144,-164,3,-142,-139,-8,-31,-146,-199,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-134,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-187,-106,-75,-87,-48,-105,-89,-82,-64,-90,-104,-40,-198,-102,-12,-24,-29,-72,-77,-73,-68,-69,-165,-91,-33,-49,-47,-45,-63,-62,-60,-59,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,-32,-155,-137,-149,-132,-79,-154,-136,-150,-23,-133,-131,-135,]),'KW_return':([5,8,12,14,15,16,17,23,24,25,27,29,31,32,34,35,37,41,42,46,47,49,50,53,55,56,61,70,76,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,103,104,105,107,108,109,110,111,113,114,115,116,117,118,119,120,124,125,126,127,128,132,133,147,168,171,172,186,190,204,206,215,217,221,237,243,244,245,246,247,248,249,253,254,255,256,257,258,259,260,261,262,267,268,269,279,281,289,291,302,304,305,314,321,327,334,337,340,344,346,348,],[-5,-4,-30,51,-6,-166,-186,-143,-11,-137,-138,-26,-15,-16,-145,-140,-14,-141,-13,-27,-28,-144,-164,51,-142,-139,-8,-31,-146,-199,-46,-44,-78,-70,-86,-77,-25,-74,-83,-71,-42,-88,-134,-58,-53,-80,-21,-50,-85,-22,-19,-20,-61,-81,-84,-187,-106,-75,-87,-48,-105,-89,-82,-64,-90,-104,-40,-198,-102,-12,-24,-29,-72,-77,-73,-68,-69,-165,-91,-33,51,51,-49,-47,-45,-63,-62,-60,-59,-41,-56,-55,-57,-54,-65,-66,-67,-51,-52,-76,-43,51,-32,-155,-137,-149,-132,-79,-154,51,-136,-150,51,-23,-133,-131,51,-135,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_statement':([14,53,221,237,269,314,334,346,],[23,23,23,23,23,23,23,23,]),'variable_declaration_initializer':([48,272,294,329,342,],[82,307,316,335,347,]),'for_statement':([14,53,221,237,269,314,334,346,],[41,41,41,41,41,41,41,41,]),'array_access':([14,48,51,53,66,69,71,77,92,106,112,122,123,134,152,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,205,214,218,221,223,237,252,266,269,272,294,298,309,314,315,323,329,330,331,334,339,342,346,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'inclusive_or_expression':([48,51,66,69,71,77,122,134,152,178,181,194,205,214,218,223,252,272,294,298,309,315,323,329,330,331,339,342,],[94,94,94,94,94,94,94,94,94,94,94,94,268,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'while_statement':([14,53,221,237,269,314,334,346,],[35,35,35,35,35,35,35,35,]),'statement_expression':([14,53,221,237,269,314,334,346,],[38,38,38,38,38,38,38,38,]),'fun_param_clause':([73,],[158,]),'class_param_clause_question':([20,],[58,]),'variable_list':([166,270,],[242,306,]),'for_loop':([72,222,],[154,154,]),'local_variable_declaration_statement':([14,53,],[42,42,]),'compilation_unit':([0,],[4,]),'fun_param':([159,284,],[224,312,]),'class_initializer':([48,272,294,329,342,],[114,114,114,114,114,]),'array_data_type':([161,195,251,274,287,301,],[236,236,236,236,236,236,]),'int_float':([48,51,66,69,71,77,92,106,112,122,123,134,152,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,205,214,218,223,252,266,272,294,298,309,315,323,329,330,331,339,342,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'name':([3,14,36,48,51,53,66,69,71,77,81,92,101,106,112,122,123,134,136,152,161,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,195,205,214,218,221,223,237,251,252,266,269,272,274,287,294,298,301,309,314,315,323,329,330,331,334,339,342,346,],[11,46,73,46,46,46,46,46,46,46,168,46,180,46,46,46,46,46,208,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'qualified_id':([14,48,51,53,66,69,71,77,92,106,112,122,123,134,152,161,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,195,205,214,218,221,223,237,251,252,266,269,272,274,287,294,298,301,309,314,315,323,329,330,331,334,339,342,346,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'class_params':([59,],[142,]),'argument_list_question':([69,194,252,323,],[150,264,300,333,]),'variable_declarator_id':([140,159,284,],[209,227,227,]),'for_step_opts':([154,],[219,]),'conditional_and_expression':([48,51,66,69,71,77,122,134,152,178,181,194,214,218,223,252,272,294,298,309,315,323,329,330,331,339,342,],[127,127,127,127,127,127,127,127,127,127,253,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'unary_expression':([48,51,66,69,71,77,92,106,112,122,123,134,152,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,205,214,218,223,252,266,272,294,298,309,315,323,329,330,331,339,342,],[124,124,124,124,124,124,171,186,190,124,204,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,258,259,260,124,124,124,124,124,124,124,124,304,124,124,124,124,124,124,124,124,124,124,124,]),'block_stats_star':([14,],[26,]),'unary_expression_not_plus_minus':([48,51,66,69,71,77,92,106,112,122,123,134,152,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,205,214,218,223,252,266,272,294,298,309,315,323,329,330,331,339,342,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'object_declaration':([0,2,14,53,],[7,7,7,7,]),'c_literal':([48,51,66,69,71,77,92,106,112,122,123,134,152,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,205,214,218,223,252,266,272,294,298,309,315,323,329,330,331,339,342,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'class_template':([58,],[135,]),'multidimensional_array_initializer':([48,272,294,329,342,],[96,96,96,96,96,]),'reference_type':([161,195,251,274,287,301,],[230,230,230,230,230,230,]),'argument_list':([69,194,252,323,339,],[148,148,148,148,345,]),'class_template_question':([58,],[137,]),'conditional_or_expression':([48,51,66,69,71,77,122,134,152,178,194,214,218,223,252,272,294,298,309,315,323,329,330,331,339,342,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,338,102,102,]),'override_question':([59,211,],[143,143,]),'variable_declaration_body':([79,],[164,]),'class_param_clause':([20,],[57,]),'multiplicative_expression':([48,51,66,69,71,77,122,134,152,169,170,173,174,175,176,177,178,181,182,183,184,185,191,192,194,205,214,218,223,252,272,294,298,309,315,323,329,330,331,339,342,],[109,109,109,109,109,109,109,109,109,109,109,109,246,247,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'for_update':([72,222,],[156,156,]),'singleton_object':([0,2,14,53,],[8,8,8,8,]),'shift_expression':([48,51,66,69,71,77,122,134,152,169,170,173,178,181,182,183,184,185,191,192,194,205,214,218,223,252,272,294,298,309,315,323,329,330,331,339,342,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,254,255,256,257,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'expression_question':([51,],[130,]),'variable_literal':([48,51,66,69,71,77,92,106,112,122,123,134,152,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,205,214,218,223,252,266,272,294,298,309,315,323,329,330,331,339,342,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'fun_def':([36,],[75,]),'assignment_operator':([28,88,],[66,66,]),'block_stats':([14,],[53,]),'expression':([48,51,69,71,77,122,134,152,178,194,214,218,223,252,272,294,298,309,315,323,329,330,339,342,],[126,131,151,153,163,203,207,216,250,151,278,280,283,151,126,126,319,325,328,151,126,337,151,126,]),'block':([7,9,14,48,53,221,237,269,314,334,346,],[15,17,55,128,55,55,55,55,55,55,55,]),'if_then_else_statement':([14,53,221,237,269,314,334,346,],[56,56,56,56,56,56,56,56,]),'class_declaration_keyword_question':([59,211,],[140,140,]),'exclusive_or_expression':([48,51,66,69,71,77,122,134,152,173,178,181,194,205,214,218,223,252,272,294,298,309,315,323,329,330,331,339,342,],[84,84,84,84,84,84,84,84,84,245,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'primary':([48,51,66,69,71,77,92,106,112,122,123,134,152,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,205,214,218,223,252,266,272,294,298,309,315,323,329,330,331,339,342,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'if_then_else_intermediate':([237,334,346,],[290,341,349,]),'if_then_statement':([14,53,221,237,269,314,334,346,],[27,27,27,27,27,27,27,27,]),'left_hand_side':([14,48,51,53,66,69,71,77,92,106,112,122,123,134,152,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,205,214,218,221,223,237,252,266,269,272,294,298,309,314,315,323,329,330,331,334,339,342,346,],[28,88,88,28,88,88,88,88,172,172,172,88,172,88,88,172,172,172,172,172,172,172,88,172,172,172,172,172,172,172,172,172,172,88,172,88,88,28,88,28,88,172,28,88,88,88,88,28,88,88,88,88,172,28,88,88,28,]),'additive_expression':([48,51,66,69,71,77,122,134,152,169,170,173,176,177,178,181,182,183,184,185,191,192,194,205,214,218,223,252,272,294,298,309,315,323,329,330,331,339,342,],[97,97,97,97,97,97,97,97,97,97,97,97,248,249,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'class_and_obj_declaration':([0,2,14,53,],[1,10,31,31,]),'method_declaration':([14,53,],[32,32,]),'fun_params':([159,],[225,]),'primitive_type':([122,161,195,251,274,287,301,],[197,231,231,231,231,231,231,]),'literal':([48,51,66,69,71,77,92,106,112,122,123,134,152,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,205,214,218,223,252,266,272,294,298,309,315,323,329,330,331,339,342,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'relational_expression':([48,51,66,69,71,77,122,134,152,169,170,173,178,181,191,192,194,205,214,218,223,252,272,294,298,309,315,323,329,330,331,339,342,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,261,262,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'statement':([14,53,221,237,269,314,334,346,],[37,37,281,291,305,327,291,327,]),'method_invocation':([14,48,51,53,66,69,71,77,92,106,112,122,123,134,152,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,205,214,218,221,223,237,252,266,269,272,294,298,309,314,315,323,329,330,331,334,339,342,346,],[45,110,110,45,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,45,110,45,110,110,45,110,110,110,110,45,110,110,110,110,110,45,110,110,45,]),'type':([161,195,251,274,287,301,],[234,265,299,308,313,322,]),'empty':([11,14,20,51,53,58,59,69,74,143,154,159,165,194,209,211,227,240,252,323,],[22,40,60,129,22,138,146,149,162,22,220,228,162,149,273,276,273,162,149,149,]),'variable_argument_list':([329,],[336,]),'expr_question':([209,227,],[271,286,]),'declaration_keyword':([44,212,],[79,277,]),'class_body':([9,],[16,]),'modifier_question':([11,14,53,143,],[20,44,44,212,]),'override':([59,211,],[144,144,]),'cast_expression':([48,51,66,69,71,77,92,106,112,122,123,134,152,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,205,214,218,223,252,266,272,294,298,309,315,323,329,330,331,339,342,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'class_header':([0,2,14,53,],[9,9,9,9,]),'equality_expression':([48,51,66,69,71,77,122,134,152,169,170,173,178,181,194,205,214,218,223,252,272,294,298,309,315,323,329,330,331,339,342,],[117,117,117,117,117,117,117,117,117,243,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'method_header':([14,53,],[48,48,]),'empty_statement':([14,53,221,237,269,314,334,346,],[49,49,49,49,49,49,49,49,]),'variable_dec':([166,270,296,],[241,241,317,]),'local_variable_declaration':([14,53,],[52,52,]),'modifier':([11,14,53,143,],[18,18,18,18,]),'for_untilTo':([283,],[309,]),'if_then_else_statement_precedence':([237,334,346,],[288,288,288,]),'class_and_obj_declarations':([0,],[2,]),'block_stat':([14,53,],[24,133,]),'normal_statement':([14,53,221,237,269,314,334,346,],[25,25,25,289,25,25,289,289,]),'class_param':([59,211,],[141,275,]),'class_data_type':([161,195,251,274,287,301,],[232,232,232,232,232,232,]),'id':([14,48,51,53,66,69,71,77,92,106,112,122,123,134,152,161,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,195,205,214,218,221,223,237,251,252,266,269,272,274,287,294,298,301,309,314,315,323,329,330,331,334,339,342,346,],[30,89,89,30,89,89,89,89,89,89,89,89,89,89,89,235,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,235,89,89,89,30,89,30,235,89,89,30,89,235,235,89,89,235,89,30,89,89,89,89,89,30,89,89,30,]),'and_expression':([48,51,66,69,71,77,122,134,152,170,173,178,181,194,205,214,218,223,252,272,294,298,309,315,323,329,330,331,339,342,],[83,83,83,83,83,83,83,83,83,244,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'base_variable_set':([48,51,66,69,71,77,92,106,112,122,123,134,152,169,170,173,174,175,176,177,178,181,182,183,184,185,187,188,189,191,192,194,205,214,218,223,252,266,272,294,298,309,315,323,329,330,331,339,342,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'class_params_question':([59,],[145,]),'return_statement':([14,53,221,237,269,314,334,346,],[34,34,34,34,34,34,34,34,]),'if_else_expression':([48,51,66,69,71,77,122,134,152,178,194,214,218,223,252,272,294,298,309,315,323,329,330,339,342,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'assignment_expression':([48,51,66,69,71,77,122,134,152,178,194,214,218,223,252,272,294,298,309,315,323,329,330,339,342,],[107,107,147,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'assignment':([14,48,51,53,66,69,71,77,122,134,152,178,194,214,218,221,223,237,252,269,272,294,298,309,314,315,323,329,330,334,339,342,346,],[43,108,108,43,108,108,108,108,108,108,108,108,108,108,108,43,108,43,108,43,108,108,108,108,43,108,108,108,108,43,108,108,43,]),'for_logic':([72,222,],[155,282,]),'method_body':([48,],[113,]),'array_initializer':([48,272,294,329,342,],[118,118,118,118,118,]),'fun_sig':([36,],[74,]),'type_question':([74,165,240,],[160,239,295,]),'identifiers':([79,],[165,]),'class_declaration':([0,2,14,53,],[5,5,5,5,]),'fun_params_question':([159,],[226,]),'dimension':([30,89,],[70,70,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> compilation_unit","S'",1,None,None,None),
  ('compilation_unit -> class_and_obj_declarations','compilation_unit',1,'p_compilation_unit','Grammar4.py',19),
  ('class_and_obj_declarations -> class_and_obj_declaration','class_and_obj_declarations',1,'p_class_and_obj_declarations','Grammar4.py',26),
  ('class_and_obj_declarations -> class_and_obj_declarations class_and_obj_declaration','class_and_obj_declarations',2,'p_class_and_obj_declarations','Grammar4.py',27),
  ('class_and_obj_declaration -> singleton_object','class_and_obj_declaration',1,'p_class_and_obj_declaration','Grammar4.py',36),
  ('class_and_obj_declaration -> class_declaration','class_and_obj_declaration',1,'p_class_and_obj_declaration','Grammar4.py',37),
  ('singleton_object -> object_declaration block','singleton_object',2,'p_singleton_object','Grammar4.py',42),
  ('object_declaration -> KW_obj TOK_identifier','object_declaration',2,'p_object_declaration','Grammar4.py',47),
  ('block -> TOK_lcurly block_stats_star TOK_rcurly','block',3,'p_block','Grammar4.py',62),
  ('block_stats_star -> block_stats','block_stats_star',1,'p_block_stats_star','Grammar4.py',69),
  ('block_stats_star -> empty','block_stats_star',1,'p_block_stats_star','Grammar4.py',70),
  ('block_stats -> block_stat','block_stats',1,'p_block_stats','Grammar4.py',75),
  ('block_stats -> block_stats block_stat','block_stats',2,'p_block_stats','Grammar4.py',76),
  ('block_stat -> local_variable_declaration_statement','block_stat',1,'p_block_stat','Grammar4.py',85),
  ('block_stat -> statement','block_stat',1,'p_block_stat','Grammar4.py',86),
  ('block_stat -> class_and_obj_declaration','block_stat',1,'p_block_stat','Grammar4.py',87),
  ('block_stat -> method_declaration','block_stat',1,'p_block_stat','Grammar4.py',88),
  ('expression_question -> expression','expression_question',1,'p_expression_question','Grammar4.py',95),
  ('expression_question -> empty','expression_question',1,'p_expression_question','Grammar4.py',96),
  ('expression -> assignment_expression','expression',1,'p_expression','Grammar4.py',102),
  ('assignment_expression -> assignment','assignment_expression',1,'p_assignment_expression','Grammar4.py',108),
  ('assignment_expression -> conditional_or_expression','assignment_expression',1,'p_assignment_expression','Grammar4.py',109),
  ('assignment_expression -> if_else_expression','assignment_expression',1,'p_assignment_expression','Grammar4.py',110),
  ('if_else_expression -> KW_if TOK_paraleft expression TOK_pararight expression KW_else expression','if_else_expression',7,'p_if_else_expression','Grammar4.py',117),
  ('assignment -> left_hand_side assignment_operator assignment_expression','assignment',3,'p_assignment','Grammar4.py',127),
  ('left_hand_side -> id','left_hand_side',1,'p_left_hand_side','Grammar4.py',132),
  ('left_hand_side -> array_access','left_hand_side',1,'p_left_hand_side','Grammar4.py',133),
  ('id -> name','id',1,'p_id','Grammar4.py',139),
  ('id -> qualified_id','id',1,'p_id','Grammar4.py',140),
  ('qualified_id -> name TOK_dot name','qualified_id',3,'p_qualified_id','Grammar4.py',145),
  ('name -> TOK_identifier','name',1,'p_name','Grammar4.py',151),
  ('array_access -> id dimension','array_access',2,'p_array_access','Grammar4.py',157),
  ('dimension -> dimension TOK_lsqb expression TOK_rsqb','dimension',4,'p_dimension','Grammar4.py',162),
  ('dimension -> TOK_lsqb expression TOK_rsqb','dimension',3,'p_dimension','Grammar4.py',163),
  ('assignment_operator -> TOK_assignment','assignment_operator',1,'p_assignment_operator','Grammar4.py',177),
  ('assignment_operator -> TOK_mulassign','assignment_operator',1,'p_assignment_operator','Grammar4.py',178),
  ('assignment_operator -> TOK_divassign','assignment_operator',1,'p_assignment_operator','Grammar4.py',179),
  ('assignment_operator -> TOK_modassign','assignment_operator',1,'p_assignment_operator','Grammar4.py',180),
  ('assignment_operator -> TOK_addassign','assignment_operator',1,'p_assignment_operator','Grammar4.py',181),
  ('assignment_operator -> TOK_subassign','assignment_operator',1,'p_assignment_operator','Grammar4.py',182),
  ('conditional_or_expression -> conditional_and_expression','conditional_or_expression',1,'p_conditional_or_expression','Grammar4.py',188),
  ('conditional_or_expression -> conditional_or_expression TOK_or conditional_and_expression','conditional_or_expression',3,'p_conditional_or_expression','Grammar4.py',189),
  ('conditional_and_expression -> inclusive_or_expression','conditional_and_expression',1,'p_conditional_and_expression','Grammar4.py',200),
  ('conditional_and_expression -> conditional_and_expression TOK_and inclusive_or_expression','conditional_and_expression',3,'p_conditional_and_expression','Grammar4.py',201),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','Grammar4.py',209),
  ('inclusive_or_expression -> inclusive_or_expression TOK_or_bitwise exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','Grammar4.py',210),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','Grammar4.py',220),
  ('exclusive_or_expression -> exclusive_or_expression TOK_xor and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','Grammar4.py',221),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','Grammar4.py',231),
  ('and_expression -> and_expression TOK_and_bitwise equality_expression','and_expression',3,'p_and_expression','Grammar4.py',232),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','Grammar4.py',243),
  ('equality_expression -> equality_expression TOK_equal relational_expression','equality_expression',3,'p_equality_expression','Grammar4.py',244),
  ('equality_expression -> equality_expression TOK_nequal relational_expression','equality_expression',3,'p_equality_expression','Grammar4.py',245),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','Grammar4.py',256),
  ('relational_expression -> relational_expression TOK_greater shift_expression','relational_expression',3,'p_relational_expression','Grammar4.py',257),
  ('relational_expression -> relational_expression TOK_lesser shift_expression','relational_expression',3,'p_relational_expression','Grammar4.py',258),
  ('relational_expression -> relational_expression TOK_geq shift_expression','relational_expression',3,'p_relational_expression','Grammar4.py',259),
  ('relational_expression -> relational_expression TOK_leq shift_expression','relational_expression',3,'p_relational_expression','Grammar4.py',260),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','Grammar4.py',271),
  ('shift_expression -> shift_expression TOK_lshift additive_expression','shift_expression',3,'p_shift_expression','Grammar4.py',272),
  ('shift_expression -> shift_expression TOK_rshift additive_expression','shift_expression',3,'p_shift_expression','Grammar4.py',273),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','Grammar4.py',285),
  ('additive_expression -> additive_expression TOK_plus multiplicative_expression','additive_expression',3,'p_additive_expression','Grammar4.py',286),
  ('additive_expression -> additive_expression TOK_minus multiplicative_expression','additive_expression',3,'p_additive_expression','Grammar4.py',287),
  ('multiplicative_expression -> unary_expression','multiplicative_expression',1,'p_multiplicative_expression','Grammar4.py',297),
  ('multiplicative_expression -> multiplicative_expression TOK_times unary_expression','multiplicative_expression',3,'p_multiplicative_expression','Grammar4.py',298),
  ('multiplicative_expression -> multiplicative_expression TOK_divide unary_expression','multiplicative_expression',3,'p_multiplicative_expression','Grammar4.py',299),
  ('multiplicative_expression -> multiplicative_expression TOK_modulus unary_expression','multiplicative_expression',3,'p_multiplicative_expression','Grammar4.py',300),
  ('unary_expression -> TOK_plus unary_expression','unary_expression',2,'p_unary_expression','Grammar4.py',310),
  ('unary_expression -> TOK_minus unary_expression','unary_expression',2,'p_unary_expression','Grammar4.py',311),
  ('unary_expression -> unary_expression_not_plus_minus','unary_expression',1,'p_unary_expression','Grammar4.py',312),
  ('unary_expression_not_plus_minus -> base_variable_set','unary_expression_not_plus_minus',1,'p_unary_expression_not_plus_minus','Grammar4.py',323),
  ('unary_expression_not_plus_minus -> TOK_tilda unary_expression','unary_expression_not_plus_minus',2,'p_unary_expression_not_plus_minus','Grammar4.py',324),
  ('unary_expression_not_plus_minus -> TOK_not unary_expression','unary_expression_not_plus_minus',2,'p_unary_expression_not_plus_minus','Grammar4.py',325),
  ('unary_expression_not_plus_minus -> cast_expression','unary_expression_not_plus_minus',1,'p_unary_expression_not_plus_minus','Grammar4.py',326),
  ('base_variable_set -> variable_literal','base_variable_set',1,'p_base_variable_set','Grammar4.py',337),
  ('base_variable_set -> TOK_paraleft expression TOK_pararight','base_variable_set',3,'p_base_variable_set','Grammar4.py',338),
  ('variable_literal -> left_hand_side','variable_literal',1,'p_variable_literal','Grammar4.py',350),
  ('variable_literal -> primary','variable_literal',1,'p_variable_literal','Grammar4.py',351),
  ('cast_expression -> TOK_paraleft primitive_type TOK_pararight unary_expression','cast_expression',4,'p_cast_expression','Grammar4.py',357),
  ('primary -> literal','primary',1,'p_primary','Grammar4.py',365),
  ('primary -> method_invocation','primary',1,'p_primary','Grammar4.py',366),
  ('literal -> int_float','literal',1,'p_literal','Grammar4.py',373),
  ('literal -> c_literal','literal',1,'p_literal','Grammar4.py',374),
  ('c_literal -> TOK_char','c_literal',1,'p_c_literal','Grammar4.py',380),
  ('c_literal -> TOK_string','c_literal',1,'p_c_literal','Grammar4.py',381),
  ('c_literal -> KW_true','c_literal',1,'p_c_literal','Grammar4.py',382),
  ('c_literal -> KW_false','c_literal',1,'p_c_literal','Grammar4.py',383),
  ('c_literal -> KW_null','c_literal',1,'p_c_literal','Grammar4.py',384),
  ('int_float -> TOK_float','int_float',1,'p_int_float','Grammar4.py',392),
  ('int_float -> TOK_int','int_float',1,'p_int_float','Grammar4.py',393),
  ('method_invocation -> id TOK_paraleft argument_list_question TOK_pararight','method_invocation',4,'p_method_invocation','Grammar4.py',401),
  ('argument_list -> expression','argument_list',1,'p_argument_list','Grammar4.py',411),
  ('argument_list -> argument_list TOK_comma expression','argument_list',3,'p_argument_list','Grammar4.py',412),
  ('argument_list_question -> argument_list','argument_list_question',1,'p_argument_list_question','Grammar4.py',423),
  ('argument_list_question -> empty','argument_list_question',1,'p_argument_list_question','Grammar4.py',424),
  ('modifier -> KW_protected','modifier',1,'p_modifier','Grammar4.py',432),
  ('modifier -> KW_private','modifier',1,'p_modifier','Grammar4.py',433),
  ('modifier_question -> modifier','modifier_question',1,'p_modifier_question','Grammar4.py',439),
  ('modifier_question -> empty','modifier_question',1,'p_modifier_question','Grammar4.py',440),
  ('declaration_keyword -> KW_var','declaration_keyword',1,'p_declaration_keyword','Grammar4.py',446),
  ('declaration_keyword -> KW_val','declaration_keyword',1,'p_declaration_keyword','Grammar4.py',447),
  ('local_variable_declaration_statement -> local_variable_declaration TOK_semi','local_variable_declaration_statement',2,'p_local_variable_declaration_statement','Grammar4.py',454),
  ('local_variable_declaration -> modifier_question declaration_keyword variable_declaration_body','local_variable_declaration',3,'p_local_variable_declaration','Grammar4.py',460),
  ('variable_declaration_initializer -> expression','variable_declaration_initializer',1,'p_variable_declaration_initializer','Grammar4.py',466),
  ('variable_declaration_initializer -> array_initializer','variable_declaration_initializer',1,'p_variable_declaration_initializer','Grammar4.py',467),
  ('variable_declaration_initializer -> class_initializer','variable_declaration_initializer',1,'p_variable_declaration_initializer','Grammar4.py',468),
  ('variable_argument_list -> variable_declaration_initializer','variable_argument_list',1,'p_variable_argument_list','Grammar4.py',474),
  ('variable_argument_list -> variable_argument_list TOK_comma variable_declaration_initializer','variable_argument_list',3,'p_variable_argument_list','Grammar4.py',475),
  ('variable_declaration_body -> identifiers type_question TOK_assignment variable_declaration_initializer','variable_declaration_body',4,'p_variable_argument_body','Grammar4.py',486),
  ('variable_declaration_body -> TOK_paraleft variable_list TOK_pararight TOK_assignment TOK_paraleft variable_argument_list TOK_pararight','variable_declaration_body',7,'p_variable_argument_body','Grammar4.py',487),
  ('identifiers -> identifiers TOK_comma TOK_identifier','identifiers',3,'p_identifiers','Grammar4.py',503),
  ('identifiers -> TOK_identifier','identifiers',1,'p_identifiers','Grammar4.py',504),
  ('variable_list -> variable_dec','variable_list',1,'p_variable_list','Grammar4.py',516),
  ('variable_list -> variable_list TOK_comma variable_dec','variable_list',3,'p_variable_list','Grammar4.py',517),
  ('variable_dec -> TOK_identifier type_question','variable_dec',2,'p_variable_dec','Grammar4.py',527),
  ('expr_question -> TOK_assignment variable_declaration_initializer','expr_question',2,'p_expr_question','Grammar4.py',533),
  ('expr_question -> empty','expr_question',1,'p_expr_question','Grammar4.py',534),
  ('variable_declarator_id -> TOK_identifier TOK_colon type','variable_declarator_id',3,'p_variable_declarator_id','Grammar4.py',545),
  ('type -> primitive_type','type',1,'p_type','Grammar4.py',561),
  ('type -> reference_type','type',1,'p_type','Grammar4.py',562),
  ('primitive_type -> KW_int','primitive_type',1,'p_primitive_type','Grammar4.py',569),
  ('primitive_type -> KW_double','primitive_type',1,'p_primitive_type','Grammar4.py',570),
  ('primitive_type -> KW_char','primitive_type',1,'p_primitive_type','Grammar4.py',571),
  ('primitive_type -> KW_string','primitive_type',1,'p_primitive_type','Grammar4.py',572),
  ('primitive_type -> KW_boolean','primitive_type',1,'p_primitive_type','Grammar4.py',573),
  ('primitive_type -> KW_void','primitive_type',1,'p_primitive_type','Grammar4.py',574),
  ('reference_type -> class_data_type','reference_type',1,'p_reference_type','Grammar4.py',582),
  ('reference_type -> array_data_type','reference_type',1,'p_reference_type','Grammar4.py',583),
  ('class_data_type -> id','class_data_type',1,'p_class_data_type','Grammar4.py',590),
  ('array_data_type -> KW_array TOK_lsqb type TOK_rsqb','array_data_type',4,'p_array_data_type','Grammar4.py',596),
  ('array_initializer -> KW_new KW_array TOK_lsqb type TOK_rsqb TOK_paraleft conditional_or_expression TOK_pararight','array_initializer',8,'p_array_initializer','Grammar4.py',607),
  ('array_initializer -> KW_array TOK_paraleft argument_list_question TOK_pararight','array_initializer',4,'p_array_initializer','Grammar4.py',608),
  ('array_initializer -> KW_array TOK_lsqb type TOK_rsqb TOK_paraleft argument_list_question TOK_pararight','array_initializer',7,'p_array_initializer','Grammar4.py',609),
  ('array_initializer -> multidimensional_array_initializer','array_initializer',1,'p_array_initializer','Grammar4.py',610),
  ('multidimensional_array_initializer -> KW_array TOK_dot KW_ofdim TOK_lsqb type TOK_rsqb TOK_paraleft argument_list TOK_pararight','multidimensional_array_initializer',9,'p_multidimensional_array_initializer','Grammar4.py',638),
  ('class_initializer -> KW_new name TOK_paraleft argument_list_question TOK_pararight','class_initializer',5,'p_class_initializer','Grammar4.py',651),
  ('statement -> normal_statement','statement',1,'p_statement','Grammar4.py',660),
  ('statement -> if_then_statement','statement',1,'p_statement','Grammar4.py',661),
  ('statement -> if_then_else_statement','statement',1,'p_statement','Grammar4.py',662),
  ('statement -> while_statement','statement',1,'p_statement','Grammar4.py',663),
  ('statement -> for_statement','statement',1,'p_statement','Grammar4.py',664),
  ('normal_statement -> block','normal_statement',1,'p_normal_statement','Grammar4.py',669),
  ('normal_statement -> expression_statement','normal_statement',1,'p_normal_statement','Grammar4.py',670),
  ('normal_statement -> empty_statement','normal_statement',1,'p_normal_statement','Grammar4.py',671),
  ('normal_statement -> return_statement','normal_statement',1,'p_normal_statement','Grammar4.py',672),
  ('expression_statement -> statement_expression TOK_semi','expression_statement',2,'p_expression_statement','Grammar4.py',677),
  ('statement_expression -> assignment','statement_expression',1,'p_statement_expression','Grammar4.py',684),
  ('statement_expression -> method_invocation','statement_expression',1,'p_statement_expression','Grammar4.py',685),
  ('if_then_statement -> KW_if TOK_paraleft expression TOK_pararight statement','if_then_statement',5,'p_if_then_statement','Grammar4.py',692),
  ('if_then_else_statement -> KW_if TOK_paraleft expression TOK_pararight if_then_else_intermediate KW_else statement','if_then_else_statement',7,'p_if_then_else_statement','Grammar4.py',700),
  ('if_then_else_statement_precedence -> KW_if TOK_paraleft expression TOK_pararight if_then_else_intermediate KW_else if_then_else_intermediate','if_then_else_statement_precedence',7,'p_if_then_else_statement_precedence','Grammar4.py',710),
  ('if_then_else_intermediate -> normal_statement','if_then_else_intermediate',1,'p_if_then_else_intermediate','Grammar4.py',720),
  ('if_then_else_intermediate -> if_then_else_statement_precedence','if_then_else_intermediate',1,'p_if_then_else_intermediate','Grammar4.py',721),
  ('while_statement -> KW_while TOK_paraleft expression TOK_pararight statement','while_statement',5,'p_while_statement','Grammar4.py',726),
  ('for_statement -> KW_for TOK_paraleft for_logic TOK_pararight statement','for_statement',5,'p_for_statement','Grammar4.py',736),
  ('for_logic -> for_update','for_logic',1,'p_for_logic','Grammar4.py',745),
  ('for_logic -> for_update TOK_semi for_logic','for_logic',3,'p_for_logic','Grammar4.py',746),
  ('for_update -> for_loop for_step_opts','for_update',2,'p_for_update','Grammar4.py',757),
  ('for_loop -> TOK_identifier TOK_choose expression for_untilTo expression','for_loop',5,'p_for_loop','Grammar4.py',763),
  ('for_untilTo -> KW_until','for_untilTo',1,'p_for_untilTo','Grammar4.py',771),
  ('for_untilTo -> KW_to','for_untilTo',1,'p_for_untilTo','Grammar4.py',772),
  ('for_step_opts -> KW_by expression','for_step_opts',2,'p_for_step_opts','Grammar4.py',779),
  ('for_step_opts -> empty','for_step_opts',1,'p_for_step_opts','Grammar4.py',780),
  ('empty_statement -> TOK_semi','empty_statement',1,'p_empty_statement','Grammar4.py',791),
  ('return_statement -> KW_return expression_question TOK_semi','return_statement',3,'p_return_statement','Grammar4.py',797),
  ('class_declaration -> class_header class_body','class_declaration',2,'p_class_declaration','Grammar4.py',806),
  ('class_header -> KW_class name modifier_question class_param_clause_question class_template_question','class_header',5,'p_class_header','Grammar4.py',811),
  ('class_param_clause_question -> class_param_clause','class_param_clause_question',1,'p_class_param_clause_question','Grammar4.py',818),
  ('class_param_clause_question -> empty','class_param_clause_question',1,'p_class_param_clause_question','Grammar4.py',819),
  ('class_param_clause -> TOK_paraleft class_params_question TOK_pararight','class_param_clause',3,'p_class_param_clause','Grammar4.py',825),
  ('class_params_question -> class_params','class_params_question',1,'p_class_params_question','Grammar4.py',833),
  ('class_params_question -> empty','class_params_question',1,'p_class_params_question','Grammar4.py',834),
  ('class_params -> class_param','class_params',1,'p_class_params','Grammar4.py',840),
  ('class_params -> class_params TOK_comma class_param','class_params',3,'p_class_params','Grammar4.py',841),
  ('class_param -> class_declaration_keyword_question variable_declarator_id expr_question','class_param',3,'p_class_param','Grammar4.py',852),
  ('override_question -> override','override_question',1,'p_override_question','Grammar4.py',858),
  ('override_question -> empty','override_question',1,'p_override_question','Grammar4.py',859),
  ('override -> KW_override','override',1,'p_override','Grammar4.py',865),
  ('class_declaration_keyword_question -> override_question modifier_question declaration_keyword','class_declaration_keyword_question',3,'p_class_declaration_keyword_question','Grammar4.py',872),
  ('class_declaration_keyword_question -> empty','class_declaration_keyword_question',1,'p_class_declaration_keyword_question','Grammar4.py',873),
  ('type_question -> TOK_colon type','type_question',2,'p_type_question','Grammar4.py',883),
  ('type_question -> empty','type_question',1,'p_type_question','Grammar4.py',884),
  ('class_template_question -> class_template','class_template_question',1,'p_class_template_question','Grammar4.py',895),
  ('class_template_question -> empty','class_template_question',1,'p_class_template_question','Grammar4.py',896),
  ('class_template -> KW_extends name TOK_paraleft variable_list TOK_pararight','class_template',5,'p_class_template','Grammar4.py',902),
  ('class_body -> block','class_body',1,'p_class_body','Grammar4.py',911),
  ('method_declaration -> method_header method_body','method_declaration',2,'p_method_declaration','Grammar4.py',919),
  ('method_header -> KW_def fun_def','method_header',2,'p_method_header','Grammar4.py',925),
  ('fun_def -> fun_sig type_question TOK_assignment','fun_def',3,'p_fun_def','Grammar4.py',932),
  ('fun_def -> fun_sig type_question','fun_def',2,'p_fun_def','Grammar4.py',933),
  ('fun_sig -> name fun_param_clause','fun_sig',2,'p_fun_sig','Grammar4.py',945),
  ('fun_param_clause -> TOK_paraleft fun_params_question TOK_pararight','fun_param_clause',3,'p_fun_param_clause','Grammar4.py',951),
  ('fun_params_question -> fun_params','fun_params_question',1,'p_fun_params_question','Grammar4.py',959),
  ('fun_params_question -> empty','fun_params_question',1,'p_fun_params_question','Grammar4.py',960),
  ('fun_params -> fun_param','fun_params',1,'p_fun_params','Grammar4.py',966),
  ('fun_params -> fun_params TOK_comma fun_param','fun_params',3,'p_fun_params','Grammar4.py',967),
  ('fun_param -> variable_declarator_id expr_question','fun_param',2,'p_fun_param','Grammar4.py',977),
  ('method_body -> block','method_body',1,'p_method_body','Grammar4.py',982),
  ('method_body -> variable_declaration_initializer','method_body',1,'p_method_body','Grammar4.py',983),
  ('empty -> <empty>','empty',0,'p_empty','Grammar4.py',990),
]
